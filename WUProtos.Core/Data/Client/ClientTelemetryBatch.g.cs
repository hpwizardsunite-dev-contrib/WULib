// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientTelemetryBatch.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientTelemetryBatch.proto</summary>
  public static partial class ClientTelemetryBatchReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientTelemetryBatch.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientTelemetryBatchReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9XVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRUZWxlbWV0cnlCYXRjaC5w",
            "cm90bxIUV1VQcm90b3MuRGF0YS5DbGllbnQi6wMKFENsaWVudFRlbGVtZXRy",
            "eUJhdGNoElcKEnRlbGVtZXRyeV9zY29wZV9pZBgBIAEoDjI7LldVUHJvdG9z",
            "LkRhdGEuQ2xpZW50LkNsaWVudFRlbGVtZXRyeUJhdGNoLlRlbGVtZXRyeVNj",
            "b3BlSWQSUAoGZXZlbnRzGAIgAygLMkAuV1VQcm90b3MuRGF0YS5DbGllbnQu",
            "Q2xpZW50VGVsZW1ldHJ5QmF0Y2guQ2xpZW50VGVsZW1ldHJ5UmVjb3JkElEK",
            "B21ldHJpY3MYAyADKAsyQC5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRU",
            "ZWxlbWV0cnlCYXRjaC5DbGllbnRUZWxlbWV0cnlSZWNvcmQSEwoLYXBpX3Zl",
            "cnNpb24YBCABKAkSFwoPbWVzc2FnZV92ZXJzaW9uGAUgASgJGnMKFUNsaWVu",
            "dFRlbGVtZXRyeVJlY29yZBIRCglyZWNvcmRfaWQYASABKAkSFwoPZW5jb2Rl",
            "ZF9tZXNzYWdlGAIgASgMEhsKE2NsaWVudF90aW1lc3RhbXBfbXMYAyABKAMS",
            "EQoJbWV0cmljX2lkGAQgASgDIjIKEFRlbGVtZXRyeVNjb3BlSWQSCQoFVU5T",
            "RVQQABIJCgVESVRUTxABEggKBEdBTUUQAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientTelemetryBatch), global::WUProtos.Data.Client.ClientTelemetryBatch.Parser, new[]{ "TelemetryScopeId", "Events", "Metrics", "ApiVersion", "MessageVersion" }, null, new[]{ typeof(global::WUProtos.Data.Client.ClientTelemetryBatch.Types.TelemetryScopeId) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientTelemetryBatch.Types.ClientTelemetryRecord), global::WUProtos.Data.Client.ClientTelemetryBatch.Types.ClientTelemetryRecord.Parser, new[]{ "RecordId", "EncodedMessage", "ClientTimestampMs", "MetricId" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientTelemetryBatch : pb::IMessage<ClientTelemetryBatch> {
    private static readonly pb::MessageParser<ClientTelemetryBatch> _parser = new pb::MessageParser<ClientTelemetryBatch>(() => new ClientTelemetryBatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientTelemetryBatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientTelemetryBatchReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientTelemetryBatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientTelemetryBatch(ClientTelemetryBatch other) : this() {
      telemetryScopeId_ = other.telemetryScopeId_;
      events_ = other.events_.Clone();
      metrics_ = other.metrics_.Clone();
      apiVersion_ = other.apiVersion_;
      messageVersion_ = other.messageVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientTelemetryBatch Clone() {
      return new ClientTelemetryBatch(this);
    }

    /// <summary>Field number for the "telemetry_scope_id" field.</summary>
    public const int TelemetryScopeIdFieldNumber = 1;
    private global::WUProtos.Data.Client.ClientTelemetryBatch.Types.TelemetryScopeId telemetryScopeId_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientTelemetryBatch.Types.TelemetryScopeId TelemetryScopeId {
      get { return telemetryScopeId_; }
      set {
        telemetryScopeId_ = value;
      }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientTelemetryBatch.Types.ClientTelemetryRecord> _repeated_events_codec
        = pb::FieldCodec.ForMessage(18, global::WUProtos.Data.Client.ClientTelemetryBatch.Types.ClientTelemetryRecord.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientTelemetryBatch.Types.ClientTelemetryRecord> events_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientTelemetryBatch.Types.ClientTelemetryRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.Client.ClientTelemetryBatch.Types.ClientTelemetryRecord> Events {
      get { return events_; }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientTelemetryBatch.Types.ClientTelemetryRecord> _repeated_metrics_codec
        = pb::FieldCodec.ForMessage(26, global::WUProtos.Data.Client.ClientTelemetryBatch.Types.ClientTelemetryRecord.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientTelemetryBatch.Types.ClientTelemetryRecord> metrics_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientTelemetryBatch.Types.ClientTelemetryRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.Client.ClientTelemetryBatch.Types.ClientTelemetryRecord> Metrics {
      get { return metrics_; }
    }

    /// <summary>Field number for the "api_version" field.</summary>
    public const int ApiVersionFieldNumber = 4;
    private string apiVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApiVersion {
      get { return apiVersion_; }
      set {
        apiVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message_version" field.</summary>
    public const int MessageVersionFieldNumber = 5;
    private string messageVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MessageVersion {
      get { return messageVersion_; }
      set {
        messageVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientTelemetryBatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientTelemetryBatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TelemetryScopeId != other.TelemetryScopeId) return false;
      if(!events_.Equals(other.events_)) return false;
      if(!metrics_.Equals(other.metrics_)) return false;
      if (ApiVersion != other.ApiVersion) return false;
      if (MessageVersion != other.MessageVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TelemetryScopeId != 0) hash ^= TelemetryScopeId.GetHashCode();
      hash ^= events_.GetHashCode();
      hash ^= metrics_.GetHashCode();
      if (ApiVersion.Length != 0) hash ^= ApiVersion.GetHashCode();
      if (MessageVersion.Length != 0) hash ^= MessageVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TelemetryScopeId != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TelemetryScopeId);
      }
      events_.WriteTo(output, _repeated_events_codec);
      metrics_.WriteTo(output, _repeated_metrics_codec);
      if (ApiVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ApiVersion);
      }
      if (MessageVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MessageVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TelemetryScopeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TelemetryScopeId);
      }
      size += events_.CalculateSize(_repeated_events_codec);
      size += metrics_.CalculateSize(_repeated_metrics_codec);
      if (ApiVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiVersion);
      }
      if (MessageVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientTelemetryBatch other) {
      if (other == null) {
        return;
      }
      if (other.TelemetryScopeId != 0) {
        TelemetryScopeId = other.TelemetryScopeId;
      }
      events_.Add(other.events_);
      metrics_.Add(other.metrics_);
      if (other.ApiVersion.Length != 0) {
        ApiVersion = other.ApiVersion;
      }
      if (other.MessageVersion.Length != 0) {
        MessageVersion = other.MessageVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TelemetryScopeId = (global::WUProtos.Data.Client.ClientTelemetryBatch.Types.TelemetryScopeId) input.ReadEnum();
            break;
          }
          case 18: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
          case 26: {
            metrics_.AddEntriesFrom(input, _repeated_metrics_codec);
            break;
          }
          case 34: {
            ApiVersion = input.ReadString();
            break;
          }
          case 42: {
            MessageVersion = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ClientTelemetryBatch message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum TelemetryScopeId {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("DITTO")] Ditto = 1,
        [pbr::OriginalName("GAME")] Game = 2,
      }

      public sealed partial class ClientTelemetryRecord : pb::IMessage<ClientTelemetryRecord> {
        private static readonly pb::MessageParser<ClientTelemetryRecord> _parser = new pb::MessageParser<ClientTelemetryRecord>(() => new ClientTelemetryRecord());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientTelemetryRecord> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientTelemetryBatch.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientTelemetryRecord() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientTelemetryRecord(ClientTelemetryRecord other) : this() {
          recordId_ = other.recordId_;
          encodedMessage_ = other.encodedMessage_;
          clientTimestampMs_ = other.clientTimestampMs_;
          metricId_ = other.metricId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientTelemetryRecord Clone() {
          return new ClientTelemetryRecord(this);
        }

        /// <summary>Field number for the "record_id" field.</summary>
        public const int RecordIdFieldNumber = 1;
        private string recordId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RecordId {
          get { return recordId_; }
          set {
            recordId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "encoded_message" field.</summary>
        public const int EncodedMessageFieldNumber = 2;
        private pb::ByteString encodedMessage_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString EncodedMessage {
          get { return encodedMessage_; }
          set {
            encodedMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "client_timestamp_ms" field.</summary>
        public const int ClientTimestampMsFieldNumber = 3;
        private long clientTimestampMs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ClientTimestampMs {
          get { return clientTimestampMs_; }
          set {
            clientTimestampMs_ = value;
          }
        }

        /// <summary>Field number for the "metric_id" field.</summary>
        public const int MetricIdFieldNumber = 4;
        private long metricId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MetricId {
          get { return metricId_; }
          set {
            metricId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientTelemetryRecord);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientTelemetryRecord other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RecordId != other.RecordId) return false;
          if (EncodedMessage != other.EncodedMessage) return false;
          if (ClientTimestampMs != other.ClientTimestampMs) return false;
          if (MetricId != other.MetricId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (RecordId.Length != 0) hash ^= RecordId.GetHashCode();
          if (EncodedMessage.Length != 0) hash ^= EncodedMessage.GetHashCode();
          if (ClientTimestampMs != 0L) hash ^= ClientTimestampMs.GetHashCode();
          if (MetricId != 0L) hash ^= MetricId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (RecordId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(RecordId);
          }
          if (EncodedMessage.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(EncodedMessage);
          }
          if (ClientTimestampMs != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(ClientTimestampMs);
          }
          if (MetricId != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(MetricId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (RecordId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RecordId);
          }
          if (EncodedMessage.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncodedMessage);
          }
          if (ClientTimestampMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientTimestampMs);
          }
          if (MetricId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MetricId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientTelemetryRecord other) {
          if (other == null) {
            return;
          }
          if (other.RecordId.Length != 0) {
            RecordId = other.RecordId;
          }
          if (other.EncodedMessage.Length != 0) {
            EncodedMessage = other.EncodedMessage;
          }
          if (other.ClientTimestampMs != 0L) {
            ClientTimestampMs = other.ClientTimestampMs;
          }
          if (other.MetricId != 0L) {
            MetricId = other.MetricId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                RecordId = input.ReadString();
                break;
              }
              case 18: {
                EncodedMessage = input.ReadBytes();
                break;
              }
              case 24: {
                ClientTimestampMs = input.ReadInt64();
                break;
              }
              case 32: {
                MetricId = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
