// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Player/PlayerReputation.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Player {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Player/PlayerReputation.proto</summary>
  public static partial class PlayerReputationReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Player/PlayerReputation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerReputationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CitXVVByb3Rvcy9EYXRhL1BsYXllci9QbGF5ZXJSZXB1dGF0aW9uLnByb3Rv",
            "EhRXVVByb3Rvcy5EYXRhLlBsYXllciLYAQoQUGxheWVyUmVwdXRhdGlvbhIW",
            "Cg5hY2NvdW50X2FnZV9tcxgBIAEoAxIUCgxwbGF5ZXJfbGV2ZWwYAiABKAMS",
            "UAoQY2hlYXRfcmVwdXRhdGlvbhgDIAMoDjI2LldVUHJvdG9zLkRhdGEuUGxh",
            "eWVyLlBsYXllclJlcHV0YXRpb24uQ2hlYXRSZXB1dGF0aW9uEhAKCGlzX21p",
            "bm9yGAQgASgIIjIKD0NoZWF0UmVwdXRhdGlvbhIJCgVVTlNFVBAAEgcKA0JP",
            "VBABEgsKB1NQT09GRVIQAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Player.PlayerReputation), global::WUProtos.Data.Player.PlayerReputation.Parser, new[]{ "AccountAgeMs", "PlayerLevel", "CheatReputation", "IsMinor" }, null, new[]{ typeof(global::WUProtos.Data.Player.PlayerReputation.Types.CheatReputation) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlayerReputation : pb::IMessage<PlayerReputation> {
    private static readonly pb::MessageParser<PlayerReputation> _parser = new pb::MessageParser<PlayerReputation>(() => new PlayerReputation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerReputation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Player.PlayerReputationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerReputation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerReputation(PlayerReputation other) : this() {
      accountAgeMs_ = other.accountAgeMs_;
      playerLevel_ = other.playerLevel_;
      cheatReputation_ = other.cheatReputation_.Clone();
      isMinor_ = other.isMinor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerReputation Clone() {
      return new PlayerReputation(this);
    }

    /// <summary>Field number for the "account_age_ms" field.</summary>
    public const int AccountAgeMsFieldNumber = 1;
    private long accountAgeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AccountAgeMs {
      get { return accountAgeMs_; }
      set {
        accountAgeMs_ = value;
      }
    }

    /// <summary>Field number for the "player_level" field.</summary>
    public const int PlayerLevelFieldNumber = 2;
    private long playerLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerLevel {
      get { return playerLevel_; }
      set {
        playerLevel_ = value;
      }
    }

    /// <summary>Field number for the "cheat_reputation" field.</summary>
    public const int CheatReputationFieldNumber = 3;
    private static readonly pb::FieldCodec<global::WUProtos.Data.Player.PlayerReputation.Types.CheatReputation> _repeated_cheatReputation_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::WUProtos.Data.Player.PlayerReputation.Types.CheatReputation) x);
    private readonly pbc::RepeatedField<global::WUProtos.Data.Player.PlayerReputation.Types.CheatReputation> cheatReputation_ = new pbc::RepeatedField<global::WUProtos.Data.Player.PlayerReputation.Types.CheatReputation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.Player.PlayerReputation.Types.CheatReputation> CheatReputation {
      get { return cheatReputation_; }
    }

    /// <summary>Field number for the "is_minor" field.</summary>
    public const int IsMinorFieldNumber = 4;
    private bool isMinor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsMinor {
      get { return isMinor_; }
      set {
        isMinor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerReputation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerReputation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountAgeMs != other.AccountAgeMs) return false;
      if (PlayerLevel != other.PlayerLevel) return false;
      if(!cheatReputation_.Equals(other.cheatReputation_)) return false;
      if (IsMinor != other.IsMinor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountAgeMs != 0L) hash ^= AccountAgeMs.GetHashCode();
      if (PlayerLevel != 0L) hash ^= PlayerLevel.GetHashCode();
      hash ^= cheatReputation_.GetHashCode();
      if (IsMinor != false) hash ^= IsMinor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountAgeMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AccountAgeMs);
      }
      if (PlayerLevel != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PlayerLevel);
      }
      cheatReputation_.WriteTo(output, _repeated_cheatReputation_codec);
      if (IsMinor != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsMinor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountAgeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountAgeMs);
      }
      if (PlayerLevel != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerLevel);
      }
      size += cheatReputation_.CalculateSize(_repeated_cheatReputation_codec);
      if (IsMinor != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerReputation other) {
      if (other == null) {
        return;
      }
      if (other.AccountAgeMs != 0L) {
        AccountAgeMs = other.AccountAgeMs;
      }
      if (other.PlayerLevel != 0L) {
        PlayerLevel = other.PlayerLevel;
      }
      cheatReputation_.Add(other.cheatReputation_);
      if (other.IsMinor != false) {
        IsMinor = other.IsMinor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountAgeMs = input.ReadInt64();
            break;
          }
          case 16: {
            PlayerLevel = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            cheatReputation_.AddEntriesFrom(input, _repeated_cheatReputation_codec);
            break;
          }
          case 32: {
            IsMinor = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PlayerReputation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CheatReputation {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("BOT")] Bot = 1,
        [pbr::OriginalName("SPOOFER")] Spoofer = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
