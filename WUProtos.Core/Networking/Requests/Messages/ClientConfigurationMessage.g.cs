// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Networking/Requests/Messages/ClientConfigurationMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Networking.Requests.Messages {

  /// <summary>Holder for reflection information generated from WUProtos/Networking/Requests/Messages/ClientConfigurationMessage.proto</summary>
  public static partial class ClientConfigurationMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Networking/Requests/Messages/ClientConfigurationMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientConfigurationMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkZXVVByb3Rvcy9OZXR3b3JraW5nL1JlcXVlc3RzL01lc3NhZ2VzL0NsaWVu",
            "dENvbmZpZ3VyYXRpb25NZXNzYWdlLnByb3RvEiVXVVByb3Rvcy5OZXR3b3Jr",
            "aW5nLlJlcXVlc3RzLk1lc3NhZ2VzIuYEChpDbGllbnRDb25maWd1cmF0aW9u",
            "TWVzc2FnZRIVCg10YXJnZXRfZW52X2lkGAEgASgJEhYKDmNsaWVudF92ZXJz",
            "aW9uGAIgASgJEl0KCWNsaWVudF9vcxgDIAEoDjJKLldVUHJvdG9zLk5ldHdv",
            "cmtpbmcuUmVxdWVzdHMuTWVzc2FnZXMuQ2xpZW50Q29uZmlndXJhdGlvbk1l",
            "c3NhZ2UuQ2xpZW50T3MSEgoKb3NfdmVyc2lvbhgEIAEoCRIUCgxkZXZpY2Vf",
            "bW9kZWwYBSABKAkSagoPaW9zX2RldmljZV9pbmZvGAYgASgLMk8uV1VQcm90",
            "b3MuTmV0d29ya2luZy5SZXF1ZXN0cy5NZXNzYWdlcy5DbGllbnRDb25maWd1",
            "cmF0aW9uTWVzc2FnZS5pT1NEZXZpY2VJbmZvSAAScgoTYW5kcm9pZF9kZXZp",
            "Y2VfaW5mbxgHIAEoCzJTLldVUHJvdG9zLk5ldHdvcmtpbmcuUmVxdWVzdHMu",
            "TWVzc2FnZXMuQ2xpZW50Q29uZmlndXJhdGlvbk1lc3NhZ2UuQW5kcm9pZERl",
            "dmljZUluZm9IABIUCgxidWlsZF9udW1iZXIYCCABKAkaPAoRQW5kcm9pZERl",
            "dmljZUluZm8SFAoMZ3B1X2NhdGVnb3J5GAEgASgJEhEKCWdwdV9tb2RlbBgC",
            "IAEoCRoPCg1pT1NEZXZpY2VJbmZvIj0KCENsaWVudE9zEg4KClVOS05PV05f",
            "T1MQABIHCgNJT1MQARILCgdBTkRST0lEEAISCwoHREVTS1RPUBADQgwKCkRl",
            "dmljZUluZm9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage), global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Parser, new[]{ "TargetEnvId", "ClientVersion", "ClientOs", "OsVersion", "DeviceModel", "IosDeviceInfo", "AndroidDeviceInfo", "BuildNumber" }, new[]{ "DeviceInfo" }, new[]{ typeof(global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.ClientOs) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.AndroidDeviceInfo), global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.AndroidDeviceInfo.Parser, new[]{ "GpuCategory", "GpuModel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.iOSDeviceInfo), global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.iOSDeviceInfo.Parser, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientConfigurationMessage : pb::IMessage<ClientConfigurationMessage> {
    private static readonly pb::MessageParser<ClientConfigurationMessage> _parser = new pb::MessageParser<ClientConfigurationMessage>(() => new ClientConfigurationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientConfigurationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientConfigurationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientConfigurationMessage(ClientConfigurationMessage other) : this() {
      targetEnvId_ = other.targetEnvId_;
      clientVersion_ = other.clientVersion_;
      clientOs_ = other.clientOs_;
      osVersion_ = other.osVersion_;
      deviceModel_ = other.deviceModel_;
      buildNumber_ = other.buildNumber_;
      switch (other.DeviceInfoCase) {
        case DeviceInfoOneofCase.IosDeviceInfo:
          IosDeviceInfo = other.IosDeviceInfo.Clone();
          break;
        case DeviceInfoOneofCase.AndroidDeviceInfo:
          AndroidDeviceInfo = other.AndroidDeviceInfo.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientConfigurationMessage Clone() {
      return new ClientConfigurationMessage(this);
    }

    /// <summary>Field number for the "target_env_id" field.</summary>
    public const int TargetEnvIdFieldNumber = 1;
    private string targetEnvId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetEnvId {
      get { return targetEnvId_; }
      set {
        targetEnvId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_version" field.</summary>
    public const int ClientVersionFieldNumber = 2;
    private string clientVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientVersion {
      get { return clientVersion_; }
      set {
        clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_os" field.</summary>
    public const int ClientOsFieldNumber = 3;
    private global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.ClientOs clientOs_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.ClientOs ClientOs {
      get { return clientOs_; }
      set {
        clientOs_ = value;
      }
    }

    /// <summary>Field number for the "os_version" field.</summary>
    public const int OsVersionFieldNumber = 4;
    private string osVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OsVersion {
      get { return osVersion_; }
      set {
        osVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_model" field.</summary>
    public const int DeviceModelFieldNumber = 5;
    private string deviceModel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceModel {
      get { return deviceModel_; }
      set {
        deviceModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ios_device_info" field.</summary>
    public const int IosDeviceInfoFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.iOSDeviceInfo IosDeviceInfo {
      get { return deviceInfoCase_ == DeviceInfoOneofCase.IosDeviceInfo ? (global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.iOSDeviceInfo) deviceInfo_ : null; }
      set {
        deviceInfo_ = value;
        deviceInfoCase_ = value == null ? DeviceInfoOneofCase.None : DeviceInfoOneofCase.IosDeviceInfo;
      }
    }

    /// <summary>Field number for the "android_device_info" field.</summary>
    public const int AndroidDeviceInfoFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.AndroidDeviceInfo AndroidDeviceInfo {
      get { return deviceInfoCase_ == DeviceInfoOneofCase.AndroidDeviceInfo ? (global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.AndroidDeviceInfo) deviceInfo_ : null; }
      set {
        deviceInfo_ = value;
        deviceInfoCase_ = value == null ? DeviceInfoOneofCase.None : DeviceInfoOneofCase.AndroidDeviceInfo;
      }
    }

    /// <summary>Field number for the "build_number" field.</summary>
    public const int BuildNumberFieldNumber = 8;
    private string buildNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuildNumber {
      get { return buildNumber_; }
      set {
        buildNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object deviceInfo_;
    /// <summary>Enum of possible cases for the "DeviceInfo" oneof.</summary>
    public enum DeviceInfoOneofCase {
      None = 0,
      IosDeviceInfo = 6,
      AndroidDeviceInfo = 7,
    }
    private DeviceInfoOneofCase deviceInfoCase_ = DeviceInfoOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceInfoOneofCase DeviceInfoCase {
      get { return deviceInfoCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeviceInfo() {
      deviceInfoCase_ = DeviceInfoOneofCase.None;
      deviceInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientConfigurationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientConfigurationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetEnvId != other.TargetEnvId) return false;
      if (ClientVersion != other.ClientVersion) return false;
      if (ClientOs != other.ClientOs) return false;
      if (OsVersion != other.OsVersion) return false;
      if (DeviceModel != other.DeviceModel) return false;
      if (!object.Equals(IosDeviceInfo, other.IosDeviceInfo)) return false;
      if (!object.Equals(AndroidDeviceInfo, other.AndroidDeviceInfo)) return false;
      if (BuildNumber != other.BuildNumber) return false;
      if (DeviceInfoCase != other.DeviceInfoCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetEnvId.Length != 0) hash ^= TargetEnvId.GetHashCode();
      if (ClientVersion.Length != 0) hash ^= ClientVersion.GetHashCode();
      if (ClientOs != 0) hash ^= ClientOs.GetHashCode();
      if (OsVersion.Length != 0) hash ^= OsVersion.GetHashCode();
      if (DeviceModel.Length != 0) hash ^= DeviceModel.GetHashCode();
      if (deviceInfoCase_ == DeviceInfoOneofCase.IosDeviceInfo) hash ^= IosDeviceInfo.GetHashCode();
      if (deviceInfoCase_ == DeviceInfoOneofCase.AndroidDeviceInfo) hash ^= AndroidDeviceInfo.GetHashCode();
      if (BuildNumber.Length != 0) hash ^= BuildNumber.GetHashCode();
      hash ^= (int) deviceInfoCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TargetEnvId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TargetEnvId);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientVersion);
      }
      if (ClientOs != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ClientOs);
      }
      if (OsVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OsVersion);
      }
      if (DeviceModel.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DeviceModel);
      }
      if (deviceInfoCase_ == DeviceInfoOneofCase.IosDeviceInfo) {
        output.WriteRawTag(50);
        output.WriteMessage(IosDeviceInfo);
      }
      if (deviceInfoCase_ == DeviceInfoOneofCase.AndroidDeviceInfo) {
        output.WriteRawTag(58);
        output.WriteMessage(AndroidDeviceInfo);
      }
      if (BuildNumber.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(BuildNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetEnvId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetEnvId);
      }
      if (ClientVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
      }
      if (ClientOs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ClientOs);
      }
      if (OsVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OsVersion);
      }
      if (DeviceModel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceModel);
      }
      if (deviceInfoCase_ == DeviceInfoOneofCase.IosDeviceInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IosDeviceInfo);
      }
      if (deviceInfoCase_ == DeviceInfoOneofCase.AndroidDeviceInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AndroidDeviceInfo);
      }
      if (BuildNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientConfigurationMessage other) {
      if (other == null) {
        return;
      }
      if (other.TargetEnvId.Length != 0) {
        TargetEnvId = other.TargetEnvId;
      }
      if (other.ClientVersion.Length != 0) {
        ClientVersion = other.ClientVersion;
      }
      if (other.ClientOs != 0) {
        ClientOs = other.ClientOs;
      }
      if (other.OsVersion.Length != 0) {
        OsVersion = other.OsVersion;
      }
      if (other.DeviceModel.Length != 0) {
        DeviceModel = other.DeviceModel;
      }
      if (other.BuildNumber.Length != 0) {
        BuildNumber = other.BuildNumber;
      }
      switch (other.DeviceInfoCase) {
        case DeviceInfoOneofCase.IosDeviceInfo:
          if (IosDeviceInfo == null) {
            IosDeviceInfo = new global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.iOSDeviceInfo();
          }
          IosDeviceInfo.MergeFrom(other.IosDeviceInfo);
          break;
        case DeviceInfoOneofCase.AndroidDeviceInfo:
          if (AndroidDeviceInfo == null) {
            AndroidDeviceInfo = new global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.AndroidDeviceInfo();
          }
          AndroidDeviceInfo.MergeFrom(other.AndroidDeviceInfo);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TargetEnvId = input.ReadString();
            break;
          }
          case 18: {
            ClientVersion = input.ReadString();
            break;
          }
          case 24: {
            ClientOs = (global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.ClientOs) input.ReadEnum();
            break;
          }
          case 34: {
            OsVersion = input.ReadString();
            break;
          }
          case 42: {
            DeviceModel = input.ReadString();
            break;
          }
          case 50: {
            global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.iOSDeviceInfo subBuilder = new global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.iOSDeviceInfo();
            if (deviceInfoCase_ == DeviceInfoOneofCase.IosDeviceInfo) {
              subBuilder.MergeFrom(IosDeviceInfo);
            }
            input.ReadMessage(subBuilder);
            IosDeviceInfo = subBuilder;
            break;
          }
          case 58: {
            global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.AndroidDeviceInfo subBuilder = new global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Types.AndroidDeviceInfo();
            if (deviceInfoCase_ == DeviceInfoOneofCase.AndroidDeviceInfo) {
              subBuilder.MergeFrom(AndroidDeviceInfo);
            }
            input.ReadMessage(subBuilder);
            AndroidDeviceInfo = subBuilder;
            break;
          }
          case 66: {
            BuildNumber = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ClientConfigurationMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ClientOs {
        [pbr::OriginalName("UNKNOWN_OS")] UnknownOs = 0,
        [pbr::OriginalName("IOS")] Ios = 1,
        [pbr::OriginalName("ANDROID")] Android = 2,
        [pbr::OriginalName("DESKTOP")] Desktop = 3,
      }

      public sealed partial class AndroidDeviceInfo : pb::IMessage<AndroidDeviceInfo> {
        private static readonly pb::MessageParser<AndroidDeviceInfo> _parser = new pb::MessageParser<AndroidDeviceInfo>(() => new AndroidDeviceInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AndroidDeviceInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AndroidDeviceInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AndroidDeviceInfo(AndroidDeviceInfo other) : this() {
          gpuCategory_ = other.gpuCategory_;
          gpuModel_ = other.gpuModel_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AndroidDeviceInfo Clone() {
          return new AndroidDeviceInfo(this);
        }

        /// <summary>Field number for the "gpu_category" field.</summary>
        public const int GpuCategoryFieldNumber = 1;
        private string gpuCategory_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string GpuCategory {
          get { return gpuCategory_; }
          set {
            gpuCategory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "gpu_model" field.</summary>
        public const int GpuModelFieldNumber = 2;
        private string gpuModel_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string GpuModel {
          get { return gpuModel_; }
          set {
            gpuModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AndroidDeviceInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AndroidDeviceInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (GpuCategory != other.GpuCategory) return false;
          if (GpuModel != other.GpuModel) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (GpuCategory.Length != 0) hash ^= GpuCategory.GetHashCode();
          if (GpuModel.Length != 0) hash ^= GpuModel.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (GpuCategory.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(GpuCategory);
          }
          if (GpuModel.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(GpuModel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (GpuCategory.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(GpuCategory);
          }
          if (GpuModel.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(GpuModel);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AndroidDeviceInfo other) {
          if (other == null) {
            return;
          }
          if (other.GpuCategory.Length != 0) {
            GpuCategory = other.GpuCategory;
          }
          if (other.GpuModel.Length != 0) {
            GpuModel = other.GpuModel;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                GpuCategory = input.ReadString();
                break;
              }
              case 18: {
                GpuModel = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class iOSDeviceInfo : pb::IMessage<iOSDeviceInfo> {
        private static readonly pb::MessageParser<iOSDeviceInfo> _parser = new pb::MessageParser<iOSDeviceInfo>(() => new iOSDeviceInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<iOSDeviceInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public iOSDeviceInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public iOSDeviceInfo(iOSDeviceInfo other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public iOSDeviceInfo Clone() {
          return new iOSDeviceInfo(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as iOSDeviceInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(iOSDeviceInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(iOSDeviceInfo other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
