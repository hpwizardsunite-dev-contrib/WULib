// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Requirements.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Requirements.proto</summary>
  public static partial class RequirementsReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Requirements.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RequirementsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBXVVByb3Rvcy9EYXRhL1JlcXVpcmVtZW50cy5wcm90bxINV1VQcm90b3Mu",
            "RGF0YRogV1VQcm90b3MvRW51bXMvQm9vbExpdGVyYWwucHJvdG8aJ1dVUHJv",
            "dG9zL0VudW1zL0NvbXBhcmlzb25PcGVyYXRvci5wcm90bxolV1VQcm90b3Mv",
            "RW51bXMvRXF1YWxpdHlPcGVyYXRvci5wcm90bxojV1VQcm90b3MvRW51bXMv",
            "RGV2aWNlUGxhdGZvcm0ucHJvdG8aGldVUHJvdG9zL0RhdGEvQVJNb2RlLnBy",
            "b3RvIvwxCgxSZXF1aXJlbWVudHMSNQoEcmVxcxgBIAMoCzInLldVUHJvdG9z",
            "LkRhdGEuUmVxdWlyZW1lbnRzLlJlcXVpcmVtZW50GrQxCgtSZXF1aXJlbWVu",
            "dBI3ChBib29sX2xpdGVyYWxfcmVxGAEgASgOMhsuV1VQcm90b3MuRW51bXMu",
            "Qm9vbExpdGVyYWxIABJNCglsZXZlbF9yZXEYAiABKAsyOC5XVVByb3Rvcy5E",
            "YXRhLlJlcXVpcmVtZW50cy5SZXF1aXJlbWVudC5MZXZlbFJlcXVpcmVtZW50",
            "SAASVgoOdmF1bHRfaXRlbV9yZXEYAyABKAsyPC5XVVByb3Rvcy5EYXRhLlJl",
            "cXVpcmVtZW50cy5SZXF1aXJlbWVudC5WYXVsdEl0ZW1SZXF1aXJlbWVudEgA",
            "EmAKE2NvbGxlY3Rpb25faXRlbV9yZXEYBCABKAsyQS5XVVByb3Rvcy5EYXRh",
            "LlJlcXVpcmVtZW50cy5SZXF1aXJlbWVudC5Db2xsZWN0aW9uSXRlbVJlcXVp",
            "cmVtZW50SAASZAoVY29sbGVjdGlvbl9mYW1pbHlfcmVxGAUgASgLMkMuV1VQ",
            "cm90b3MuRGF0YS5SZXF1aXJlbWVudHMuUmVxdWlyZW1lbnQuQ29sbGVjdGlv",
            "bkZhbWlseVJlcXVpcmVtZW50SAASSwoIZGF0ZV9yZXEYBiABKAsyNy5XVVBy",
            "b3Rvcy5EYXRhLlJlcXVpcmVtZW50cy5SZXF1aXJlbWVudC5EYXRlUmVxdWly",
            "ZW1lbnRIABJRCghmbGFnX3JlcRgHIAEoCzI9LldVUHJvdG9zLkRhdGEuUmVx",
            "dWlyZW1lbnRzLlJlcXVpcmVtZW50LlBsYXllckZsYWdSZXF1aXJlbWVudEgA",
            "ElcKDnByb2Zlc3Npb25fcmVxGAggASgLMj0uV1VQcm90b3MuRGF0YS5SZXF1",
            "aXJlbWVudHMuUmVxdWlyZW1lbnQuUHJvZmVzc2lvblJlcXVpcmVtZW50SAAS",
            "YAoTcHJvZmVzc2lvbl9ub2RlX3JlcRgJIAEoCzJBLldVUHJvdG9zLkRhdGEu",
            "UmVxdWlyZW1lbnRzLlJlcXVpcmVtZW50LlByb2Zlc3Npb25Ob2RlUmVxdWly",
            "ZW1lbnRIABJ0Ch1wcm9mZXNzaW9uX251bV9ub2RlX2xldmVsX3JlcRgKIAEo",
            "CzJLLldVUHJvdG9zLkRhdGEuUmVxdWlyZW1lbnRzLlJlcXVpcmVtZW50LlBy",
            "b2Zlc3Npb25Ub3RhbE5vZGVMZXZlbFJlcXVpcmVtZW50SAASWAoPaGFzX3dh",
            "bGtib3hfcmVxGAsgASgLMj0uV1VQcm90b3MuRGF0YS5SZXF1aXJlbWVudHMu",
            "UmVxdWlyZW1lbnQuSGFzV2Fsa2JveFJlcXVpcmVtZW50SAASWAoPaGFzX3Bv",
            "cnRrZXlfcmVxGAwgASgLMj0uV1VQcm90b3MuRGF0YS5SZXF1aXJlbWVudHMu",
            "UmVxdWlyZW1lbnQuSGFzUG9ydGtleVJlcXVpcmVtZW50SAASbQoacHJvZmVz",
            "c2lvbl9yYW5rX3BvaW50c19yZXEYDSABKAsyRy5XVVByb3Rvcy5EYXRhLlJl",
            "cXVpcmVtZW50cy5SZXF1aXJlbWVudC5Qcm9mZXNzaW9uUmFua1BvaW50c1Jl",
            "cXVpcmVtZW50SAASZQoTY29sbGVjdGlvbl9wYWdlX3JlcRgOIAEoCzJGLldV",
            "UHJvdG9zLkRhdGEuUmVxdWlyZW1lbnRzLlJlcXVpcmVtZW50LkNvbGxlY3Rp",
            "b25QYWdlTGV2ZWxSZXF1aXJlbWVudEgAEnUKImNvbGxlY3Rpb25faXRlbV9w",
            "bGFjZWRfcmVxdWlyZW1lbnQYDyABKAsyRy5XVVByb3Rvcy5EYXRhLlJlcXVp",
            "cmVtZW50cy5SZXF1aXJlbWVudC5Db2xsZWN0aW9uSXRlbVBsYWNlZFJlcXVp",
            "cmVtZW50SAASTQoJZXZlbnRfcmVxGBAgASgLMjguV1VQcm90b3MuRGF0YS5S",
            "ZXF1aXJlbWVudHMuUmVxdWlyZW1lbnQuRXZlbnRSZXF1aXJlbWVudEgAEmAK",
            "E3F1ZXN0X2NvbXBsZXRlZF9yZXEYESABKAsyQS5XVVByb3Rvcy5EYXRhLlJl",
            "cXVpcmVtZW50cy5SZXF1aXJlbWVudC5RdWVzdENvbXBsZXRlZFJlcXVpcmVt",
            "ZW50SAASWgoQZmVhdHVyZV9mbGFnX3JlcRgSIAEoCzI+LldVUHJvdG9zLkRh",
            "dGEuUmVxdWlyZW1lbnRzLlJlcXVpcmVtZW50LkZlYXR1cmVGbGFnUmVxdWly",
            "ZW1lbnRIABJeCg5zdG9yZV9wYWNrX3JlcRgTIAEoCzJELldVUHJvdG9zLkRh",
            "dGEuUmVxdWlyZW1lbnRzLlJlcXVpcmVtZW50LlN0b3JlUGFja1F1YW50aXR5",
            "UmVxdWlyZW1lbnRIABJdChJhY3RpdmVfYXJfbW9kZV9yZXEYFCABKAsyPy5X",
            "VVByb3Rvcy5EYXRhLlJlcXVpcmVtZW50cy5SZXF1aXJlbWVudC5BY3RpdmVB",
            "ck1vZGVSZXF1aXJlbWVudEgAElsKFHBsYXRmb3JtX3JlcXVpcmVtZW50GBUg",
            "ASgLMjsuV1VQcm90b3MuRGF0YS5SZXF1aXJlbWVudHMuUmVxdWlyZW1lbnQu",
            "UGxhdGZvcm1SZXF1aXJlbWVudEgAEm0KHnBsYXllcl9hY2NvdW50X2FnZV9y",
            "ZXF1aXJlbWVudBgWIAEoCzJDLldVUHJvdG9zLkRhdGEuUmVxdWlyZW1lbnRz",
            "LlJlcXVpcmVtZW50LlBsYXllckFjY291bnRBZ2VSZXF1aXJlbWVudEgAEmAK",
            "E3Byb2Zlc3Npb25fdGllcl9yZXEYFyABKAsyQS5XVVByb3Rvcy5EYXRhLlJl",
            "cXVpcmVtZW50cy5SZXF1aXJlbWVudC5Qcm9mZXNzaW9uVGllclJlcXVpcmVt",
            "ZW50SAAScwohYWNjb3VudF9jcmVhdGlvbl9kYXRlX3JlcXVpcmVtZW50GBgg",
            "ASgLMkYuV1VQcm90b3MuRGF0YS5SZXF1aXJlbWVudHMuUmVxdWlyZW1lbnQu",
            "QWNjb3VudENyZWF0aW9uRGF0ZVJlcXVpcmVtZW50SAASYAoTbGlmZXRpbWVf",
            "bWV0cmljX3JlcRgZIAEoCzJBLldVUHJvdG9zLkRhdGEuUmVxdWlyZW1lbnRz",
            "LlJlcXVpcmVtZW50LkxpZmV0aW1lTWV0cmljUmVxdWlyZW1lbnRIABplChVI",
            "YXNQb3J0a2V5UmVxdWlyZW1lbnQSPwoTY29tcGFyaXNvbl9vcGVyYXRvchgB",
            "IAEoDjIiLldVUHJvdG9zLkVudW1zLkNvbXBhcmlzb25PcGVyYXRvchILCgNx",
            "dHkYAiABKAUaZQoVSGFzV2Fsa2JveFJlcXVpcmVtZW50Ej8KE2NvbXBhcmlz",
            "b25fb3BlcmF0b3IYASABKA4yIi5XVVByb3Rvcy5FbnVtcy5Db21wYXJpc29u",
            "T3BlcmF0b3ISCwoDcXR5GAIgASgFGtMBChBFdmVudFJlcXVpcmVtZW50EhAK",
            "CGV2ZW50X2lkGAEgASgJElwKC3JlcV9zdWJzZXRzGAIgAygOMkcuV1VQcm90",
            "b3MuRGF0YS5SZXF1aXJlbWVudHMuUmVxdWlyZW1lbnQuRXZlbnRSZXF1aXJl",
            "bWVudC5FdmVudFJlcVN1YnNldCJPCg5FdmVudFJlcVN1YnNldBISCg5TVUJT",
            "RVRfVU5LTk9XThAAEhUKEVNVQlNFVF9BQ1RJVkFUSU9OEAESEgoOU1VCU0VU",
            "X1JVTk5JTkcQAhoxChZGZWF0dXJlRmxhZ1JlcXVpcmVtZW50EhcKD2ZlYXR1",
            "cmVfZmxhZ19pZBgBIAEoCRpiChBMZXZlbFJlcXVpcmVtZW50Ej8KE2NvbXBh",
            "cmlzb25fb3BlcmF0b3IYASABKA4yIi5XVVByb3Rvcy5FbnVtcy5Db21wYXJp",
            "c29uT3BlcmF0b3ISDQoFbGV2ZWwYAiABKAUavAcKGUxpZmV0aW1lTWV0cmlj",
            "UmVxdWlyZW1lbnQSaQoPbGlmZXRpbWVfbWV0cmljGAEgASgOMlAuV1VQcm90",
            "b3MuRGF0YS5SZXF1aXJlbWVudHMuUmVxdWlyZW1lbnQuTGlmZXRpbWVNZXRy",
            "aWNSZXF1aXJlbWVudC5MaWZldGltZU1ldHJpYxI/ChNjb21wYXJpc29uX29w",
            "ZXJhdG9yGAIgASgOMiIuV1VQcm90b3MuRW51bXMuQ29tcGFyaXNvbk9wZXJh",
            "dG9yEhYKDnJlcXVpcmVkX2NvdW50GAMgASgDItoFCg5MaWZldGltZU1ldHJp",
            "YxIICgROT05FEAASDgoKSU5OX0xPT1RFRBABEhUKEUdSRUVOSE9VU0VfTE9P",
            "VEVEEAISDQoJS01fV0FMS0VEEAMSGgoWTUFQX0VOQ09VTlRFUl9DQVBUVVJF",
            "RBAEEgoKBldDX1dPThAFEhYKElNUSUNLRVJTX0NPTVBMRVRFRBAGEh4KGlNV",
            "Q0NFU1NGVUxfU1dJU0hfU1BFTExDQVNUEAcSJgoiU1VDQ0VTU0ZVTF9DT01C",
            "QVRfQVRUQUNLX1NQRUxMQ0FTVBAIEiYKIlNVQ0NFU1NGVUxfQ09NQkFUX0RF",
            "RkVORF9TUEVMTENBU1QQCRIQCgxXQ19DT01QTEVURUQQChISCg5QT1RJT05T",
            "X0JSRVdFRBALEhgKFERBUktfREVURUNUT1JfUExBQ0VEEAwSEwoPUE9SVEtF",
            "WVNfT1BFTkVEEA0SHQoZTUFQX0lOR1JFRElFTlRTX0NPTExFQ1RFRBAOEhsK",
            "F1BPVElPTl9FWFNUSU1VTE9fMV9VU0VEEA8SGwoXUE9USU9OX0VYU1RJTVVM",
            "T18yX1VTRUQQEBIbChdQT1RJT05fRVhTVElNVUxPXzNfVVNFRBAREhwKGFBP",
            "VElPTl9CUkFJTl9FTElYSVJfVVNFRBASEhkKFVBPVElPTl9VU0VEX0VOQ09V",
            "TlRFUhATEhIKDlBPVElPTl9VU0VEX1dDEBQSFwoTTU9CU19ERUZFQVRFRF9C",
            "WV9NRRAVEhEKDVNFRURTX1BMQU5URUQQFhIXChNNWVNURVJZX0lURU1TX0ZP",
            "VU5EEBcSHQoZU1dJU0hfTUFTVEVSRlVMX1NQRUxMQ0FTVBAYEiUKIUVOQ09V",
            "TlRFUl9DT01QTEVURURfQ09VTlRSWV9DT1VOVBAZEh0KGUVMSVRFX01PQlNf",
            "REVGRUFURURfQllfTUUQGhIWChJNQVBfQUJJTElUSUVTX1VTRUQQGxqDAQoc",
            "U3RvcmVQYWNrUXVhbnRpdHlSZXF1aXJlbWVudBIVCg1zdG9yZV9wYWNrX2lk",
            "GAEgASgJEj8KE2NvbXBhcmlzb25fb3BlcmF0b3IYAiABKA4yIi5XVVByb3Rv",
            "cy5FbnVtcy5Db21wYXJpc29uT3BlcmF0b3ISCwoDcXR5GAMgASgDGnUKFFZh",
            "dWx0SXRlbVJlcXVpcmVtZW50Eg8KB2l0ZW1faWQYASABKAkSPwoTY29tcGFy",
            "aXNvbl9vcGVyYXRvchgCIAEoDjIiLldVUHJvdG9zLkVudW1zLkNvbXBhcmlz",
            "b25PcGVyYXRvchILCgNxdHkYAyABKAMaMQoZUXVlc3RDb21wbGV0ZWRSZXF1",
            "aXJlbWVudBIUCgxxdWVzdF9nbXRfaWQYASABKAkagAEKHkFjY291bnRDcmVh",
            "dGlvbkRhdGVSZXF1aXJlbWVudBIdChVhY2NvdW50X2NyZWF0aW9uX2RhdGUY",
            "ASABKAMSPwoTY29tcGFyaXNvbl9vcGVyYXRvchgCIAEoDjIiLldVUHJvdG9z",
            "LkVudW1zLkNvbXBhcmlzb25PcGVyYXRvchp1ChdBY3RpdmVBck1vZGVSZXF1",
            "aXJlbWVudBImCgdhcl9tb2RlGAEgASgOMhUuV1VQcm90b3MuRGF0YS5BUk1v",
            "ZGUSMgoIb3BlcmF0b3IYAiABKA4yIC5XVVByb3Rvcy5FbnVtcy5FcXVhbGl0",
            "eU9wZXJhdG9yGocBChtDb2xsZWN0aW9uRmFtaWx5UmVxdWlyZW1lbnQSEQoJ",
            "ZmFtaWx5X2lkGAEgASgJEhQKDGZhbWlseV9sZXZlbBgCIAEoBRI/ChNjb21w",
            "YXJpc29uX29wZXJhdG9yGAMgASgOMiIuV1VQcm90b3MuRW51bXMuQ29tcGFy",
            "aXNvbk9wZXJhdG9yGhYKFFRpbWVSZXF1aXJlbWVudFR1cGxlGnQKH0NvbGxl",
            "Y3Rpb25JdGVtUGxhY2VkUmVxdWlyZW1lbnQSEwoLaXRlbV9nbXRfaWQYASAB",
            "KAkSJwofY2hlY2tfZm9yX2N1cnJlbnRfcHJlc3RpZ2Vfb25seRgCIAEoCBIT",
            "CgtwYWdlX2dtdF9pZBgDIAEoCRp9ChlDb2xsZWN0aW9uSXRlbVJlcXVpcmVt",
            "ZW50Eg8KB2l0ZW1faWQYASABKAkSPwoTY29tcGFyaXNvbl9vcGVyYXRvchgC",
            "IAEoDjIiLldVUHJvdG9zLkVudW1zLkNvbXBhcmlzb25PcGVyYXRvchIOCgZz",
            "aGFyZHMYAyABKAUahQEKHkNvbGxlY3Rpb25QYWdlTGV2ZWxSZXF1aXJlbWVu",
            "dBITCgtwYWdlX2dtdF9pZBgBIAEoCRINCgVsZXZlbBgCIAEoBRI/ChNjb21w",
            "YXJpc29uX29wZXJhdG9yGAMgASgOMiIuV1VQcm90b3MuRW51bXMuQ29tcGFy",
            "aXNvbk9wZXJhdG9yGnEKD0RhdGVSZXF1aXJlbWVudBIdChVlcG9jaF9kYXRl",
            "X2luX3NlY29uZHMYASABKAMSPwoTY29tcGFyaXNvbl9vcGVyYXRvchgCIAEo",
            "DjIiLldVUHJvdG9zLkVudW1zLkNvbXBhcmlzb25PcGVyYXRvchp+ChtQbGF5",
            "ZXJBY2NvdW50QWdlUmVxdWlyZW1lbnQSHgoWYWNjb3VudF9hZ2VfaW5fc2Vj",
            "b25kcxgBIAEoAxI/ChNjb21wYXJpc29uX29wZXJhdG9yGAIgASgOMiIuV1VQ",
            "cm90b3MuRW51bXMuQ29tcGFyaXNvbk9wZXJhdG9yGt0BChVQbGF5ZXJGbGFn",
            "UmVxdWlyZW1lbnQSHgoWcGxheWVyX2ZsYWdfZmVhdHVyZV9pZBgBIAEoCRIW",
            "Cg5wbGF5ZXJfZmxhZ19pZBgCIAEoCRI/ChNjb21wYXJpc29uX29wZXJhdG9y",
            "GAMgASgOMiIuV1VQcm90b3MuRW51bXMuQ29tcGFyaXNvbk9wZXJhdG9yEg4K",
            "BGJ2YWwYBCABKAhIABIOCgRsdmFsGAUgASgDSAASDgoEc3ZhbBgGIAEoCUgA",
            "Eg4KBGZ2YWwYByABKAJIAEILCglGbGFnVmFsdWUaswEKGVByb2Zlc3Npb25O",
            "b2RlUmVxdWlyZW1lbnQSGgoScHJvZmVzc2lvbl9ub2RlX2lkGAEgASgJEh0K",
            "FXByb2Zlc3Npb25fbm9kZV9sZXZlbBgCIAEoDRI/ChNjb21wYXJpc29uX29w",
            "ZXJhdG9yGAMgASgOMiIuV1VQcm90b3MuRW51bXMuQ29tcGFyaXNvbk9wZXJh",
            "dG9yEhoKEnByb2Zlc3Npb25fcmFua19pZBgFIAEoCRqSAQofUHJvZmVzc2lv",
            "blJhbmtQb2ludHNSZXF1aXJlbWVudBIZChFwcm9mZXNzaW9uX2dtdF9pZBgB",
            "IAEoCRITCgtyYW5rX3BvaW50cxgCIAEoBRI/ChNjb21wYXJpc29uX29wZXJh",
            "dG9yGAMgASgOMiIuV1VQcm90b3MuRW51bXMuQ29tcGFyaXNvbk9wZXJhdG9y",
            "GjIKFVByb2Zlc3Npb25SZXF1aXJlbWVudBIZChFwcm9mZXNzaW9uX2dtdF9p",
            "ZBgBIAEoCRqQAQoZUHJvZmVzc2lvblRpZXJSZXF1aXJlbWVudBIZChFwcm9m",
            "ZXNzaW9uX2dtdF9pZBgBIAEoCRIXCg9wcm9mZXNzaW9uX3RpZXIYAiABKA0S",
            "PwoTY29tcGFyaXNvbl9vcGVyYXRvchgDIAEoDjIiLldVUHJvdG9zLkVudW1z",
            "LkNvbXBhcmlzb25PcGVyYXRvchqlAQojUHJvZmVzc2lvblRvdGFsTm9kZUxl",
            "dmVsUmVxdWlyZW1lbnQSGQoRcHJvZmVzc2lvbl9nbXRfaWQYASABKAkSIgoa",
            "bnVtX3Byb2Zlc3Npb25fbm9kZV9sZXZlbHMYAiABKAUSPwoTY29tcGFyaXNv",
            "bl9vcGVyYXRvchgDIAEoDjIiLldVUHJvdG9zLkVudW1zLkNvbXBhcmlzb25P",
            "cGVyYXRvchp7ChNQbGF0Zm9ybVJlcXVpcmVtZW50EjAKCHBsYXRmb3JtGAEg",
            "ASgOMh4uV1VQcm90b3MuRW51bXMuRGV2aWNlUGxhdGZvcm0SMgoIb3BlcmF0",
            "b3IYAiABKA4yIC5XVVByb3Rvcy5FbnVtcy5FcXVhbGl0eU9wZXJhdG9yQg0K",
            "C1JlcXVpcmVtZW50YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Enums.BoolLiteralReflection.Descriptor, global::WUProtos.Enums.ComparisonOperatorReflection.Descriptor, global::WUProtos.Enums.EqualityOperatorReflection.Descriptor, global::WUProtos.Enums.DevicePlatformReflection.Descriptor, global::WUProtos.Data.ARModeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements), global::WUProtos.Data.Requirements.Parser, new[]{ "Reqs" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement), global::WUProtos.Data.Requirements.Types.Requirement.Parser, new[]{ "BoolLiteralReq", "LevelReq", "VaultItemReq", "CollectionItemReq", "CollectionFamilyReq", "DateReq", "FlagReq", "ProfessionReq", "ProfessionNodeReq", "ProfessionNumNodeLevelReq", "HasWalkboxReq", "HasPortkeyReq", "ProfessionRankPointsReq", "CollectionPageReq", "CollectionItemPlacedRequirement", "EventReq", "QuestCompletedReq", "FeatureFlagReq", "StorePackReq", "ActiveArModeReq", "PlatformRequirement", "PlayerAccountAgeRequirement", "ProfessionTierReq", "AccountCreationDateRequirement", "LifetimeMetricReq" }, new[]{ "Requirement" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.HasPortkeyRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.HasPortkeyRequirement.Parser, new[]{ "ComparisonOperator", "Qty" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.HasWalkboxRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.HasWalkboxRequirement.Parser, new[]{ "ComparisonOperator", "Qty" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.EventRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.EventRequirement.Parser, new[]{ "EventId", "ReqSubsets" }, null, new[]{ typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.EventRequirement.Types.EventReqSubset) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.FeatureFlagRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.FeatureFlagRequirement.Parser, new[]{ "FeatureFlagId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.LevelRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.LevelRequirement.Parser, new[]{ "ComparisonOperator", "Level" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.LifetimeMetricRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.LifetimeMetricRequirement.Parser, new[]{ "LifetimeMetric", "ComparisonOperator", "RequiredCount" }, null, new[]{ typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.LifetimeMetricRequirement.Types.LifetimeMetric) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.StorePackQuantityRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.StorePackQuantityRequirement.Parser, new[]{ "StorePackId", "ComparisonOperator", "Qty" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.VaultItemRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.VaultItemRequirement.Parser, new[]{ "ItemId", "ComparisonOperator", "Qty" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.QuestCompletedRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.QuestCompletedRequirement.Parser, new[]{ "QuestGmtId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.AccountCreationDateRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.AccountCreationDateRequirement.Parser, new[]{ "AccountCreationDate", "ComparisonOperator" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.ActiveArModeRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.ActiveArModeRequirement.Parser, new[]{ "ArMode", "Operator" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionFamilyRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionFamilyRequirement.Parser, new[]{ "FamilyId", "FamilyLevel", "ComparisonOperator" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.TimeRequirementTuple), global::WUProtos.Data.Requirements.Types.Requirement.Types.TimeRequirementTuple.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionItemPlacedRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionItemPlacedRequirement.Parser, new[]{ "ItemGmtId", "CheckForCurrentPrestigeOnly", "PageGmtId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionItemRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionItemRequirement.Parser, new[]{ "ItemId", "ComparisonOperator", "Shards" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionPageLevelRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionPageLevelRequirement.Parser, new[]{ "PageGmtId", "Level", "ComparisonOperator" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.DateRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.DateRequirement.Parser, new[]{ "EpochDateInSeconds", "ComparisonOperator" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.PlayerAccountAgeRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.PlayerAccountAgeRequirement.Parser, new[]{ "AccountAgeInSeconds", "ComparisonOperator" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.PlayerFlagRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.PlayerFlagRequirement.Parser, new[]{ "PlayerFlagFeatureId", "PlayerFlagId", "ComparisonOperator", "Bval", "Lval", "Sval", "Fval" }, new[]{ "FlagValue" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionNodeRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionNodeRequirement.Parser, new[]{ "ProfessionNodeId", "ProfessionNodeLevel", "ComparisonOperator", "ProfessionRankId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionRankPointsRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionRankPointsRequirement.Parser, new[]{ "ProfessionGmtId", "RankPoints", "ComparisonOperator" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionRequirement.Parser, new[]{ "ProfessionGmtId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionTierRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionTierRequirement.Parser, new[]{ "ProfessionGmtId", "ProfessionTier", "ComparisonOperator" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionTotalNodeLevelRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionTotalNodeLevelRequirement.Parser, new[]{ "ProfessionGmtId", "NumProfessionNodeLevels", "ComparisonOperator" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Requirements.Types.Requirement.Types.PlatformRequirement), global::WUProtos.Data.Requirements.Types.Requirement.Types.PlatformRequirement.Parser, new[]{ "Platform", "Operator" }, null, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Requirements : pb::IMessage<Requirements> {
    private static readonly pb::MessageParser<Requirements> _parser = new pb::MessageParser<Requirements>(() => new Requirements());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Requirements> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.RequirementsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Requirements() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Requirements(Requirements other) : this() {
      reqs_ = other.reqs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Requirements Clone() {
      return new Requirements(this);
    }

    /// <summary>Field number for the "reqs" field.</summary>
    public const int ReqsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::WUProtos.Data.Requirements.Types.Requirement> _repeated_reqs_codec
        = pb::FieldCodec.ForMessage(10, global::WUProtos.Data.Requirements.Types.Requirement.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.Requirements.Types.Requirement> reqs_ = new pbc::RepeatedField<global::WUProtos.Data.Requirements.Types.Requirement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.Requirements.Types.Requirement> Reqs {
      get { return reqs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Requirements);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Requirements other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reqs_.Equals(other.reqs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reqs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      reqs_.WriteTo(output, _repeated_reqs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reqs_.CalculateSize(_repeated_reqs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Requirements other) {
      if (other == null) {
        return;
      }
      reqs_.Add(other.reqs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            reqs_.AddEntriesFrom(input, _repeated_reqs_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Requirements message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Requirement : pb::IMessage<Requirement> {
        private static readonly pb::MessageParser<Requirement> _parser = new pb::MessageParser<Requirement>(() => new Requirement());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Requirement> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Requirements.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Requirement() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Requirement(Requirement other) : this() {
          switch (other.RequirementCase) {
            case RequirementOneofCase.BoolLiteralReq:
              BoolLiteralReq = other.BoolLiteralReq;
              break;
            case RequirementOneofCase.LevelReq:
              LevelReq = other.LevelReq.Clone();
              break;
            case RequirementOneofCase.VaultItemReq:
              VaultItemReq = other.VaultItemReq.Clone();
              break;
            case RequirementOneofCase.CollectionItemReq:
              CollectionItemReq = other.CollectionItemReq.Clone();
              break;
            case RequirementOneofCase.CollectionFamilyReq:
              CollectionFamilyReq = other.CollectionFamilyReq.Clone();
              break;
            case RequirementOneofCase.DateReq:
              DateReq = other.DateReq.Clone();
              break;
            case RequirementOneofCase.FlagReq:
              FlagReq = other.FlagReq.Clone();
              break;
            case RequirementOneofCase.ProfessionReq:
              ProfessionReq = other.ProfessionReq.Clone();
              break;
            case RequirementOneofCase.ProfessionNodeReq:
              ProfessionNodeReq = other.ProfessionNodeReq.Clone();
              break;
            case RequirementOneofCase.ProfessionNumNodeLevelReq:
              ProfessionNumNodeLevelReq = other.ProfessionNumNodeLevelReq.Clone();
              break;
            case RequirementOneofCase.HasWalkboxReq:
              HasWalkboxReq = other.HasWalkboxReq.Clone();
              break;
            case RequirementOneofCase.HasPortkeyReq:
              HasPortkeyReq = other.HasPortkeyReq.Clone();
              break;
            case RequirementOneofCase.ProfessionRankPointsReq:
              ProfessionRankPointsReq = other.ProfessionRankPointsReq.Clone();
              break;
            case RequirementOneofCase.CollectionPageReq:
              CollectionPageReq = other.CollectionPageReq.Clone();
              break;
            case RequirementOneofCase.CollectionItemPlacedRequirement:
              CollectionItemPlacedRequirement = other.CollectionItemPlacedRequirement.Clone();
              break;
            case RequirementOneofCase.EventReq:
              EventReq = other.EventReq.Clone();
              break;
            case RequirementOneofCase.QuestCompletedReq:
              QuestCompletedReq = other.QuestCompletedReq.Clone();
              break;
            case RequirementOneofCase.FeatureFlagReq:
              FeatureFlagReq = other.FeatureFlagReq.Clone();
              break;
            case RequirementOneofCase.StorePackReq:
              StorePackReq = other.StorePackReq.Clone();
              break;
            case RequirementOneofCase.ActiveArModeReq:
              ActiveArModeReq = other.ActiveArModeReq.Clone();
              break;
            case RequirementOneofCase.PlatformRequirement:
              PlatformRequirement = other.PlatformRequirement.Clone();
              break;
            case RequirementOneofCase.PlayerAccountAgeRequirement:
              PlayerAccountAgeRequirement = other.PlayerAccountAgeRequirement.Clone();
              break;
            case RequirementOneofCase.ProfessionTierReq:
              ProfessionTierReq = other.ProfessionTierReq.Clone();
              break;
            case RequirementOneofCase.AccountCreationDateRequirement:
              AccountCreationDateRequirement = other.AccountCreationDateRequirement.Clone();
              break;
            case RequirementOneofCase.LifetimeMetricReq:
              LifetimeMetricReq = other.LifetimeMetricReq.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Requirement Clone() {
          return new Requirement(this);
        }

        /// <summary>Field number for the "bool_literal_req" field.</summary>
        public const int BoolLiteralReqFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Enums.BoolLiteral BoolLiteralReq {
          get { return requirementCase_ == RequirementOneofCase.BoolLiteralReq ? (global::WUProtos.Enums.BoolLiteral) requirement_ : 0; }
          set {
            requirement_ = value;
            requirementCase_ = RequirementOneofCase.BoolLiteralReq;
          }
        }

        /// <summary>Field number for the "level_req" field.</summary>
        public const int LevelReqFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.LevelRequirement LevelReq {
          get { return requirementCase_ == RequirementOneofCase.LevelReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.LevelRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.LevelReq;
          }
        }

        /// <summary>Field number for the "vault_item_req" field.</summary>
        public const int VaultItemReqFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.VaultItemRequirement VaultItemReq {
          get { return requirementCase_ == RequirementOneofCase.VaultItemReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.VaultItemRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.VaultItemReq;
          }
        }

        /// <summary>Field number for the "collection_item_req" field.</summary>
        public const int CollectionItemReqFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionItemRequirement CollectionItemReq {
          get { return requirementCase_ == RequirementOneofCase.CollectionItemReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionItemRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.CollectionItemReq;
          }
        }

        /// <summary>Field number for the "collection_family_req" field.</summary>
        public const int CollectionFamilyReqFieldNumber = 5;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionFamilyRequirement CollectionFamilyReq {
          get { return requirementCase_ == RequirementOneofCase.CollectionFamilyReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionFamilyRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.CollectionFamilyReq;
          }
        }

        /// <summary>Field number for the "date_req" field.</summary>
        public const int DateReqFieldNumber = 6;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.DateRequirement DateReq {
          get { return requirementCase_ == RequirementOneofCase.DateReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.DateRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.DateReq;
          }
        }

        /// <summary>Field number for the "flag_req" field.</summary>
        public const int FlagReqFieldNumber = 7;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.PlayerFlagRequirement FlagReq {
          get { return requirementCase_ == RequirementOneofCase.FlagReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.PlayerFlagRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.FlagReq;
          }
        }

        /// <summary>Field number for the "profession_req" field.</summary>
        public const int ProfessionReqFieldNumber = 8;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionRequirement ProfessionReq {
          get { return requirementCase_ == RequirementOneofCase.ProfessionReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.ProfessionReq;
          }
        }

        /// <summary>Field number for the "profession_node_req" field.</summary>
        public const int ProfessionNodeReqFieldNumber = 9;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionNodeRequirement ProfessionNodeReq {
          get { return requirementCase_ == RequirementOneofCase.ProfessionNodeReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionNodeRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.ProfessionNodeReq;
          }
        }

        /// <summary>Field number for the "profession_num_node_level_req" field.</summary>
        public const int ProfessionNumNodeLevelReqFieldNumber = 10;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionTotalNodeLevelRequirement ProfessionNumNodeLevelReq {
          get { return requirementCase_ == RequirementOneofCase.ProfessionNumNodeLevelReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionTotalNodeLevelRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.ProfessionNumNodeLevelReq;
          }
        }

        /// <summary>Field number for the "has_walkbox_req" field.</summary>
        public const int HasWalkboxReqFieldNumber = 11;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.HasWalkboxRequirement HasWalkboxReq {
          get { return requirementCase_ == RequirementOneofCase.HasWalkboxReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.HasWalkboxRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.HasWalkboxReq;
          }
        }

        /// <summary>Field number for the "has_portkey_req" field.</summary>
        public const int HasPortkeyReqFieldNumber = 12;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.HasPortkeyRequirement HasPortkeyReq {
          get { return requirementCase_ == RequirementOneofCase.HasPortkeyReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.HasPortkeyRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.HasPortkeyReq;
          }
        }

        /// <summary>Field number for the "profession_rank_points_req" field.</summary>
        public const int ProfessionRankPointsReqFieldNumber = 13;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionRankPointsRequirement ProfessionRankPointsReq {
          get { return requirementCase_ == RequirementOneofCase.ProfessionRankPointsReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionRankPointsRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.ProfessionRankPointsReq;
          }
        }

        /// <summary>Field number for the "collection_page_req" field.</summary>
        public const int CollectionPageReqFieldNumber = 14;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionPageLevelRequirement CollectionPageReq {
          get { return requirementCase_ == RequirementOneofCase.CollectionPageReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionPageLevelRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.CollectionPageReq;
          }
        }

        /// <summary>Field number for the "collection_item_placed_requirement" field.</summary>
        public const int CollectionItemPlacedRequirementFieldNumber = 15;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionItemPlacedRequirement CollectionItemPlacedRequirement {
          get { return requirementCase_ == RequirementOneofCase.CollectionItemPlacedRequirement ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionItemPlacedRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.CollectionItemPlacedRequirement;
          }
        }

        /// <summary>Field number for the "event_req" field.</summary>
        public const int EventReqFieldNumber = 16;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.EventRequirement EventReq {
          get { return requirementCase_ == RequirementOneofCase.EventReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.EventRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.EventReq;
          }
        }

        /// <summary>Field number for the "quest_completed_req" field.</summary>
        public const int QuestCompletedReqFieldNumber = 17;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.QuestCompletedRequirement QuestCompletedReq {
          get { return requirementCase_ == RequirementOneofCase.QuestCompletedReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.QuestCompletedRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.QuestCompletedReq;
          }
        }

        /// <summary>Field number for the "feature_flag_req" field.</summary>
        public const int FeatureFlagReqFieldNumber = 18;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.FeatureFlagRequirement FeatureFlagReq {
          get { return requirementCase_ == RequirementOneofCase.FeatureFlagReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.FeatureFlagRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.FeatureFlagReq;
          }
        }

        /// <summary>Field number for the "store_pack_req" field.</summary>
        public const int StorePackReqFieldNumber = 19;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.StorePackQuantityRequirement StorePackReq {
          get { return requirementCase_ == RequirementOneofCase.StorePackReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.StorePackQuantityRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.StorePackReq;
          }
        }

        /// <summary>Field number for the "active_ar_mode_req" field.</summary>
        public const int ActiveArModeReqFieldNumber = 20;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.ActiveArModeRequirement ActiveArModeReq {
          get { return requirementCase_ == RequirementOneofCase.ActiveArModeReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.ActiveArModeRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.ActiveArModeReq;
          }
        }

        /// <summary>Field number for the "platform_requirement" field.</summary>
        public const int PlatformRequirementFieldNumber = 21;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.PlatformRequirement PlatformRequirement {
          get { return requirementCase_ == RequirementOneofCase.PlatformRequirement ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.PlatformRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.PlatformRequirement;
          }
        }

        /// <summary>Field number for the "player_account_age_requirement" field.</summary>
        public const int PlayerAccountAgeRequirementFieldNumber = 22;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.PlayerAccountAgeRequirement PlayerAccountAgeRequirement {
          get { return requirementCase_ == RequirementOneofCase.PlayerAccountAgeRequirement ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.PlayerAccountAgeRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.PlayerAccountAgeRequirement;
          }
        }

        /// <summary>Field number for the "profession_tier_req" field.</summary>
        public const int ProfessionTierReqFieldNumber = 23;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionTierRequirement ProfessionTierReq {
          get { return requirementCase_ == RequirementOneofCase.ProfessionTierReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionTierRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.ProfessionTierReq;
          }
        }

        /// <summary>Field number for the "account_creation_date_requirement" field.</summary>
        public const int AccountCreationDateRequirementFieldNumber = 24;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.AccountCreationDateRequirement AccountCreationDateRequirement {
          get { return requirementCase_ == RequirementOneofCase.AccountCreationDateRequirement ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.AccountCreationDateRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.AccountCreationDateRequirement;
          }
        }

        /// <summary>Field number for the "lifetime_metric_req" field.</summary>
        public const int LifetimeMetricReqFieldNumber = 25;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements.Types.Requirement.Types.LifetimeMetricRequirement LifetimeMetricReq {
          get { return requirementCase_ == RequirementOneofCase.LifetimeMetricReq ? (global::WUProtos.Data.Requirements.Types.Requirement.Types.LifetimeMetricRequirement) requirement_ : null; }
          set {
            requirement_ = value;
            requirementCase_ = value == null ? RequirementOneofCase.None : RequirementOneofCase.LifetimeMetricReq;
          }
        }

        private object requirement_;
        /// <summary>Enum of possible cases for the "Requirement" oneof.</summary>
        public enum RequirementOneofCase {
          None = 0,
          BoolLiteralReq = 1,
          LevelReq = 2,
          VaultItemReq = 3,
          CollectionItemReq = 4,
          CollectionFamilyReq = 5,
          DateReq = 6,
          FlagReq = 7,
          ProfessionReq = 8,
          ProfessionNodeReq = 9,
          ProfessionNumNodeLevelReq = 10,
          HasWalkboxReq = 11,
          HasPortkeyReq = 12,
          ProfessionRankPointsReq = 13,
          CollectionPageReq = 14,
          CollectionItemPlacedRequirement = 15,
          EventReq = 16,
          QuestCompletedReq = 17,
          FeatureFlagReq = 18,
          StorePackReq = 19,
          ActiveArModeReq = 20,
          PlatformRequirement = 21,
          PlayerAccountAgeRequirement = 22,
          ProfessionTierReq = 23,
          AccountCreationDateRequirement = 24,
          LifetimeMetricReq = 25,
        }
        private RequirementOneofCase requirementCase_ = RequirementOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequirementOneofCase RequirementCase {
          get { return requirementCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearRequirement() {
          requirementCase_ = RequirementOneofCase.None;
          requirement_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Requirement);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Requirement other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (BoolLiteralReq != other.BoolLiteralReq) return false;
          if (!object.Equals(LevelReq, other.LevelReq)) return false;
          if (!object.Equals(VaultItemReq, other.VaultItemReq)) return false;
          if (!object.Equals(CollectionItemReq, other.CollectionItemReq)) return false;
          if (!object.Equals(CollectionFamilyReq, other.CollectionFamilyReq)) return false;
          if (!object.Equals(DateReq, other.DateReq)) return false;
          if (!object.Equals(FlagReq, other.FlagReq)) return false;
          if (!object.Equals(ProfessionReq, other.ProfessionReq)) return false;
          if (!object.Equals(ProfessionNodeReq, other.ProfessionNodeReq)) return false;
          if (!object.Equals(ProfessionNumNodeLevelReq, other.ProfessionNumNodeLevelReq)) return false;
          if (!object.Equals(HasWalkboxReq, other.HasWalkboxReq)) return false;
          if (!object.Equals(HasPortkeyReq, other.HasPortkeyReq)) return false;
          if (!object.Equals(ProfessionRankPointsReq, other.ProfessionRankPointsReq)) return false;
          if (!object.Equals(CollectionPageReq, other.CollectionPageReq)) return false;
          if (!object.Equals(CollectionItemPlacedRequirement, other.CollectionItemPlacedRequirement)) return false;
          if (!object.Equals(EventReq, other.EventReq)) return false;
          if (!object.Equals(QuestCompletedReq, other.QuestCompletedReq)) return false;
          if (!object.Equals(FeatureFlagReq, other.FeatureFlagReq)) return false;
          if (!object.Equals(StorePackReq, other.StorePackReq)) return false;
          if (!object.Equals(ActiveArModeReq, other.ActiveArModeReq)) return false;
          if (!object.Equals(PlatformRequirement, other.PlatformRequirement)) return false;
          if (!object.Equals(PlayerAccountAgeRequirement, other.PlayerAccountAgeRequirement)) return false;
          if (!object.Equals(ProfessionTierReq, other.ProfessionTierReq)) return false;
          if (!object.Equals(AccountCreationDateRequirement, other.AccountCreationDateRequirement)) return false;
          if (!object.Equals(LifetimeMetricReq, other.LifetimeMetricReq)) return false;
          if (RequirementCase != other.RequirementCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (requirementCase_ == RequirementOneofCase.BoolLiteralReq) hash ^= BoolLiteralReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.LevelReq) hash ^= LevelReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.VaultItemReq) hash ^= VaultItemReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.CollectionItemReq) hash ^= CollectionItemReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.CollectionFamilyReq) hash ^= CollectionFamilyReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.DateReq) hash ^= DateReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.FlagReq) hash ^= FlagReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.ProfessionReq) hash ^= ProfessionReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.ProfessionNodeReq) hash ^= ProfessionNodeReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.ProfessionNumNodeLevelReq) hash ^= ProfessionNumNodeLevelReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.HasWalkboxReq) hash ^= HasWalkboxReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.HasPortkeyReq) hash ^= HasPortkeyReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.ProfessionRankPointsReq) hash ^= ProfessionRankPointsReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.CollectionPageReq) hash ^= CollectionPageReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.CollectionItemPlacedRequirement) hash ^= CollectionItemPlacedRequirement.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.EventReq) hash ^= EventReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.QuestCompletedReq) hash ^= QuestCompletedReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.FeatureFlagReq) hash ^= FeatureFlagReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.StorePackReq) hash ^= StorePackReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.ActiveArModeReq) hash ^= ActiveArModeReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.PlatformRequirement) hash ^= PlatformRequirement.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.PlayerAccountAgeRequirement) hash ^= PlayerAccountAgeRequirement.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.ProfessionTierReq) hash ^= ProfessionTierReq.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.AccountCreationDateRequirement) hash ^= AccountCreationDateRequirement.GetHashCode();
          if (requirementCase_ == RequirementOneofCase.LifetimeMetricReq) hash ^= LifetimeMetricReq.GetHashCode();
          hash ^= (int) requirementCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (requirementCase_ == RequirementOneofCase.BoolLiteralReq) {
            output.WriteRawTag(8);
            output.WriteEnum((int) BoolLiteralReq);
          }
          if (requirementCase_ == RequirementOneofCase.LevelReq) {
            output.WriteRawTag(18);
            output.WriteMessage(LevelReq);
          }
          if (requirementCase_ == RequirementOneofCase.VaultItemReq) {
            output.WriteRawTag(26);
            output.WriteMessage(VaultItemReq);
          }
          if (requirementCase_ == RequirementOneofCase.CollectionItemReq) {
            output.WriteRawTag(34);
            output.WriteMessage(CollectionItemReq);
          }
          if (requirementCase_ == RequirementOneofCase.CollectionFamilyReq) {
            output.WriteRawTag(42);
            output.WriteMessage(CollectionFamilyReq);
          }
          if (requirementCase_ == RequirementOneofCase.DateReq) {
            output.WriteRawTag(50);
            output.WriteMessage(DateReq);
          }
          if (requirementCase_ == RequirementOneofCase.FlagReq) {
            output.WriteRawTag(58);
            output.WriteMessage(FlagReq);
          }
          if (requirementCase_ == RequirementOneofCase.ProfessionReq) {
            output.WriteRawTag(66);
            output.WriteMessage(ProfessionReq);
          }
          if (requirementCase_ == RequirementOneofCase.ProfessionNodeReq) {
            output.WriteRawTag(74);
            output.WriteMessage(ProfessionNodeReq);
          }
          if (requirementCase_ == RequirementOneofCase.ProfessionNumNodeLevelReq) {
            output.WriteRawTag(82);
            output.WriteMessage(ProfessionNumNodeLevelReq);
          }
          if (requirementCase_ == RequirementOneofCase.HasWalkboxReq) {
            output.WriteRawTag(90);
            output.WriteMessage(HasWalkboxReq);
          }
          if (requirementCase_ == RequirementOneofCase.HasPortkeyReq) {
            output.WriteRawTag(98);
            output.WriteMessage(HasPortkeyReq);
          }
          if (requirementCase_ == RequirementOneofCase.ProfessionRankPointsReq) {
            output.WriteRawTag(106);
            output.WriteMessage(ProfessionRankPointsReq);
          }
          if (requirementCase_ == RequirementOneofCase.CollectionPageReq) {
            output.WriteRawTag(114);
            output.WriteMessage(CollectionPageReq);
          }
          if (requirementCase_ == RequirementOneofCase.CollectionItemPlacedRequirement) {
            output.WriteRawTag(122);
            output.WriteMessage(CollectionItemPlacedRequirement);
          }
          if (requirementCase_ == RequirementOneofCase.EventReq) {
            output.WriteRawTag(130, 1);
            output.WriteMessage(EventReq);
          }
          if (requirementCase_ == RequirementOneofCase.QuestCompletedReq) {
            output.WriteRawTag(138, 1);
            output.WriteMessage(QuestCompletedReq);
          }
          if (requirementCase_ == RequirementOneofCase.FeatureFlagReq) {
            output.WriteRawTag(146, 1);
            output.WriteMessage(FeatureFlagReq);
          }
          if (requirementCase_ == RequirementOneofCase.StorePackReq) {
            output.WriteRawTag(154, 1);
            output.WriteMessage(StorePackReq);
          }
          if (requirementCase_ == RequirementOneofCase.ActiveArModeReq) {
            output.WriteRawTag(162, 1);
            output.WriteMessage(ActiveArModeReq);
          }
          if (requirementCase_ == RequirementOneofCase.PlatformRequirement) {
            output.WriteRawTag(170, 1);
            output.WriteMessage(PlatformRequirement);
          }
          if (requirementCase_ == RequirementOneofCase.PlayerAccountAgeRequirement) {
            output.WriteRawTag(178, 1);
            output.WriteMessage(PlayerAccountAgeRequirement);
          }
          if (requirementCase_ == RequirementOneofCase.ProfessionTierReq) {
            output.WriteRawTag(186, 1);
            output.WriteMessage(ProfessionTierReq);
          }
          if (requirementCase_ == RequirementOneofCase.AccountCreationDateRequirement) {
            output.WriteRawTag(194, 1);
            output.WriteMessage(AccountCreationDateRequirement);
          }
          if (requirementCase_ == RequirementOneofCase.LifetimeMetricReq) {
            output.WriteRawTag(202, 1);
            output.WriteMessage(LifetimeMetricReq);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (requirementCase_ == RequirementOneofCase.BoolLiteralReq) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BoolLiteralReq);
          }
          if (requirementCase_ == RequirementOneofCase.LevelReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(LevelReq);
          }
          if (requirementCase_ == RequirementOneofCase.VaultItemReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(VaultItemReq);
          }
          if (requirementCase_ == RequirementOneofCase.CollectionItemReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CollectionItemReq);
          }
          if (requirementCase_ == RequirementOneofCase.CollectionFamilyReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CollectionFamilyReq);
          }
          if (requirementCase_ == RequirementOneofCase.DateReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateReq);
          }
          if (requirementCase_ == RequirementOneofCase.FlagReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FlagReq);
          }
          if (requirementCase_ == RequirementOneofCase.ProfessionReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProfessionReq);
          }
          if (requirementCase_ == RequirementOneofCase.ProfessionNodeReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProfessionNodeReq);
          }
          if (requirementCase_ == RequirementOneofCase.ProfessionNumNodeLevelReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProfessionNumNodeLevelReq);
          }
          if (requirementCase_ == RequirementOneofCase.HasWalkboxReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(HasWalkboxReq);
          }
          if (requirementCase_ == RequirementOneofCase.HasPortkeyReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(HasPortkeyReq);
          }
          if (requirementCase_ == RequirementOneofCase.ProfessionRankPointsReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProfessionRankPointsReq);
          }
          if (requirementCase_ == RequirementOneofCase.CollectionPageReq) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CollectionPageReq);
          }
          if (requirementCase_ == RequirementOneofCase.CollectionItemPlacedRequirement) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CollectionItemPlacedRequirement);
          }
          if (requirementCase_ == RequirementOneofCase.EventReq) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(EventReq);
          }
          if (requirementCase_ == RequirementOneofCase.QuestCompletedReq) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(QuestCompletedReq);
          }
          if (requirementCase_ == RequirementOneofCase.FeatureFlagReq) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(FeatureFlagReq);
          }
          if (requirementCase_ == RequirementOneofCase.StorePackReq) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(StorePackReq);
          }
          if (requirementCase_ == RequirementOneofCase.ActiveArModeReq) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(ActiveArModeReq);
          }
          if (requirementCase_ == RequirementOneofCase.PlatformRequirement) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(PlatformRequirement);
          }
          if (requirementCase_ == RequirementOneofCase.PlayerAccountAgeRequirement) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(PlayerAccountAgeRequirement);
          }
          if (requirementCase_ == RequirementOneofCase.ProfessionTierReq) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(ProfessionTierReq);
          }
          if (requirementCase_ == RequirementOneofCase.AccountCreationDateRequirement) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(AccountCreationDateRequirement);
          }
          if (requirementCase_ == RequirementOneofCase.LifetimeMetricReq) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(LifetimeMetricReq);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Requirement other) {
          if (other == null) {
            return;
          }
          switch (other.RequirementCase) {
            case RequirementOneofCase.BoolLiteralReq:
              BoolLiteralReq = other.BoolLiteralReq;
              break;
            case RequirementOneofCase.LevelReq:
              if (LevelReq == null) {
                LevelReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.LevelRequirement();
              }
              LevelReq.MergeFrom(other.LevelReq);
              break;
            case RequirementOneofCase.VaultItemReq:
              if (VaultItemReq == null) {
                VaultItemReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.VaultItemRequirement();
              }
              VaultItemReq.MergeFrom(other.VaultItemReq);
              break;
            case RequirementOneofCase.CollectionItemReq:
              if (CollectionItemReq == null) {
                CollectionItemReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionItemRequirement();
              }
              CollectionItemReq.MergeFrom(other.CollectionItemReq);
              break;
            case RequirementOneofCase.CollectionFamilyReq:
              if (CollectionFamilyReq == null) {
                CollectionFamilyReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionFamilyRequirement();
              }
              CollectionFamilyReq.MergeFrom(other.CollectionFamilyReq);
              break;
            case RequirementOneofCase.DateReq:
              if (DateReq == null) {
                DateReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.DateRequirement();
              }
              DateReq.MergeFrom(other.DateReq);
              break;
            case RequirementOneofCase.FlagReq:
              if (FlagReq == null) {
                FlagReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.PlayerFlagRequirement();
              }
              FlagReq.MergeFrom(other.FlagReq);
              break;
            case RequirementOneofCase.ProfessionReq:
              if (ProfessionReq == null) {
                ProfessionReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionRequirement();
              }
              ProfessionReq.MergeFrom(other.ProfessionReq);
              break;
            case RequirementOneofCase.ProfessionNodeReq:
              if (ProfessionNodeReq == null) {
                ProfessionNodeReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionNodeRequirement();
              }
              ProfessionNodeReq.MergeFrom(other.ProfessionNodeReq);
              break;
            case RequirementOneofCase.ProfessionNumNodeLevelReq:
              if (ProfessionNumNodeLevelReq == null) {
                ProfessionNumNodeLevelReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionTotalNodeLevelRequirement();
              }
              ProfessionNumNodeLevelReq.MergeFrom(other.ProfessionNumNodeLevelReq);
              break;
            case RequirementOneofCase.HasWalkboxReq:
              if (HasWalkboxReq == null) {
                HasWalkboxReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.HasWalkboxRequirement();
              }
              HasWalkboxReq.MergeFrom(other.HasWalkboxReq);
              break;
            case RequirementOneofCase.HasPortkeyReq:
              if (HasPortkeyReq == null) {
                HasPortkeyReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.HasPortkeyRequirement();
              }
              HasPortkeyReq.MergeFrom(other.HasPortkeyReq);
              break;
            case RequirementOneofCase.ProfessionRankPointsReq:
              if (ProfessionRankPointsReq == null) {
                ProfessionRankPointsReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionRankPointsRequirement();
              }
              ProfessionRankPointsReq.MergeFrom(other.ProfessionRankPointsReq);
              break;
            case RequirementOneofCase.CollectionPageReq:
              if (CollectionPageReq == null) {
                CollectionPageReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionPageLevelRequirement();
              }
              CollectionPageReq.MergeFrom(other.CollectionPageReq);
              break;
            case RequirementOneofCase.CollectionItemPlacedRequirement:
              if (CollectionItemPlacedRequirement == null) {
                CollectionItemPlacedRequirement = new global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionItemPlacedRequirement();
              }
              CollectionItemPlacedRequirement.MergeFrom(other.CollectionItemPlacedRequirement);
              break;
            case RequirementOneofCase.EventReq:
              if (EventReq == null) {
                EventReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.EventRequirement();
              }
              EventReq.MergeFrom(other.EventReq);
              break;
            case RequirementOneofCase.QuestCompletedReq:
              if (QuestCompletedReq == null) {
                QuestCompletedReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.QuestCompletedRequirement();
              }
              QuestCompletedReq.MergeFrom(other.QuestCompletedReq);
              break;
            case RequirementOneofCase.FeatureFlagReq:
              if (FeatureFlagReq == null) {
                FeatureFlagReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.FeatureFlagRequirement();
              }
              FeatureFlagReq.MergeFrom(other.FeatureFlagReq);
              break;
            case RequirementOneofCase.StorePackReq:
              if (StorePackReq == null) {
                StorePackReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.StorePackQuantityRequirement();
              }
              StorePackReq.MergeFrom(other.StorePackReq);
              break;
            case RequirementOneofCase.ActiveArModeReq:
              if (ActiveArModeReq == null) {
                ActiveArModeReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.ActiveArModeRequirement();
              }
              ActiveArModeReq.MergeFrom(other.ActiveArModeReq);
              break;
            case RequirementOneofCase.PlatformRequirement:
              if (PlatformRequirement == null) {
                PlatformRequirement = new global::WUProtos.Data.Requirements.Types.Requirement.Types.PlatformRequirement();
              }
              PlatformRequirement.MergeFrom(other.PlatformRequirement);
              break;
            case RequirementOneofCase.PlayerAccountAgeRequirement:
              if (PlayerAccountAgeRequirement == null) {
                PlayerAccountAgeRequirement = new global::WUProtos.Data.Requirements.Types.Requirement.Types.PlayerAccountAgeRequirement();
              }
              PlayerAccountAgeRequirement.MergeFrom(other.PlayerAccountAgeRequirement);
              break;
            case RequirementOneofCase.ProfessionTierReq:
              if (ProfessionTierReq == null) {
                ProfessionTierReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionTierRequirement();
              }
              ProfessionTierReq.MergeFrom(other.ProfessionTierReq);
              break;
            case RequirementOneofCase.AccountCreationDateRequirement:
              if (AccountCreationDateRequirement == null) {
                AccountCreationDateRequirement = new global::WUProtos.Data.Requirements.Types.Requirement.Types.AccountCreationDateRequirement();
              }
              AccountCreationDateRequirement.MergeFrom(other.AccountCreationDateRequirement);
              break;
            case RequirementOneofCase.LifetimeMetricReq:
              if (LifetimeMetricReq == null) {
                LifetimeMetricReq = new global::WUProtos.Data.Requirements.Types.Requirement.Types.LifetimeMetricRequirement();
              }
              LifetimeMetricReq.MergeFrom(other.LifetimeMetricReq);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                requirement_ = input.ReadEnum();
                requirementCase_ = RequirementOneofCase.BoolLiteralReq;
                break;
              }
              case 18: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.LevelRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.LevelRequirement();
                if (requirementCase_ == RequirementOneofCase.LevelReq) {
                  subBuilder.MergeFrom(LevelReq);
                }
                input.ReadMessage(subBuilder);
                LevelReq = subBuilder;
                break;
              }
              case 26: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.VaultItemRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.VaultItemRequirement();
                if (requirementCase_ == RequirementOneofCase.VaultItemReq) {
                  subBuilder.MergeFrom(VaultItemReq);
                }
                input.ReadMessage(subBuilder);
                VaultItemReq = subBuilder;
                break;
              }
              case 34: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionItemRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionItemRequirement();
                if (requirementCase_ == RequirementOneofCase.CollectionItemReq) {
                  subBuilder.MergeFrom(CollectionItemReq);
                }
                input.ReadMessage(subBuilder);
                CollectionItemReq = subBuilder;
                break;
              }
              case 42: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionFamilyRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionFamilyRequirement();
                if (requirementCase_ == RequirementOneofCase.CollectionFamilyReq) {
                  subBuilder.MergeFrom(CollectionFamilyReq);
                }
                input.ReadMessage(subBuilder);
                CollectionFamilyReq = subBuilder;
                break;
              }
              case 50: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.DateRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.DateRequirement();
                if (requirementCase_ == RequirementOneofCase.DateReq) {
                  subBuilder.MergeFrom(DateReq);
                }
                input.ReadMessage(subBuilder);
                DateReq = subBuilder;
                break;
              }
              case 58: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.PlayerFlagRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.PlayerFlagRequirement();
                if (requirementCase_ == RequirementOneofCase.FlagReq) {
                  subBuilder.MergeFrom(FlagReq);
                }
                input.ReadMessage(subBuilder);
                FlagReq = subBuilder;
                break;
              }
              case 66: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionRequirement();
                if (requirementCase_ == RequirementOneofCase.ProfessionReq) {
                  subBuilder.MergeFrom(ProfessionReq);
                }
                input.ReadMessage(subBuilder);
                ProfessionReq = subBuilder;
                break;
              }
              case 74: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionNodeRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionNodeRequirement();
                if (requirementCase_ == RequirementOneofCase.ProfessionNodeReq) {
                  subBuilder.MergeFrom(ProfessionNodeReq);
                }
                input.ReadMessage(subBuilder);
                ProfessionNodeReq = subBuilder;
                break;
              }
              case 82: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionTotalNodeLevelRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionTotalNodeLevelRequirement();
                if (requirementCase_ == RequirementOneofCase.ProfessionNumNodeLevelReq) {
                  subBuilder.MergeFrom(ProfessionNumNodeLevelReq);
                }
                input.ReadMessage(subBuilder);
                ProfessionNumNodeLevelReq = subBuilder;
                break;
              }
              case 90: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.HasWalkboxRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.HasWalkboxRequirement();
                if (requirementCase_ == RequirementOneofCase.HasWalkboxReq) {
                  subBuilder.MergeFrom(HasWalkboxReq);
                }
                input.ReadMessage(subBuilder);
                HasWalkboxReq = subBuilder;
                break;
              }
              case 98: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.HasPortkeyRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.HasPortkeyRequirement();
                if (requirementCase_ == RequirementOneofCase.HasPortkeyReq) {
                  subBuilder.MergeFrom(HasPortkeyReq);
                }
                input.ReadMessage(subBuilder);
                HasPortkeyReq = subBuilder;
                break;
              }
              case 106: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionRankPointsRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionRankPointsRequirement();
                if (requirementCase_ == RequirementOneofCase.ProfessionRankPointsReq) {
                  subBuilder.MergeFrom(ProfessionRankPointsReq);
                }
                input.ReadMessage(subBuilder);
                ProfessionRankPointsReq = subBuilder;
                break;
              }
              case 114: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionPageLevelRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionPageLevelRequirement();
                if (requirementCase_ == RequirementOneofCase.CollectionPageReq) {
                  subBuilder.MergeFrom(CollectionPageReq);
                }
                input.ReadMessage(subBuilder);
                CollectionPageReq = subBuilder;
                break;
              }
              case 122: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionItemPlacedRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.CollectionItemPlacedRequirement();
                if (requirementCase_ == RequirementOneofCase.CollectionItemPlacedRequirement) {
                  subBuilder.MergeFrom(CollectionItemPlacedRequirement);
                }
                input.ReadMessage(subBuilder);
                CollectionItemPlacedRequirement = subBuilder;
                break;
              }
              case 130: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.EventRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.EventRequirement();
                if (requirementCase_ == RequirementOneofCase.EventReq) {
                  subBuilder.MergeFrom(EventReq);
                }
                input.ReadMessage(subBuilder);
                EventReq = subBuilder;
                break;
              }
              case 138: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.QuestCompletedRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.QuestCompletedRequirement();
                if (requirementCase_ == RequirementOneofCase.QuestCompletedReq) {
                  subBuilder.MergeFrom(QuestCompletedReq);
                }
                input.ReadMessage(subBuilder);
                QuestCompletedReq = subBuilder;
                break;
              }
              case 146: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.FeatureFlagRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.FeatureFlagRequirement();
                if (requirementCase_ == RequirementOneofCase.FeatureFlagReq) {
                  subBuilder.MergeFrom(FeatureFlagReq);
                }
                input.ReadMessage(subBuilder);
                FeatureFlagReq = subBuilder;
                break;
              }
              case 154: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.StorePackQuantityRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.StorePackQuantityRequirement();
                if (requirementCase_ == RequirementOneofCase.StorePackReq) {
                  subBuilder.MergeFrom(StorePackReq);
                }
                input.ReadMessage(subBuilder);
                StorePackReq = subBuilder;
                break;
              }
              case 162: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.ActiveArModeRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.ActiveArModeRequirement();
                if (requirementCase_ == RequirementOneofCase.ActiveArModeReq) {
                  subBuilder.MergeFrom(ActiveArModeReq);
                }
                input.ReadMessage(subBuilder);
                ActiveArModeReq = subBuilder;
                break;
              }
              case 170: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.PlatformRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.PlatformRequirement();
                if (requirementCase_ == RequirementOneofCase.PlatformRequirement) {
                  subBuilder.MergeFrom(PlatformRequirement);
                }
                input.ReadMessage(subBuilder);
                PlatformRequirement = subBuilder;
                break;
              }
              case 178: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.PlayerAccountAgeRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.PlayerAccountAgeRequirement();
                if (requirementCase_ == RequirementOneofCase.PlayerAccountAgeRequirement) {
                  subBuilder.MergeFrom(PlayerAccountAgeRequirement);
                }
                input.ReadMessage(subBuilder);
                PlayerAccountAgeRequirement = subBuilder;
                break;
              }
              case 186: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionTierRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.ProfessionTierRequirement();
                if (requirementCase_ == RequirementOneofCase.ProfessionTierReq) {
                  subBuilder.MergeFrom(ProfessionTierReq);
                }
                input.ReadMessage(subBuilder);
                ProfessionTierReq = subBuilder;
                break;
              }
              case 194: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.AccountCreationDateRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.AccountCreationDateRequirement();
                if (requirementCase_ == RequirementOneofCase.AccountCreationDateRequirement) {
                  subBuilder.MergeFrom(AccountCreationDateRequirement);
                }
                input.ReadMessage(subBuilder);
                AccountCreationDateRequirement = subBuilder;
                break;
              }
              case 202: {
                global::WUProtos.Data.Requirements.Types.Requirement.Types.LifetimeMetricRequirement subBuilder = new global::WUProtos.Data.Requirements.Types.Requirement.Types.LifetimeMetricRequirement();
                if (requirementCase_ == RequirementOneofCase.LifetimeMetricReq) {
                  subBuilder.MergeFrom(LifetimeMetricReq);
                }
                input.ReadMessage(subBuilder);
                LifetimeMetricReq = subBuilder;
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Requirement message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class HasPortkeyRequirement : pb::IMessage<HasPortkeyRequirement> {
            private static readonly pb::MessageParser<HasPortkeyRequirement> _parser = new pb::MessageParser<HasPortkeyRequirement>(() => new HasPortkeyRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<HasPortkeyRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public HasPortkeyRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public HasPortkeyRequirement(HasPortkeyRequirement other) : this() {
              comparisonOperator_ = other.comparisonOperator_;
              qty_ = other.qty_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public HasPortkeyRequirement Clone() {
              return new HasPortkeyRequirement(this);
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 1;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            /// <summary>Field number for the "qty" field.</summary>
            public const int QtyFieldNumber = 2;
            private int qty_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Qty {
              get { return qty_; }
              set {
                qty_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as HasPortkeyRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(HasPortkeyRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ComparisonOperator != other.ComparisonOperator) return false;
              if (Qty != other.Qty) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (Qty != 0) hash ^= Qty.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ComparisonOperator != 0) {
                output.WriteRawTag(8);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (Qty != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Qty);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (Qty != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Qty);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(HasPortkeyRequirement other) {
              if (other == null) {
                return;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              if (other.Qty != 0) {
                Qty = other.Qty;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                  case 16: {
                    Qty = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class HasWalkboxRequirement : pb::IMessage<HasWalkboxRequirement> {
            private static readonly pb::MessageParser<HasWalkboxRequirement> _parser = new pb::MessageParser<HasWalkboxRequirement>(() => new HasWalkboxRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<HasWalkboxRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public HasWalkboxRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public HasWalkboxRequirement(HasWalkboxRequirement other) : this() {
              comparisonOperator_ = other.comparisonOperator_;
              qty_ = other.qty_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public HasWalkboxRequirement Clone() {
              return new HasWalkboxRequirement(this);
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 1;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            /// <summary>Field number for the "qty" field.</summary>
            public const int QtyFieldNumber = 2;
            private int qty_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Qty {
              get { return qty_; }
              set {
                qty_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as HasWalkboxRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(HasWalkboxRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ComparisonOperator != other.ComparisonOperator) return false;
              if (Qty != other.Qty) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (Qty != 0) hash ^= Qty.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ComparisonOperator != 0) {
                output.WriteRawTag(8);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (Qty != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Qty);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (Qty != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Qty);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(HasWalkboxRequirement other) {
              if (other == null) {
                return;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              if (other.Qty != 0) {
                Qty = other.Qty;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                  case 16: {
                    Qty = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class EventRequirement : pb::IMessage<EventRequirement> {
            private static readonly pb::MessageParser<EventRequirement> _parser = new pb::MessageParser<EventRequirement>(() => new EventRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<EventRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EventRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EventRequirement(EventRequirement other) : this() {
              eventId_ = other.eventId_;
              reqSubsets_ = other.reqSubsets_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EventRequirement Clone() {
              return new EventRequirement(this);
            }

            /// <summary>Field number for the "event_id" field.</summary>
            public const int EventIdFieldNumber = 1;
            private string eventId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string EventId {
              get { return eventId_; }
              set {
                eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "req_subsets" field.</summary>
            public const int ReqSubsetsFieldNumber = 2;
            private static readonly pb::FieldCodec<global::WUProtos.Data.Requirements.Types.Requirement.Types.EventRequirement.Types.EventReqSubset> _repeated_reqSubsets_codec
                = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::WUProtos.Data.Requirements.Types.Requirement.Types.EventRequirement.Types.EventReqSubset) x);
            private readonly pbc::RepeatedField<global::WUProtos.Data.Requirements.Types.Requirement.Types.EventRequirement.Types.EventReqSubset> reqSubsets_ = new pbc::RepeatedField<global::WUProtos.Data.Requirements.Types.Requirement.Types.EventRequirement.Types.EventReqSubset>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::WUProtos.Data.Requirements.Types.Requirement.Types.EventRequirement.Types.EventReqSubset> ReqSubsets {
              get { return reqSubsets_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as EventRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(EventRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (EventId != other.EventId) return false;
              if(!reqSubsets_.Equals(other.reqSubsets_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (EventId.Length != 0) hash ^= EventId.GetHashCode();
              hash ^= reqSubsets_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (EventId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(EventId);
              }
              reqSubsets_.WriteTo(output, _repeated_reqSubsets_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (EventId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
              }
              size += reqSubsets_.CalculateSize(_repeated_reqSubsets_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(EventRequirement other) {
              if (other == null) {
                return;
              }
              if (other.EventId.Length != 0) {
                EventId = other.EventId;
              }
              reqSubsets_.Add(other.reqSubsets_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    EventId = input.ReadString();
                    break;
                  }
                  case 18:
                  case 16: {
                    reqSubsets_.AddEntriesFrom(input, _repeated_reqSubsets_codec);
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the EventRequirement message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum EventReqSubset {
                [pbr::OriginalName("SUBSET_UNKNOWN")] SubsetUnknown = 0,
                [pbr::OriginalName("SUBSET_ACTIVATION")] SubsetActivation = 1,
                [pbr::OriginalName("SUBSET_RUNNING")] SubsetRunning = 2,
              }

            }
            #endregion

          }

          public sealed partial class FeatureFlagRequirement : pb::IMessage<FeatureFlagRequirement> {
            private static readonly pb::MessageParser<FeatureFlagRequirement> _parser = new pb::MessageParser<FeatureFlagRequirement>(() => new FeatureFlagRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<FeatureFlagRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[3]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FeatureFlagRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FeatureFlagRequirement(FeatureFlagRequirement other) : this() {
              featureFlagId_ = other.featureFlagId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FeatureFlagRequirement Clone() {
              return new FeatureFlagRequirement(this);
            }

            /// <summary>Field number for the "feature_flag_id" field.</summary>
            public const int FeatureFlagIdFieldNumber = 1;
            private string featureFlagId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string FeatureFlagId {
              get { return featureFlagId_; }
              set {
                featureFlagId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as FeatureFlagRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(FeatureFlagRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (FeatureFlagId != other.FeatureFlagId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (FeatureFlagId.Length != 0) hash ^= FeatureFlagId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (FeatureFlagId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(FeatureFlagId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (FeatureFlagId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(FeatureFlagId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(FeatureFlagRequirement other) {
              if (other == null) {
                return;
              }
              if (other.FeatureFlagId.Length != 0) {
                FeatureFlagId = other.FeatureFlagId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    FeatureFlagId = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class LevelRequirement : pb::IMessage<LevelRequirement> {
            private static readonly pb::MessageParser<LevelRequirement> _parser = new pb::MessageParser<LevelRequirement>(() => new LevelRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<LevelRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[4]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LevelRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LevelRequirement(LevelRequirement other) : this() {
              comparisonOperator_ = other.comparisonOperator_;
              level_ = other.level_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LevelRequirement Clone() {
              return new LevelRequirement(this);
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 1;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            /// <summary>Field number for the "level" field.</summary>
            public const int LevelFieldNumber = 2;
            private int level_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Level {
              get { return level_; }
              set {
                level_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as LevelRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(LevelRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ComparisonOperator != other.ComparisonOperator) return false;
              if (Level != other.Level) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (Level != 0) hash ^= Level.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ComparisonOperator != 0) {
                output.WriteRawTag(8);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (Level != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Level);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (Level != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(LevelRequirement other) {
              if (other == null) {
                return;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              if (other.Level != 0) {
                Level = other.Level;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                  case 16: {
                    Level = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class LifetimeMetricRequirement : pb::IMessage<LifetimeMetricRequirement> {
            private static readonly pb::MessageParser<LifetimeMetricRequirement> _parser = new pb::MessageParser<LifetimeMetricRequirement>(() => new LifetimeMetricRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<LifetimeMetricRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[5]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LifetimeMetricRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LifetimeMetricRequirement(LifetimeMetricRequirement other) : this() {
              lifetimeMetric_ = other.lifetimeMetric_;
              comparisonOperator_ = other.comparisonOperator_;
              requiredCount_ = other.requiredCount_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LifetimeMetricRequirement Clone() {
              return new LifetimeMetricRequirement(this);
            }

            /// <summary>Field number for the "lifetime_metric" field.</summary>
            public const int LifetimeMetricFieldNumber = 1;
            private global::WUProtos.Data.Requirements.Types.Requirement.Types.LifetimeMetricRequirement.Types.LifetimeMetric lifetimeMetric_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Requirements.Types.Requirement.Types.LifetimeMetricRequirement.Types.LifetimeMetric LifetimeMetric {
              get { return lifetimeMetric_; }
              set {
                lifetimeMetric_ = value;
              }
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 2;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            /// <summary>Field number for the "required_count" field.</summary>
            public const int RequiredCountFieldNumber = 3;
            private long requiredCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long RequiredCount {
              get { return requiredCount_; }
              set {
                requiredCount_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as LifetimeMetricRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(LifetimeMetricRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (LifetimeMetric != other.LifetimeMetric) return false;
              if (ComparisonOperator != other.ComparisonOperator) return false;
              if (RequiredCount != other.RequiredCount) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (LifetimeMetric != 0) hash ^= LifetimeMetric.GetHashCode();
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (RequiredCount != 0L) hash ^= RequiredCount.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (LifetimeMetric != 0) {
                output.WriteRawTag(8);
                output.WriteEnum((int) LifetimeMetric);
              }
              if (ComparisonOperator != 0) {
                output.WriteRawTag(16);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (RequiredCount != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(RequiredCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (LifetimeMetric != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LifetimeMetric);
              }
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (RequiredCount != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(RequiredCount);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(LifetimeMetricRequirement other) {
              if (other == null) {
                return;
              }
              if (other.LifetimeMetric != 0) {
                LifetimeMetric = other.LifetimeMetric;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              if (other.RequiredCount != 0L) {
                RequiredCount = other.RequiredCount;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    LifetimeMetric = (global::WUProtos.Data.Requirements.Types.Requirement.Types.LifetimeMetricRequirement.Types.LifetimeMetric) input.ReadEnum();
                    break;
                  }
                  case 16: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                  case 24: {
                    RequiredCount = input.ReadInt64();
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the LifetimeMetricRequirement message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum LifetimeMetric {
                [pbr::OriginalName("NONE")] None = 0,
                [pbr::OriginalName("INN_LOOTED")] InnLooted = 1,
                [pbr::OriginalName("GREENHOUSE_LOOTED")] GreenhouseLooted = 2,
                [pbr::OriginalName("KM_WALKED")] KmWalked = 3,
                [pbr::OriginalName("MAP_ENCOUNTER_CAPTURED")] MapEncounterCaptured = 4,
                [pbr::OriginalName("WC_WON")] WcWon = 5,
                [pbr::OriginalName("STICKERS_COMPLETED")] StickersCompleted = 6,
                [pbr::OriginalName("SUCCESSFUL_SWISH_SPELLCAST")] SuccessfulSwishSpellcast = 7,
                [pbr::OriginalName("SUCCESSFUL_COMBAT_ATTACK_SPELLCAST")] SuccessfulCombatAttackSpellcast = 8,
                [pbr::OriginalName("SUCCESSFUL_COMBAT_DEFEND_SPELLCAST")] SuccessfulCombatDefendSpellcast = 9,
                [pbr::OriginalName("WC_COMPLETED")] WcCompleted = 10,
                [pbr::OriginalName("POTIONS_BREWED")] PotionsBrewed = 11,
                [pbr::OriginalName("DARK_DETECTOR_PLACED")] DarkDetectorPlaced = 12,
                [pbr::OriginalName("PORTKEYS_OPENED")] PortkeysOpened = 13,
                [pbr::OriginalName("MAP_INGREDIENTS_COLLECTED")] MapIngredientsCollected = 14,
                [pbr::OriginalName("POTION_EXSTIMULO_1_USED")] PotionExstimulo1Used = 15,
                [pbr::OriginalName("POTION_EXSTIMULO_2_USED")] PotionExstimulo2Used = 16,
                [pbr::OriginalName("POTION_EXSTIMULO_3_USED")] PotionExstimulo3Used = 17,
                [pbr::OriginalName("POTION_BRAIN_ELIXIR_USED")] PotionBrainElixirUsed = 18,
                [pbr::OriginalName("POTION_USED_ENCOUNTER")] PotionUsedEncounter = 19,
                [pbr::OriginalName("POTION_USED_WC")] PotionUsedWc = 20,
                [pbr::OriginalName("MOBS_DEFEATED_BY_ME")] MobsDefeatedByMe = 21,
                [pbr::OriginalName("SEEDS_PLANTED")] SeedsPlanted = 22,
                [pbr::OriginalName("MYSTERY_ITEMS_FOUND")] MysteryItemsFound = 23,
                [pbr::OriginalName("SWISH_MASTERFUL_SPELLCAST")] SwishMasterfulSpellcast = 24,
                [pbr::OriginalName("ENCOUNTER_COMPLETED_COUNTRY_COUNT")] EncounterCompletedCountryCount = 25,
                [pbr::OriginalName("ELITE_MOBS_DEFEATED_BY_ME")] EliteMobsDefeatedByMe = 26,
                [pbr::OriginalName("MAP_ABILITIES_USED")] MapAbilitiesUsed = 27,
              }

            }
            #endregion

          }

          public sealed partial class StorePackQuantityRequirement : pb::IMessage<StorePackQuantityRequirement> {
            private static readonly pb::MessageParser<StorePackQuantityRequirement> _parser = new pb::MessageParser<StorePackQuantityRequirement>(() => new StorePackQuantityRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<StorePackQuantityRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[6]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public StorePackQuantityRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public StorePackQuantityRequirement(StorePackQuantityRequirement other) : this() {
              storePackId_ = other.storePackId_;
              comparisonOperator_ = other.comparisonOperator_;
              qty_ = other.qty_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public StorePackQuantityRequirement Clone() {
              return new StorePackQuantityRequirement(this);
            }

            /// <summary>Field number for the "store_pack_id" field.</summary>
            public const int StorePackIdFieldNumber = 1;
            private string storePackId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string StorePackId {
              get { return storePackId_; }
              set {
                storePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 2;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            /// <summary>Field number for the "qty" field.</summary>
            public const int QtyFieldNumber = 3;
            private long qty_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long Qty {
              get { return qty_; }
              set {
                qty_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as StorePackQuantityRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(StorePackQuantityRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (StorePackId != other.StorePackId) return false;
              if (ComparisonOperator != other.ComparisonOperator) return false;
              if (Qty != other.Qty) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (StorePackId.Length != 0) hash ^= StorePackId.GetHashCode();
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (Qty != 0L) hash ^= Qty.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (StorePackId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(StorePackId);
              }
              if (ComparisonOperator != 0) {
                output.WriteRawTag(16);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (Qty != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(Qty);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (StorePackId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(StorePackId);
              }
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (Qty != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Qty);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(StorePackQuantityRequirement other) {
              if (other == null) {
                return;
              }
              if (other.StorePackId.Length != 0) {
                StorePackId = other.StorePackId;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              if (other.Qty != 0L) {
                Qty = other.Qty;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    StorePackId = input.ReadString();
                    break;
                  }
                  case 16: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                  case 24: {
                    Qty = input.ReadInt64();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class VaultItemRequirement : pb::IMessage<VaultItemRequirement> {
            private static readonly pb::MessageParser<VaultItemRequirement> _parser = new pb::MessageParser<VaultItemRequirement>(() => new VaultItemRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<VaultItemRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[7]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public VaultItemRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public VaultItemRequirement(VaultItemRequirement other) : this() {
              itemId_ = other.itemId_;
              comparisonOperator_ = other.comparisonOperator_;
              qty_ = other.qty_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public VaultItemRequirement Clone() {
              return new VaultItemRequirement(this);
            }

            /// <summary>Field number for the "item_id" field.</summary>
            public const int ItemIdFieldNumber = 1;
            private string itemId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ItemId {
              get { return itemId_; }
              set {
                itemId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 2;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            /// <summary>Field number for the "qty" field.</summary>
            public const int QtyFieldNumber = 3;
            private long qty_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long Qty {
              get { return qty_; }
              set {
                qty_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as VaultItemRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(VaultItemRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ItemId != other.ItemId) return false;
              if (ComparisonOperator != other.ComparisonOperator) return false;
              if (Qty != other.Qty) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ItemId.Length != 0) hash ^= ItemId.GetHashCode();
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (Qty != 0L) hash ^= Qty.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ItemId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ItemId);
              }
              if (ComparisonOperator != 0) {
                output.WriteRawTag(16);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (Qty != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(Qty);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ItemId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemId);
              }
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (Qty != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Qty);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(VaultItemRequirement other) {
              if (other == null) {
                return;
              }
              if (other.ItemId.Length != 0) {
                ItemId = other.ItemId;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              if (other.Qty != 0L) {
                Qty = other.Qty;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ItemId = input.ReadString();
                    break;
                  }
                  case 16: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                  case 24: {
                    Qty = input.ReadInt64();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class QuestCompletedRequirement : pb::IMessage<QuestCompletedRequirement> {
            private static readonly pb::MessageParser<QuestCompletedRequirement> _parser = new pb::MessageParser<QuestCompletedRequirement>(() => new QuestCompletedRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<QuestCompletedRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[8]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public QuestCompletedRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public QuestCompletedRequirement(QuestCompletedRequirement other) : this() {
              questGmtId_ = other.questGmtId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public QuestCompletedRequirement Clone() {
              return new QuestCompletedRequirement(this);
            }

            /// <summary>Field number for the "quest_gmt_id" field.</summary>
            public const int QuestGmtIdFieldNumber = 1;
            private string questGmtId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string QuestGmtId {
              get { return questGmtId_; }
              set {
                questGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as QuestCompletedRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(QuestCompletedRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (QuestGmtId != other.QuestGmtId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (QuestGmtId.Length != 0) hash ^= QuestGmtId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (QuestGmtId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(QuestGmtId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (QuestGmtId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(QuestGmtId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(QuestCompletedRequirement other) {
              if (other == null) {
                return;
              }
              if (other.QuestGmtId.Length != 0) {
                QuestGmtId = other.QuestGmtId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    QuestGmtId = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class AccountCreationDateRequirement : pb::IMessage<AccountCreationDateRequirement> {
            private static readonly pb::MessageParser<AccountCreationDateRequirement> _parser = new pb::MessageParser<AccountCreationDateRequirement>(() => new AccountCreationDateRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<AccountCreationDateRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[9]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public AccountCreationDateRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public AccountCreationDateRequirement(AccountCreationDateRequirement other) : this() {
              accountCreationDate_ = other.accountCreationDate_;
              comparisonOperator_ = other.comparisonOperator_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public AccountCreationDateRequirement Clone() {
              return new AccountCreationDateRequirement(this);
            }

            /// <summary>Field number for the "account_creation_date" field.</summary>
            public const int AccountCreationDateFieldNumber = 1;
            private long accountCreationDate_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long AccountCreationDate {
              get { return accountCreationDate_; }
              set {
                accountCreationDate_ = value;
              }
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 2;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as AccountCreationDateRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(AccountCreationDateRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (AccountCreationDate != other.AccountCreationDate) return false;
              if (ComparisonOperator != other.ComparisonOperator) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (AccountCreationDate != 0L) hash ^= AccountCreationDate.GetHashCode();
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (AccountCreationDate != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(AccountCreationDate);
              }
              if (ComparisonOperator != 0) {
                output.WriteRawTag(16);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (AccountCreationDate != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountCreationDate);
              }
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(AccountCreationDateRequirement other) {
              if (other == null) {
                return;
              }
              if (other.AccountCreationDate != 0L) {
                AccountCreationDate = other.AccountCreationDate;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    AccountCreationDate = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ActiveArModeRequirement : pb::IMessage<ActiveArModeRequirement> {
            private static readonly pb::MessageParser<ActiveArModeRequirement> _parser = new pb::MessageParser<ActiveArModeRequirement>(() => new ActiveArModeRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ActiveArModeRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[10]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ActiveArModeRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ActiveArModeRequirement(ActiveArModeRequirement other) : this() {
              arMode_ = other.arMode_;
              operator_ = other.operator_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ActiveArModeRequirement Clone() {
              return new ActiveArModeRequirement(this);
            }

            /// <summary>Field number for the "ar_mode" field.</summary>
            public const int ArModeFieldNumber = 1;
            private global::WUProtos.Data.ARMode arMode_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.ARMode ArMode {
              get { return arMode_; }
              set {
                arMode_ = value;
              }
            }

            /// <summary>Field number for the "operator" field.</summary>
            public const int OperatorFieldNumber = 2;
            private global::WUProtos.Enums.EqualityOperator operator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.EqualityOperator Operator {
              get { return operator_; }
              set {
                operator_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ActiveArModeRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ActiveArModeRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ArMode != other.ArMode) return false;
              if (Operator != other.Operator) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ArMode != 0) hash ^= ArMode.GetHashCode();
              if (Operator != 0) hash ^= Operator.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ArMode != 0) {
                output.WriteRawTag(8);
                output.WriteEnum((int) ArMode);
              }
              if (Operator != 0) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Operator);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ArMode != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ArMode);
              }
              if (Operator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operator);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ActiveArModeRequirement other) {
              if (other == null) {
                return;
              }
              if (other.ArMode != 0) {
                ArMode = other.ArMode;
              }
              if (other.Operator != 0) {
                Operator = other.Operator;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    ArMode = (global::WUProtos.Data.ARMode) input.ReadEnum();
                    break;
                  }
                  case 16: {
                    Operator = (global::WUProtos.Enums.EqualityOperator) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class CollectionFamilyRequirement : pb::IMessage<CollectionFamilyRequirement> {
            private static readonly pb::MessageParser<CollectionFamilyRequirement> _parser = new pb::MessageParser<CollectionFamilyRequirement>(() => new CollectionFamilyRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<CollectionFamilyRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[11]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionFamilyRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionFamilyRequirement(CollectionFamilyRequirement other) : this() {
              familyId_ = other.familyId_;
              familyLevel_ = other.familyLevel_;
              comparisonOperator_ = other.comparisonOperator_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionFamilyRequirement Clone() {
              return new CollectionFamilyRequirement(this);
            }

            /// <summary>Field number for the "family_id" field.</summary>
            public const int FamilyIdFieldNumber = 1;
            private string familyId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string FamilyId {
              get { return familyId_; }
              set {
                familyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "family_level" field.</summary>
            public const int FamilyLevelFieldNumber = 2;
            private int familyLevel_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int FamilyLevel {
              get { return familyLevel_; }
              set {
                familyLevel_ = value;
              }
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 3;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as CollectionFamilyRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(CollectionFamilyRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (FamilyId != other.FamilyId) return false;
              if (FamilyLevel != other.FamilyLevel) return false;
              if (ComparisonOperator != other.ComparisonOperator) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (FamilyId.Length != 0) hash ^= FamilyId.GetHashCode();
              if (FamilyLevel != 0) hash ^= FamilyLevel.GetHashCode();
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (FamilyId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(FamilyId);
              }
              if (FamilyLevel != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(FamilyLevel);
              }
              if (ComparisonOperator != 0) {
                output.WriteRawTag(24);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (FamilyId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(FamilyId);
              }
              if (FamilyLevel != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(FamilyLevel);
              }
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(CollectionFamilyRequirement other) {
              if (other == null) {
                return;
              }
              if (other.FamilyId.Length != 0) {
                FamilyId = other.FamilyId;
              }
              if (other.FamilyLevel != 0) {
                FamilyLevel = other.FamilyLevel;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    FamilyId = input.ReadString();
                    break;
                  }
                  case 16: {
                    FamilyLevel = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class TimeRequirementTuple : pb::IMessage<TimeRequirementTuple> {
            private static readonly pb::MessageParser<TimeRequirementTuple> _parser = new pb::MessageParser<TimeRequirementTuple>(() => new TimeRequirementTuple());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<TimeRequirementTuple> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[12]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TimeRequirementTuple() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TimeRequirementTuple(TimeRequirementTuple other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TimeRequirementTuple Clone() {
              return new TimeRequirementTuple(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as TimeRequirementTuple);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(TimeRequirementTuple other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(TimeRequirementTuple other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            }

          }

          public sealed partial class CollectionItemPlacedRequirement : pb::IMessage<CollectionItemPlacedRequirement> {
            private static readonly pb::MessageParser<CollectionItemPlacedRequirement> _parser = new pb::MessageParser<CollectionItemPlacedRequirement>(() => new CollectionItemPlacedRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<CollectionItemPlacedRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[13]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionItemPlacedRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionItemPlacedRequirement(CollectionItemPlacedRequirement other) : this() {
              itemGmtId_ = other.itemGmtId_;
              checkForCurrentPrestigeOnly_ = other.checkForCurrentPrestigeOnly_;
              pageGmtId_ = other.pageGmtId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionItemPlacedRequirement Clone() {
              return new CollectionItemPlacedRequirement(this);
            }

            /// <summary>Field number for the "item_gmt_id" field.</summary>
            public const int ItemGmtIdFieldNumber = 1;
            private string itemGmtId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ItemGmtId {
              get { return itemGmtId_; }
              set {
                itemGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "check_for_current_prestige_only" field.</summary>
            public const int CheckForCurrentPrestigeOnlyFieldNumber = 2;
            private bool checkForCurrentPrestigeOnly_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool CheckForCurrentPrestigeOnly {
              get { return checkForCurrentPrestigeOnly_; }
              set {
                checkForCurrentPrestigeOnly_ = value;
              }
            }

            /// <summary>Field number for the "page_gmt_id" field.</summary>
            public const int PageGmtIdFieldNumber = 3;
            private string pageGmtId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string PageGmtId {
              get { return pageGmtId_; }
              set {
                pageGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as CollectionItemPlacedRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(CollectionItemPlacedRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ItemGmtId != other.ItemGmtId) return false;
              if (CheckForCurrentPrestigeOnly != other.CheckForCurrentPrestigeOnly) return false;
              if (PageGmtId != other.PageGmtId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ItemGmtId.Length != 0) hash ^= ItemGmtId.GetHashCode();
              if (CheckForCurrentPrestigeOnly != false) hash ^= CheckForCurrentPrestigeOnly.GetHashCode();
              if (PageGmtId.Length != 0) hash ^= PageGmtId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ItemGmtId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ItemGmtId);
              }
              if (CheckForCurrentPrestigeOnly != false) {
                output.WriteRawTag(16);
                output.WriteBool(CheckForCurrentPrestigeOnly);
              }
              if (PageGmtId.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(PageGmtId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ItemGmtId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemGmtId);
              }
              if (CheckForCurrentPrestigeOnly != false) {
                size += 1 + 1;
              }
              if (PageGmtId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(PageGmtId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(CollectionItemPlacedRequirement other) {
              if (other == null) {
                return;
              }
              if (other.ItemGmtId.Length != 0) {
                ItemGmtId = other.ItemGmtId;
              }
              if (other.CheckForCurrentPrestigeOnly != false) {
                CheckForCurrentPrestigeOnly = other.CheckForCurrentPrestigeOnly;
              }
              if (other.PageGmtId.Length != 0) {
                PageGmtId = other.PageGmtId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ItemGmtId = input.ReadString();
                    break;
                  }
                  case 16: {
                    CheckForCurrentPrestigeOnly = input.ReadBool();
                    break;
                  }
                  case 26: {
                    PageGmtId = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class CollectionItemRequirement : pb::IMessage<CollectionItemRequirement> {
            private static readonly pb::MessageParser<CollectionItemRequirement> _parser = new pb::MessageParser<CollectionItemRequirement>(() => new CollectionItemRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<CollectionItemRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[14]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionItemRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionItemRequirement(CollectionItemRequirement other) : this() {
              itemId_ = other.itemId_;
              comparisonOperator_ = other.comparisonOperator_;
              shards_ = other.shards_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionItemRequirement Clone() {
              return new CollectionItemRequirement(this);
            }

            /// <summary>Field number for the "item_id" field.</summary>
            public const int ItemIdFieldNumber = 1;
            private string itemId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ItemId {
              get { return itemId_; }
              set {
                itemId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 2;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            /// <summary>Field number for the "shards" field.</summary>
            public const int ShardsFieldNumber = 3;
            private int shards_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Shards {
              get { return shards_; }
              set {
                shards_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as CollectionItemRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(CollectionItemRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ItemId != other.ItemId) return false;
              if (ComparisonOperator != other.ComparisonOperator) return false;
              if (Shards != other.Shards) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ItemId.Length != 0) hash ^= ItemId.GetHashCode();
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (Shards != 0) hash ^= Shards.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ItemId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ItemId);
              }
              if (ComparisonOperator != 0) {
                output.WriteRawTag(16);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (Shards != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(Shards);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ItemId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemId);
              }
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (Shards != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Shards);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(CollectionItemRequirement other) {
              if (other == null) {
                return;
              }
              if (other.ItemId.Length != 0) {
                ItemId = other.ItemId;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              if (other.Shards != 0) {
                Shards = other.Shards;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ItemId = input.ReadString();
                    break;
                  }
                  case 16: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                  case 24: {
                    Shards = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class CollectionPageLevelRequirement : pb::IMessage<CollectionPageLevelRequirement> {
            private static readonly pb::MessageParser<CollectionPageLevelRequirement> _parser = new pb::MessageParser<CollectionPageLevelRequirement>(() => new CollectionPageLevelRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<CollectionPageLevelRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[15]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionPageLevelRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionPageLevelRequirement(CollectionPageLevelRequirement other) : this() {
              pageGmtId_ = other.pageGmtId_;
              level_ = other.level_;
              comparisonOperator_ = other.comparisonOperator_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionPageLevelRequirement Clone() {
              return new CollectionPageLevelRequirement(this);
            }

            /// <summary>Field number for the "page_gmt_id" field.</summary>
            public const int PageGmtIdFieldNumber = 1;
            private string pageGmtId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string PageGmtId {
              get { return pageGmtId_; }
              set {
                pageGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "level" field.</summary>
            public const int LevelFieldNumber = 2;
            private int level_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Level {
              get { return level_; }
              set {
                level_ = value;
              }
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 3;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as CollectionPageLevelRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(CollectionPageLevelRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (PageGmtId != other.PageGmtId) return false;
              if (Level != other.Level) return false;
              if (ComparisonOperator != other.ComparisonOperator) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (PageGmtId.Length != 0) hash ^= PageGmtId.GetHashCode();
              if (Level != 0) hash ^= Level.GetHashCode();
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (PageGmtId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(PageGmtId);
              }
              if (Level != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Level);
              }
              if (ComparisonOperator != 0) {
                output.WriteRawTag(24);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (PageGmtId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(PageGmtId);
              }
              if (Level != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
              }
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(CollectionPageLevelRequirement other) {
              if (other == null) {
                return;
              }
              if (other.PageGmtId.Length != 0) {
                PageGmtId = other.PageGmtId;
              }
              if (other.Level != 0) {
                Level = other.Level;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    PageGmtId = input.ReadString();
                    break;
                  }
                  case 16: {
                    Level = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class DateRequirement : pb::IMessage<DateRequirement> {
            private static readonly pb::MessageParser<DateRequirement> _parser = new pb::MessageParser<DateRequirement>(() => new DateRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<DateRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[16]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DateRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DateRequirement(DateRequirement other) : this() {
              epochDateInSeconds_ = other.epochDateInSeconds_;
              comparisonOperator_ = other.comparisonOperator_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DateRequirement Clone() {
              return new DateRequirement(this);
            }

            /// <summary>Field number for the "epoch_date_in_seconds" field.</summary>
            public const int EpochDateInSecondsFieldNumber = 1;
            private long epochDateInSeconds_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long EpochDateInSeconds {
              get { return epochDateInSeconds_; }
              set {
                epochDateInSeconds_ = value;
              }
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 2;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as DateRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(DateRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (EpochDateInSeconds != other.EpochDateInSeconds) return false;
              if (ComparisonOperator != other.ComparisonOperator) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (EpochDateInSeconds != 0L) hash ^= EpochDateInSeconds.GetHashCode();
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (EpochDateInSeconds != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(EpochDateInSeconds);
              }
              if (ComparisonOperator != 0) {
                output.WriteRawTag(16);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (EpochDateInSeconds != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(EpochDateInSeconds);
              }
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(DateRequirement other) {
              if (other == null) {
                return;
              }
              if (other.EpochDateInSeconds != 0L) {
                EpochDateInSeconds = other.EpochDateInSeconds;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    EpochDateInSeconds = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class PlayerAccountAgeRequirement : pb::IMessage<PlayerAccountAgeRequirement> {
            private static readonly pb::MessageParser<PlayerAccountAgeRequirement> _parser = new pb::MessageParser<PlayerAccountAgeRequirement>(() => new PlayerAccountAgeRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<PlayerAccountAgeRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[17]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PlayerAccountAgeRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PlayerAccountAgeRequirement(PlayerAccountAgeRequirement other) : this() {
              accountAgeInSeconds_ = other.accountAgeInSeconds_;
              comparisonOperator_ = other.comparisonOperator_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PlayerAccountAgeRequirement Clone() {
              return new PlayerAccountAgeRequirement(this);
            }

            /// <summary>Field number for the "account_age_in_seconds" field.</summary>
            public const int AccountAgeInSecondsFieldNumber = 1;
            private long accountAgeInSeconds_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long AccountAgeInSeconds {
              get { return accountAgeInSeconds_; }
              set {
                accountAgeInSeconds_ = value;
              }
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 2;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as PlayerAccountAgeRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(PlayerAccountAgeRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (AccountAgeInSeconds != other.AccountAgeInSeconds) return false;
              if (ComparisonOperator != other.ComparisonOperator) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (AccountAgeInSeconds != 0L) hash ^= AccountAgeInSeconds.GetHashCode();
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (AccountAgeInSeconds != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(AccountAgeInSeconds);
              }
              if (ComparisonOperator != 0) {
                output.WriteRawTag(16);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (AccountAgeInSeconds != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(AccountAgeInSeconds);
              }
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(PlayerAccountAgeRequirement other) {
              if (other == null) {
                return;
              }
              if (other.AccountAgeInSeconds != 0L) {
                AccountAgeInSeconds = other.AccountAgeInSeconds;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    AccountAgeInSeconds = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class PlayerFlagRequirement : pb::IMessage<PlayerFlagRequirement> {
            private static readonly pb::MessageParser<PlayerFlagRequirement> _parser = new pb::MessageParser<PlayerFlagRequirement>(() => new PlayerFlagRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<PlayerFlagRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[18]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PlayerFlagRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PlayerFlagRequirement(PlayerFlagRequirement other) : this() {
              playerFlagFeatureId_ = other.playerFlagFeatureId_;
              playerFlagId_ = other.playerFlagId_;
              comparisonOperator_ = other.comparisonOperator_;
              switch (other.FlagValueCase) {
                case FlagValueOneofCase.Bval:
                  Bval = other.Bval;
                  break;
                case FlagValueOneofCase.Lval:
                  Lval = other.Lval;
                  break;
                case FlagValueOneofCase.Sval:
                  Sval = other.Sval;
                  break;
                case FlagValueOneofCase.Fval:
                  Fval = other.Fval;
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PlayerFlagRequirement Clone() {
              return new PlayerFlagRequirement(this);
            }

            /// <summary>Field number for the "player_flag_feature_id" field.</summary>
            public const int PlayerFlagFeatureIdFieldNumber = 1;
            private string playerFlagFeatureId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string PlayerFlagFeatureId {
              get { return playerFlagFeatureId_; }
              set {
                playerFlagFeatureId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "player_flag_id" field.</summary>
            public const int PlayerFlagIdFieldNumber = 2;
            private string playerFlagId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string PlayerFlagId {
              get { return playerFlagId_; }
              set {
                playerFlagId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 3;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            /// <summary>Field number for the "bval" field.</summary>
            public const int BvalFieldNumber = 4;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Bval {
              get { return flagValueCase_ == FlagValueOneofCase.Bval ? (bool) flagValue_ : false; }
              set {
                flagValue_ = value;
                flagValueCase_ = FlagValueOneofCase.Bval;
              }
            }

            /// <summary>Field number for the "lval" field.</summary>
            public const int LvalFieldNumber = 5;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long Lval {
              get { return flagValueCase_ == FlagValueOneofCase.Lval ? (long) flagValue_ : 0L; }
              set {
                flagValue_ = value;
                flagValueCase_ = FlagValueOneofCase.Lval;
              }
            }

            /// <summary>Field number for the "sval" field.</summary>
            public const int SvalFieldNumber = 6;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Sval {
              get { return flagValueCase_ == FlagValueOneofCase.Sval ? (string) flagValue_ : ""; }
              set {
                flagValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                flagValueCase_ = FlagValueOneofCase.Sval;
              }
            }

            /// <summary>Field number for the "fval" field.</summary>
            public const int FvalFieldNumber = 7;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public float Fval {
              get { return flagValueCase_ == FlagValueOneofCase.Fval ? (float) flagValue_ : 0F; }
              set {
                flagValue_ = value;
                flagValueCase_ = FlagValueOneofCase.Fval;
              }
            }

            private object flagValue_;
            /// <summary>Enum of possible cases for the "FlagValue" oneof.</summary>
            public enum FlagValueOneofCase {
              None = 0,
              Bval = 4,
              Lval = 5,
              Sval = 6,
              Fval = 7,
            }
            private FlagValueOneofCase flagValueCase_ = FlagValueOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FlagValueOneofCase FlagValueCase {
              get { return flagValueCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearFlagValue() {
              flagValueCase_ = FlagValueOneofCase.None;
              flagValue_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as PlayerFlagRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(PlayerFlagRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (PlayerFlagFeatureId != other.PlayerFlagFeatureId) return false;
              if (PlayerFlagId != other.PlayerFlagId) return false;
              if (ComparisonOperator != other.ComparisonOperator) return false;
              if (Bval != other.Bval) return false;
              if (Lval != other.Lval) return false;
              if (Sval != other.Sval) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Fval, other.Fval)) return false;
              if (FlagValueCase != other.FlagValueCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (PlayerFlagFeatureId.Length != 0) hash ^= PlayerFlagFeatureId.GetHashCode();
              if (PlayerFlagId.Length != 0) hash ^= PlayerFlagId.GetHashCode();
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (flagValueCase_ == FlagValueOneofCase.Bval) hash ^= Bval.GetHashCode();
              if (flagValueCase_ == FlagValueOneofCase.Lval) hash ^= Lval.GetHashCode();
              if (flagValueCase_ == FlagValueOneofCase.Sval) hash ^= Sval.GetHashCode();
              if (flagValueCase_ == FlagValueOneofCase.Fval) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Fval);
              hash ^= (int) flagValueCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (PlayerFlagFeatureId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(PlayerFlagFeatureId);
              }
              if (PlayerFlagId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(PlayerFlagId);
              }
              if (ComparisonOperator != 0) {
                output.WriteRawTag(24);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (flagValueCase_ == FlagValueOneofCase.Bval) {
                output.WriteRawTag(32);
                output.WriteBool(Bval);
              }
              if (flagValueCase_ == FlagValueOneofCase.Lval) {
                output.WriteRawTag(40);
                output.WriteInt64(Lval);
              }
              if (flagValueCase_ == FlagValueOneofCase.Sval) {
                output.WriteRawTag(50);
                output.WriteString(Sval);
              }
              if (flagValueCase_ == FlagValueOneofCase.Fval) {
                output.WriteRawTag(61);
                output.WriteFloat(Fval);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (PlayerFlagFeatureId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerFlagFeatureId);
              }
              if (PlayerFlagId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerFlagId);
              }
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (flagValueCase_ == FlagValueOneofCase.Bval) {
                size += 1 + 1;
              }
              if (flagValueCase_ == FlagValueOneofCase.Lval) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Lval);
              }
              if (flagValueCase_ == FlagValueOneofCase.Sval) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Sval);
              }
              if (flagValueCase_ == FlagValueOneofCase.Fval) {
                size += 1 + 4;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(PlayerFlagRequirement other) {
              if (other == null) {
                return;
              }
              if (other.PlayerFlagFeatureId.Length != 0) {
                PlayerFlagFeatureId = other.PlayerFlagFeatureId;
              }
              if (other.PlayerFlagId.Length != 0) {
                PlayerFlagId = other.PlayerFlagId;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              switch (other.FlagValueCase) {
                case FlagValueOneofCase.Bval:
                  Bval = other.Bval;
                  break;
                case FlagValueOneofCase.Lval:
                  Lval = other.Lval;
                  break;
                case FlagValueOneofCase.Sval:
                  Sval = other.Sval;
                  break;
                case FlagValueOneofCase.Fval:
                  Fval = other.Fval;
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    PlayerFlagFeatureId = input.ReadString();
                    break;
                  }
                  case 18: {
                    PlayerFlagId = input.ReadString();
                    break;
                  }
                  case 24: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                  case 32: {
                    Bval = input.ReadBool();
                    break;
                  }
                  case 40: {
                    Lval = input.ReadInt64();
                    break;
                  }
                  case 50: {
                    Sval = input.ReadString();
                    break;
                  }
                  case 61: {
                    Fval = input.ReadFloat();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ProfessionNodeRequirement : pb::IMessage<ProfessionNodeRequirement> {
            private static readonly pb::MessageParser<ProfessionNodeRequirement> _parser = new pb::MessageParser<ProfessionNodeRequirement>(() => new ProfessionNodeRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ProfessionNodeRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[19]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfessionNodeRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfessionNodeRequirement(ProfessionNodeRequirement other) : this() {
              professionNodeId_ = other.professionNodeId_;
              professionNodeLevel_ = other.professionNodeLevel_;
              comparisonOperator_ = other.comparisonOperator_;
              professionRankId_ = other.professionRankId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfessionNodeRequirement Clone() {
              return new ProfessionNodeRequirement(this);
            }

            /// <summary>Field number for the "profession_node_id" field.</summary>
            public const int ProfessionNodeIdFieldNumber = 1;
            private string professionNodeId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ProfessionNodeId {
              get { return professionNodeId_; }
              set {
                professionNodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "profession_node_level" field.</summary>
            public const int ProfessionNodeLevelFieldNumber = 2;
            private uint professionNodeLevel_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint ProfessionNodeLevel {
              get { return professionNodeLevel_; }
              set {
                professionNodeLevel_ = value;
              }
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 3;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            /// <summary>Field number for the "profession_rank_id" field.</summary>
            public const int ProfessionRankIdFieldNumber = 5;
            private string professionRankId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ProfessionRankId {
              get { return professionRankId_; }
              set {
                professionRankId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ProfessionNodeRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ProfessionNodeRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ProfessionNodeId != other.ProfessionNodeId) return false;
              if (ProfessionNodeLevel != other.ProfessionNodeLevel) return false;
              if (ComparisonOperator != other.ComparisonOperator) return false;
              if (ProfessionRankId != other.ProfessionRankId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ProfessionNodeId.Length != 0) hash ^= ProfessionNodeId.GetHashCode();
              if (ProfessionNodeLevel != 0) hash ^= ProfessionNodeLevel.GetHashCode();
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (ProfessionRankId.Length != 0) hash ^= ProfessionRankId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ProfessionNodeId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ProfessionNodeId);
              }
              if (ProfessionNodeLevel != 0) {
                output.WriteRawTag(16);
                output.WriteUInt32(ProfessionNodeLevel);
              }
              if (ComparisonOperator != 0) {
                output.WriteRawTag(24);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (ProfessionRankId.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(ProfessionRankId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ProfessionNodeId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfessionNodeId);
              }
              if (ProfessionNodeLevel != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProfessionNodeLevel);
              }
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (ProfessionRankId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfessionRankId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ProfessionNodeRequirement other) {
              if (other == null) {
                return;
              }
              if (other.ProfessionNodeId.Length != 0) {
                ProfessionNodeId = other.ProfessionNodeId;
              }
              if (other.ProfessionNodeLevel != 0) {
                ProfessionNodeLevel = other.ProfessionNodeLevel;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              if (other.ProfessionRankId.Length != 0) {
                ProfessionRankId = other.ProfessionRankId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ProfessionNodeId = input.ReadString();
                    break;
                  }
                  case 16: {
                    ProfessionNodeLevel = input.ReadUInt32();
                    break;
                  }
                  case 24: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                  case 42: {
                    ProfessionRankId = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ProfessionRankPointsRequirement : pb::IMessage<ProfessionRankPointsRequirement> {
            private static readonly pb::MessageParser<ProfessionRankPointsRequirement> _parser = new pb::MessageParser<ProfessionRankPointsRequirement>(() => new ProfessionRankPointsRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ProfessionRankPointsRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[20]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfessionRankPointsRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfessionRankPointsRequirement(ProfessionRankPointsRequirement other) : this() {
              professionGmtId_ = other.professionGmtId_;
              rankPoints_ = other.rankPoints_;
              comparisonOperator_ = other.comparisonOperator_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfessionRankPointsRequirement Clone() {
              return new ProfessionRankPointsRequirement(this);
            }

            /// <summary>Field number for the "profession_gmt_id" field.</summary>
            public const int ProfessionGmtIdFieldNumber = 1;
            private string professionGmtId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ProfessionGmtId {
              get { return professionGmtId_; }
              set {
                professionGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "rank_points" field.</summary>
            public const int RankPointsFieldNumber = 2;
            private int rankPoints_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int RankPoints {
              get { return rankPoints_; }
              set {
                rankPoints_ = value;
              }
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 3;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ProfessionRankPointsRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ProfessionRankPointsRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ProfessionGmtId != other.ProfessionGmtId) return false;
              if (RankPoints != other.RankPoints) return false;
              if (ComparisonOperator != other.ComparisonOperator) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ProfessionGmtId.Length != 0) hash ^= ProfessionGmtId.GetHashCode();
              if (RankPoints != 0) hash ^= RankPoints.GetHashCode();
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ProfessionGmtId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ProfessionGmtId);
              }
              if (RankPoints != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(RankPoints);
              }
              if (ComparisonOperator != 0) {
                output.WriteRawTag(24);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ProfessionGmtId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfessionGmtId);
              }
              if (RankPoints != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankPoints);
              }
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ProfessionRankPointsRequirement other) {
              if (other == null) {
                return;
              }
              if (other.ProfessionGmtId.Length != 0) {
                ProfessionGmtId = other.ProfessionGmtId;
              }
              if (other.RankPoints != 0) {
                RankPoints = other.RankPoints;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ProfessionGmtId = input.ReadString();
                    break;
                  }
                  case 16: {
                    RankPoints = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ProfessionRequirement : pb::IMessage<ProfessionRequirement> {
            private static readonly pb::MessageParser<ProfessionRequirement> _parser = new pb::MessageParser<ProfessionRequirement>(() => new ProfessionRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ProfessionRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[21]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfessionRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfessionRequirement(ProfessionRequirement other) : this() {
              professionGmtId_ = other.professionGmtId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfessionRequirement Clone() {
              return new ProfessionRequirement(this);
            }

            /// <summary>Field number for the "profession_gmt_id" field.</summary>
            public const int ProfessionGmtIdFieldNumber = 1;
            private string professionGmtId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ProfessionGmtId {
              get { return professionGmtId_; }
              set {
                professionGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ProfessionRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ProfessionRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ProfessionGmtId != other.ProfessionGmtId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ProfessionGmtId.Length != 0) hash ^= ProfessionGmtId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ProfessionGmtId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ProfessionGmtId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ProfessionGmtId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfessionGmtId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ProfessionRequirement other) {
              if (other == null) {
                return;
              }
              if (other.ProfessionGmtId.Length != 0) {
                ProfessionGmtId = other.ProfessionGmtId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ProfessionGmtId = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ProfessionTierRequirement : pb::IMessage<ProfessionTierRequirement> {
            private static readonly pb::MessageParser<ProfessionTierRequirement> _parser = new pb::MessageParser<ProfessionTierRequirement>(() => new ProfessionTierRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ProfessionTierRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[22]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfessionTierRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfessionTierRequirement(ProfessionTierRequirement other) : this() {
              professionGmtId_ = other.professionGmtId_;
              professionTier_ = other.professionTier_;
              comparisonOperator_ = other.comparisonOperator_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfessionTierRequirement Clone() {
              return new ProfessionTierRequirement(this);
            }

            /// <summary>Field number for the "profession_gmt_id" field.</summary>
            public const int ProfessionGmtIdFieldNumber = 1;
            private string professionGmtId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ProfessionGmtId {
              get { return professionGmtId_; }
              set {
                professionGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "profession_tier" field.</summary>
            public const int ProfessionTierFieldNumber = 2;
            private uint professionTier_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint ProfessionTier {
              get { return professionTier_; }
              set {
                professionTier_ = value;
              }
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 3;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ProfessionTierRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ProfessionTierRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ProfessionGmtId != other.ProfessionGmtId) return false;
              if (ProfessionTier != other.ProfessionTier) return false;
              if (ComparisonOperator != other.ComparisonOperator) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ProfessionGmtId.Length != 0) hash ^= ProfessionGmtId.GetHashCode();
              if (ProfessionTier != 0) hash ^= ProfessionTier.GetHashCode();
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ProfessionGmtId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ProfessionGmtId);
              }
              if (ProfessionTier != 0) {
                output.WriteRawTag(16);
                output.WriteUInt32(ProfessionTier);
              }
              if (ComparisonOperator != 0) {
                output.WriteRawTag(24);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ProfessionGmtId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfessionGmtId);
              }
              if (ProfessionTier != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProfessionTier);
              }
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ProfessionTierRequirement other) {
              if (other == null) {
                return;
              }
              if (other.ProfessionGmtId.Length != 0) {
                ProfessionGmtId = other.ProfessionGmtId;
              }
              if (other.ProfessionTier != 0) {
                ProfessionTier = other.ProfessionTier;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ProfessionGmtId = input.ReadString();
                    break;
                  }
                  case 16: {
                    ProfessionTier = input.ReadUInt32();
                    break;
                  }
                  case 24: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ProfessionTotalNodeLevelRequirement : pb::IMessage<ProfessionTotalNodeLevelRequirement> {
            private static readonly pb::MessageParser<ProfessionTotalNodeLevelRequirement> _parser = new pb::MessageParser<ProfessionTotalNodeLevelRequirement>(() => new ProfessionTotalNodeLevelRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ProfessionTotalNodeLevelRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[23]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfessionTotalNodeLevelRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfessionTotalNodeLevelRequirement(ProfessionTotalNodeLevelRequirement other) : this() {
              professionGmtId_ = other.professionGmtId_;
              numProfessionNodeLevels_ = other.numProfessionNodeLevels_;
              comparisonOperator_ = other.comparisonOperator_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ProfessionTotalNodeLevelRequirement Clone() {
              return new ProfessionTotalNodeLevelRequirement(this);
            }

            /// <summary>Field number for the "profession_gmt_id" field.</summary>
            public const int ProfessionGmtIdFieldNumber = 1;
            private string professionGmtId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ProfessionGmtId {
              get { return professionGmtId_; }
              set {
                professionGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "num_profession_node_levels" field.</summary>
            public const int NumProfessionNodeLevelsFieldNumber = 2;
            private int numProfessionNodeLevels_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int NumProfessionNodeLevels {
              get { return numProfessionNodeLevels_; }
              set {
                numProfessionNodeLevels_ = value;
              }
            }

            /// <summary>Field number for the "comparison_operator" field.</summary>
            public const int ComparisonOperatorFieldNumber = 3;
            private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
              get { return comparisonOperator_; }
              set {
                comparisonOperator_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ProfessionTotalNodeLevelRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ProfessionTotalNodeLevelRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ProfessionGmtId != other.ProfessionGmtId) return false;
              if (NumProfessionNodeLevels != other.NumProfessionNodeLevels) return false;
              if (ComparisonOperator != other.ComparisonOperator) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ProfessionGmtId.Length != 0) hash ^= ProfessionGmtId.GetHashCode();
              if (NumProfessionNodeLevels != 0) hash ^= NumProfessionNodeLevels.GetHashCode();
              if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (ProfessionGmtId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(ProfessionGmtId);
              }
              if (NumProfessionNodeLevels != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(NumProfessionNodeLevels);
              }
              if (ComparisonOperator != 0) {
                output.WriteRawTag(24);
                output.WriteEnum((int) ComparisonOperator);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ProfessionGmtId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfessionGmtId);
              }
              if (NumProfessionNodeLevels != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumProfessionNodeLevels);
              }
              if (ComparisonOperator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ProfessionTotalNodeLevelRequirement other) {
              if (other == null) {
                return;
              }
              if (other.ProfessionGmtId.Length != 0) {
                ProfessionGmtId = other.ProfessionGmtId;
              }
              if (other.NumProfessionNodeLevels != 0) {
                NumProfessionNodeLevels = other.NumProfessionNodeLevels;
              }
              if (other.ComparisonOperator != 0) {
                ComparisonOperator = other.ComparisonOperator;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    ProfessionGmtId = input.ReadString();
                    break;
                  }
                  case 16: {
                    NumProfessionNodeLevels = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class PlatformRequirement : pb::IMessage<PlatformRequirement> {
            private static readonly pb::MessageParser<PlatformRequirement> _parser = new pb::MessageParser<PlatformRequirement>(() => new PlatformRequirement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<PlatformRequirement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Requirements.Types.Requirement.Descriptor.NestedTypes[24]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PlatformRequirement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PlatformRequirement(PlatformRequirement other) : this() {
              platform_ = other.platform_;
              operator_ = other.operator_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PlatformRequirement Clone() {
              return new PlatformRequirement(this);
            }

            /// <summary>Field number for the "platform" field.</summary>
            public const int PlatformFieldNumber = 1;
            private global::WUProtos.Enums.DevicePlatform platform_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.DevicePlatform Platform {
              get { return platform_; }
              set {
                platform_ = value;
              }
            }

            /// <summary>Field number for the "operator" field.</summary>
            public const int OperatorFieldNumber = 2;
            private global::WUProtos.Enums.EqualityOperator operator_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Enums.EqualityOperator Operator {
              get { return operator_; }
              set {
                operator_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as PlatformRequirement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(PlatformRequirement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Platform != other.Platform) return false;
              if (Operator != other.Operator) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Platform != 0) hash ^= Platform.GetHashCode();
              if (Operator != 0) hash ^= Operator.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Platform != 0) {
                output.WriteRawTag(8);
                output.WriteEnum((int) Platform);
              }
              if (Operator != 0) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Operator);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Platform != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Platform);
              }
              if (Operator != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operator);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(PlatformRequirement other) {
              if (other == null) {
                return;
              }
              if (other.Platform != 0) {
                Platform = other.Platform;
              }
              if (other.Operator != 0) {
                Operator = other.Operator;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Platform = (global::WUProtos.Enums.DevicePlatform) input.ReadEnum();
                    break;
                  }
                  case 16: {
                    Operator = (global::WUProtos.Enums.EqualityOperator) input.ReadEnum();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
