// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Event/LocationUpdateEventParams.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Event {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Event/LocationUpdateEventParams.proto</summary>
  public static partial class LocationUpdateEventParamsReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Event/LocationUpdateEventParams.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LocationUpdateEventParamsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNXVVByb3Rvcy9EYXRhL0V2ZW50L0xvY2F0aW9uVXBkYXRlRXZlbnRQYXJh",
            "bXMucHJvdG8SE1dVUHJvdG9zLkRhdGEuRXZlbnQitQEKGUxvY2F0aW9uVXBk",
            "YXRlRXZlbnRQYXJhbXMSFAoMbGF0aXR1ZGVfZGVnGAEgASgBEhUKDWxvbmdp",
            "dHVkZV9kZWcYAiABKAESEgoKYWx0aXR1ZGVfbRgDIAEoARISCgphY2N1cmFj",
            "eV9tGAQgASgBEhMKC3RpbWVzdGFtcF9zGAUgASgBEhcKD3Byb3ZpZGVyX3N0",
            "YXR1cxgGIAEoDRIVCg1sb2NhdGlvbl90eXBlGAcgASgNYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Event.LocationUpdateEventParams), global::WUProtos.Data.Event.LocationUpdateEventParams.Parser, new[]{ "LatitudeDeg", "LongitudeDeg", "AltitudeM", "AccuracyM", "TimestampS", "ProviderStatus", "LocationType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LocationUpdateEventParams : pb::IMessage<LocationUpdateEventParams> {
    private static readonly pb::MessageParser<LocationUpdateEventParams> _parser = new pb::MessageParser<LocationUpdateEventParams>(() => new LocationUpdateEventParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationUpdateEventParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Event.LocationUpdateEventParamsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationUpdateEventParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationUpdateEventParams(LocationUpdateEventParams other) : this() {
      latitudeDeg_ = other.latitudeDeg_;
      longitudeDeg_ = other.longitudeDeg_;
      altitudeM_ = other.altitudeM_;
      accuracyM_ = other.accuracyM_;
      timestampS_ = other.timestampS_;
      providerStatus_ = other.providerStatus_;
      locationType_ = other.locationType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationUpdateEventParams Clone() {
      return new LocationUpdateEventParams(this);
    }

    /// <summary>Field number for the "latitude_deg" field.</summary>
    public const int LatitudeDegFieldNumber = 1;
    private double latitudeDeg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double LatitudeDeg {
      get { return latitudeDeg_; }
      set {
        latitudeDeg_ = value;
      }
    }

    /// <summary>Field number for the "longitude_deg" field.</summary>
    public const int LongitudeDegFieldNumber = 2;
    private double longitudeDeg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double LongitudeDeg {
      get { return longitudeDeg_; }
      set {
        longitudeDeg_ = value;
      }
    }

    /// <summary>Field number for the "altitude_m" field.</summary>
    public const int AltitudeMFieldNumber = 3;
    private double altitudeM_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double AltitudeM {
      get { return altitudeM_; }
      set {
        altitudeM_ = value;
      }
    }

    /// <summary>Field number for the "accuracy_m" field.</summary>
    public const int AccuracyMFieldNumber = 4;
    private double accuracyM_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double AccuracyM {
      get { return accuracyM_; }
      set {
        accuracyM_ = value;
      }
    }

    /// <summary>Field number for the "timestamp_s" field.</summary>
    public const int TimestampSFieldNumber = 5;
    private double timestampS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TimestampS {
      get { return timestampS_; }
      set {
        timestampS_ = value;
      }
    }

    /// <summary>Field number for the "provider_status" field.</summary>
    public const int ProviderStatusFieldNumber = 6;
    private uint providerStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ProviderStatus {
      get { return providerStatus_; }
      set {
        providerStatus_ = value;
      }
    }

    /// <summary>Field number for the "location_type" field.</summary>
    public const int LocationTypeFieldNumber = 7;
    private uint locationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint LocationType {
      get { return locationType_; }
      set {
        locationType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationUpdateEventParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationUpdateEventParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LatitudeDeg, other.LatitudeDeg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LongitudeDeg, other.LongitudeDeg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AltitudeM, other.AltitudeM)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AccuracyM, other.AccuracyM)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimestampS, other.TimestampS)) return false;
      if (ProviderStatus != other.ProviderStatus) return false;
      if (LocationType != other.LocationType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LatitudeDeg != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LatitudeDeg);
      if (LongitudeDeg != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LongitudeDeg);
      if (AltitudeM != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AltitudeM);
      if (AccuracyM != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AccuracyM);
      if (TimestampS != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimestampS);
      if (ProviderStatus != 0) hash ^= ProviderStatus.GetHashCode();
      if (LocationType != 0) hash ^= LocationType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LatitudeDeg != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(LatitudeDeg);
      }
      if (LongitudeDeg != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(LongitudeDeg);
      }
      if (AltitudeM != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(AltitudeM);
      }
      if (AccuracyM != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(AccuracyM);
      }
      if (TimestampS != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(TimestampS);
      }
      if (ProviderStatus != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(ProviderStatus);
      }
      if (LocationType != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(LocationType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LatitudeDeg != 0D) {
        size += 1 + 8;
      }
      if (LongitudeDeg != 0D) {
        size += 1 + 8;
      }
      if (AltitudeM != 0D) {
        size += 1 + 8;
      }
      if (AccuracyM != 0D) {
        size += 1 + 8;
      }
      if (TimestampS != 0D) {
        size += 1 + 8;
      }
      if (ProviderStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProviderStatus);
      }
      if (LocationType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LocationType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationUpdateEventParams other) {
      if (other == null) {
        return;
      }
      if (other.LatitudeDeg != 0D) {
        LatitudeDeg = other.LatitudeDeg;
      }
      if (other.LongitudeDeg != 0D) {
        LongitudeDeg = other.LongitudeDeg;
      }
      if (other.AltitudeM != 0D) {
        AltitudeM = other.AltitudeM;
      }
      if (other.AccuracyM != 0D) {
        AccuracyM = other.AccuracyM;
      }
      if (other.TimestampS != 0D) {
        TimestampS = other.TimestampS;
      }
      if (other.ProviderStatus != 0) {
        ProviderStatus = other.ProviderStatus;
      }
      if (other.LocationType != 0) {
        LocationType = other.LocationType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            LatitudeDeg = input.ReadDouble();
            break;
          }
          case 17: {
            LongitudeDeg = input.ReadDouble();
            break;
          }
          case 25: {
            AltitudeM = input.ReadDouble();
            break;
          }
          case 33: {
            AccuracyM = input.ReadDouble();
            break;
          }
          case 41: {
            TimestampS = input.ReadDouble();
            break;
          }
          case 48: {
            ProviderStatus = input.ReadUInt32();
            break;
          }
          case 56: {
            LocationType = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
