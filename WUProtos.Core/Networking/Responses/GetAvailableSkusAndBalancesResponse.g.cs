// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Networking/Responses/GetAvailableSkusAndBalancesResponse.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Networking.Responses {

  /// <summary>Holder for reflection information generated from WUProtos/Networking/Responses/GetAvailableSkusAndBalancesResponse.proto</summary>
  public static partial class GetAvailableSkusAndBalancesResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Networking/Responses/GetAvailableSkusAndBalancesResponse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GetAvailableSkusAndBalancesResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkdXVVByb3Rvcy9OZXR3b3JraW5nL1Jlc3BvbnNlcy9HZXRBdmFpbGFibGVT",
            "a3VzQW5kQmFsYW5jZXNSZXNwb25zZS5wcm90bxIdV1VQcm90b3MuTmV0d29y",
            "a2luZy5SZXNwb25zZXMaJFdVUHJvdG9zL0RhdGEvQ3VycmVuY3lRdWFudGl0",
            "eS5wcm90byKkBgojR2V0QXZhaWxhYmxlU2t1c0FuZEJhbGFuY2VzUmVzcG9u",
            "c2USZgoNYXZhaWxhYmxlX3NrdRgBIAMoCzJPLldVUHJvdG9zLk5ldHdvcmtp",
            "bmcuUmVzcG9uc2VzLkdldEF2YWlsYWJsZVNrdXNBbmRCYWxhbmNlc1Jlc3Bv",
            "bnNlLkF2YWlsYWJsZVNrdRIwCgdiYWxhbmNlGAIgAygLMh8uV1VQcm90b3Mu",
            "RGF0YS5DdXJyZW5jeVF1YW50aXR5EhQKDHBsYXllcl90b2tlbhgDIAEoCRqd",
            "BAoMQXZhaWxhYmxlU2t1EgoKAmlkGAEgASgJEiIKGmlzX3RoaXJkX3BhcnR5",
            "X3ZlbmRvcl9pdGVtGAIgASgIEi4KBXByaWNlGAMgAygLMh8uV1VQcm90b3Mu",
            "RGF0YS5DdXJyZW5jeVF1YW50aXR5EjkKEGN1cnJlbmN5X2dyYW50ZWQYBCAD",
            "KAsyHy5XVVByb3Rvcy5EYXRhLkN1cnJlbmN5UXVhbnRpdHkSegoRZ2FtZV9p",
            "dGVtX2NvbnRlbnQYBSADKAsyXy5XVVByb3Rvcy5OZXR3b3JraW5nLlJlc3Bv",
            "bnNlcy5HZXRBdmFpbGFibGVTa3VzQW5kQmFsYW5jZXNSZXNwb25zZS5BdmFp",
            "bGFibGVTa3UuR2FtZUl0ZW1Db250ZW50EnoKEXByZXNlbnRhdGlvbl9kYXRh",
            "GAYgAygLMl8uV1VQcm90b3MuTmV0d29ya2luZy5SZXNwb25zZXMuR2V0QXZh",
            "aWxhYmxlU2t1c0FuZEJhbGFuY2VzUmVzcG9uc2UuQXZhaWxhYmxlU2t1LlNr",
            "dVByZXNlbnRhdGlvbhIYChBjYW5fYmVfcHVyY2hhc2VkGAcgASgIGi0KD1Nr",
            "dVByZXNlbnRhdGlvbhILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAkaMQoP",
            "R2FtZUl0ZW1Db250ZW50EgwKBHR5cGUYASABKAkSEAoIcXVhbnRpdHkYAiAB",
            "KAUiLQoGU3RhdHVzEgkKBVVOU0VUEAASCwoHU1VDQ0VTUxABEgsKB0ZBSUxV",
            "UkUQAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.CurrencyQuantityReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse), global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Parser, new[]{ "AvailableSku", "Balance", "PlayerToken" }, null, new[]{ typeof(global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.Status) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku), global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Parser, new[]{ "Id", "IsThirdPartyVendorItem", "Price", "CurrencyGranted", "GameItemContent", "PresentationData", "CanBePurchased" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Types.SkuPresentation), global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Types.SkuPresentation.Parser, new[]{ "Key", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Types.GameItemContent), global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Types.GameItemContent.Parser, new[]{ "Type", "Quantity" }, null, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetAvailableSkusAndBalancesResponse : pb::IMessage<GetAvailableSkusAndBalancesResponse> {
    private static readonly pb::MessageParser<GetAvailableSkusAndBalancesResponse> _parser = new pb::MessageParser<GetAvailableSkusAndBalancesResponse>(() => new GetAvailableSkusAndBalancesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAvailableSkusAndBalancesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableSkusAndBalancesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableSkusAndBalancesResponse(GetAvailableSkusAndBalancesResponse other) : this() {
      availableSku_ = other.availableSku_.Clone();
      balance_ = other.balance_.Clone();
      playerToken_ = other.playerToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableSkusAndBalancesResponse Clone() {
      return new GetAvailableSkusAndBalancesResponse(this);
    }

    /// <summary>Field number for the "available_sku" field.</summary>
    public const int AvailableSkuFieldNumber = 1;
    private static readonly pb::FieldCodec<global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku> _repeated_availableSku_codec
        = pb::FieldCodec.ForMessage(10, global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku> availableSku_ = new pbc::RepeatedField<global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku> AvailableSku {
      get { return availableSku_; }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 2;
    private static readonly pb::FieldCodec<global::WUProtos.Data.CurrencyQuantity> _repeated_balance_codec
        = pb::FieldCodec.ForMessage(18, global::WUProtos.Data.CurrencyQuantity.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.CurrencyQuantity> balance_ = new pbc::RepeatedField<global::WUProtos.Data.CurrencyQuantity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.CurrencyQuantity> Balance {
      get { return balance_; }
    }

    /// <summary>Field number for the "player_token" field.</summary>
    public const int PlayerTokenFieldNumber = 3;
    private string playerToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerToken {
      get { return playerToken_; }
      set {
        playerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAvailableSkusAndBalancesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAvailableSkusAndBalancesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!availableSku_.Equals(other.availableSku_)) return false;
      if(!balance_.Equals(other.balance_)) return false;
      if (PlayerToken != other.PlayerToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= availableSku_.GetHashCode();
      hash ^= balance_.GetHashCode();
      if (PlayerToken.Length != 0) hash ^= PlayerToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      availableSku_.WriteTo(output, _repeated_availableSku_codec);
      balance_.WriteTo(output, _repeated_balance_codec);
      if (PlayerToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayerToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += availableSku_.CalculateSize(_repeated_availableSku_codec);
      size += balance_.CalculateSize(_repeated_balance_codec);
      if (PlayerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAvailableSkusAndBalancesResponse other) {
      if (other == null) {
        return;
      }
      availableSku_.Add(other.availableSku_);
      balance_.Add(other.balance_);
      if (other.PlayerToken.Length != 0) {
        PlayerToken = other.PlayerToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            availableSku_.AddEntriesFrom(input, _repeated_availableSku_codec);
            break;
          }
          case 18: {
            balance_.AddEntriesFrom(input, _repeated_balance_codec);
            break;
          }
          case 26: {
            PlayerToken = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetAvailableSkusAndBalancesResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("FAILURE")] Failure = 2,
      }

      public sealed partial class AvailableSku : pb::IMessage<AvailableSku> {
        private static readonly pb::MessageParser<AvailableSku> _parser = new pb::MessageParser<AvailableSku>(() => new AvailableSku());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AvailableSku> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AvailableSku() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AvailableSku(AvailableSku other) : this() {
          id_ = other.id_;
          isThirdPartyVendorItem_ = other.isThirdPartyVendorItem_;
          price_ = other.price_.Clone();
          currencyGranted_ = other.currencyGranted_.Clone();
          gameItemContent_ = other.gameItemContent_.Clone();
          presentationData_ = other.presentationData_.Clone();
          canBePurchased_ = other.canBePurchased_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AvailableSku Clone() {
          return new AvailableSku(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "is_third_party_vendor_item" field.</summary>
        public const int IsThirdPartyVendorItemFieldNumber = 2;
        private bool isThirdPartyVendorItem_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsThirdPartyVendorItem {
          get { return isThirdPartyVendorItem_; }
          set {
            isThirdPartyVendorItem_ = value;
          }
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int PriceFieldNumber = 3;
        private static readonly pb::FieldCodec<global::WUProtos.Data.CurrencyQuantity> _repeated_price_codec
            = pb::FieldCodec.ForMessage(26, global::WUProtos.Data.CurrencyQuantity.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.CurrencyQuantity> price_ = new pbc::RepeatedField<global::WUProtos.Data.CurrencyQuantity>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.CurrencyQuantity> Price {
          get { return price_; }
        }

        /// <summary>Field number for the "currency_granted" field.</summary>
        public const int CurrencyGrantedFieldNumber = 4;
        private static readonly pb::FieldCodec<global::WUProtos.Data.CurrencyQuantity> _repeated_currencyGranted_codec
            = pb::FieldCodec.ForMessage(34, global::WUProtos.Data.CurrencyQuantity.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.CurrencyQuantity> currencyGranted_ = new pbc::RepeatedField<global::WUProtos.Data.CurrencyQuantity>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.CurrencyQuantity> CurrencyGranted {
          get { return currencyGranted_; }
        }

        /// <summary>Field number for the "game_item_content" field.</summary>
        public const int GameItemContentFieldNumber = 5;
        private static readonly pb::FieldCodec<global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Types.GameItemContent> _repeated_gameItemContent_codec
            = pb::FieldCodec.ForMessage(42, global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Types.GameItemContent.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Types.GameItemContent> gameItemContent_ = new pbc::RepeatedField<global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Types.GameItemContent>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Types.GameItemContent> GameItemContent {
          get { return gameItemContent_; }
        }

        /// <summary>Field number for the "presentation_data" field.</summary>
        public const int PresentationDataFieldNumber = 6;
        private static readonly pb::FieldCodec<global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Types.SkuPresentation> _repeated_presentationData_codec
            = pb::FieldCodec.ForMessage(50, global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Types.SkuPresentation.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Types.SkuPresentation> presentationData_ = new pbc::RepeatedField<global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Types.SkuPresentation>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Types.SkuPresentation> PresentationData {
          get { return presentationData_; }
        }

        /// <summary>Field number for the "can_be_purchased" field.</summary>
        public const int CanBePurchasedFieldNumber = 7;
        private bool canBePurchased_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool CanBePurchased {
          get { return canBePurchased_; }
          set {
            canBePurchased_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AvailableSku);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AvailableSku other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (IsThirdPartyVendorItem != other.IsThirdPartyVendorItem) return false;
          if(!price_.Equals(other.price_)) return false;
          if(!currencyGranted_.Equals(other.currencyGranted_)) return false;
          if(!gameItemContent_.Equals(other.gameItemContent_)) return false;
          if(!presentationData_.Equals(other.presentationData_)) return false;
          if (CanBePurchased != other.CanBePurchased) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (IsThirdPartyVendorItem != false) hash ^= IsThirdPartyVendorItem.GetHashCode();
          hash ^= price_.GetHashCode();
          hash ^= currencyGranted_.GetHashCode();
          hash ^= gameItemContent_.GetHashCode();
          hash ^= presentationData_.GetHashCode();
          if (CanBePurchased != false) hash ^= CanBePurchased.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (IsThirdPartyVendorItem != false) {
            output.WriteRawTag(16);
            output.WriteBool(IsThirdPartyVendorItem);
          }
          price_.WriteTo(output, _repeated_price_codec);
          currencyGranted_.WriteTo(output, _repeated_currencyGranted_codec);
          gameItemContent_.WriteTo(output, _repeated_gameItemContent_codec);
          presentationData_.WriteTo(output, _repeated_presentationData_codec);
          if (CanBePurchased != false) {
            output.WriteRawTag(56);
            output.WriteBool(CanBePurchased);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (IsThirdPartyVendorItem != false) {
            size += 1 + 1;
          }
          size += price_.CalculateSize(_repeated_price_codec);
          size += currencyGranted_.CalculateSize(_repeated_currencyGranted_codec);
          size += gameItemContent_.CalculateSize(_repeated_gameItemContent_codec);
          size += presentationData_.CalculateSize(_repeated_presentationData_codec);
          if (CanBePurchased != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AvailableSku other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.IsThirdPartyVendorItem != false) {
            IsThirdPartyVendorItem = other.IsThirdPartyVendorItem;
          }
          price_.Add(other.price_);
          currencyGranted_.Add(other.currencyGranted_);
          gameItemContent_.Add(other.gameItemContent_);
          presentationData_.Add(other.presentationData_);
          if (other.CanBePurchased != false) {
            CanBePurchased = other.CanBePurchased;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 16: {
                IsThirdPartyVendorItem = input.ReadBool();
                break;
              }
              case 26: {
                price_.AddEntriesFrom(input, _repeated_price_codec);
                break;
              }
              case 34: {
                currencyGranted_.AddEntriesFrom(input, _repeated_currencyGranted_codec);
                break;
              }
              case 42: {
                gameItemContent_.AddEntriesFrom(input, _repeated_gameItemContent_codec);
                break;
              }
              case 50: {
                presentationData_.AddEntriesFrom(input, _repeated_presentationData_codec);
                break;
              }
              case 56: {
                CanBePurchased = input.ReadBool();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the AvailableSku message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class SkuPresentation : pb::IMessage<SkuPresentation> {
            private static readonly pb::MessageParser<SkuPresentation> _parser = new pb::MessageParser<SkuPresentation>(() => new SkuPresentation());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<SkuPresentation> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SkuPresentation() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SkuPresentation(SkuPresentation other) : this() {
              key_ = other.key_;
              value_ = other.value_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SkuPresentation Clone() {
              return new SkuPresentation(this);
            }

            /// <summary>Field number for the "key" field.</summary>
            public const int KeyFieldNumber = 1;
            private string key_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Key {
              get { return key_; }
              set {
                key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "value" field.</summary>
            public const int ValueFieldNumber = 2;
            private string value_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Value {
              get { return value_; }
              set {
                value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as SkuPresentation);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(SkuPresentation other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Key != other.Key) return false;
              if (Value != other.Value) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Key.Length != 0) hash ^= Key.GetHashCode();
              if (Value.Length != 0) hash ^= Value.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Key.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Key);
              }
              if (Value.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Value);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Key.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
              }
              if (Value.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(SkuPresentation other) {
              if (other == null) {
                return;
              }
              if (other.Key.Length != 0) {
                Key = other.Key;
              }
              if (other.Value.Length != 0) {
                Value = other.Value;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Key = input.ReadString();
                    break;
                  }
                  case 18: {
                    Value = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class GameItemContent : pb::IMessage<GameItemContent> {
            private static readonly pb::MessageParser<GameItemContent> _parser = new pb::MessageParser<GameItemContent>(() => new GameItemContent());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<GameItemContent> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.Types.AvailableSku.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GameItemContent() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GameItemContent(GameItemContent other) : this() {
              type_ = other.type_;
              quantity_ = other.quantity_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public GameItemContent Clone() {
              return new GameItemContent(this);
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 1;
            private string type_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Type {
              get { return type_; }
              set {
                type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "quantity" field.</summary>
            public const int QuantityFieldNumber = 2;
            private int quantity_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Quantity {
              get { return quantity_; }
              set {
                quantity_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as GameItemContent);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(GameItemContent other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Type != other.Type) return false;
              if (Quantity != other.Quantity) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Type.Length != 0) hash ^= Type.GetHashCode();
              if (Quantity != 0) hash ^= Quantity.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Type.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Type);
              }
              if (Quantity != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(Quantity);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Type.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
              }
              if (Quantity != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(GameItemContent other) {
              if (other == null) {
                return;
              }
              if (other.Type.Length != 0) {
                Type = other.Type;
              }
              if (other.Quantity != 0) {
                Quantity = other.Quantity;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Type = input.ReadString();
                    break;
                  }
                  case 16: {
                    Quantity = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
