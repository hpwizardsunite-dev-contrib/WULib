// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Player/PlayerProfessionProgressV3.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Player {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Player/PlayerProfessionProgressV3.proto</summary>
  public static partial class PlayerProfessionProgressV3Reflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Player/PlayerProfessionProgressV3.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerProfessionProgressV3Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjVXVVByb3Rvcy9EYXRhL1BsYXllci9QbGF5ZXJQcm9mZXNzaW9uUHJvZ3Jl",
            "c3NWMy5wcm90bxIUV1VQcm90b3MuRGF0YS5QbGF5ZXIaI1dVUHJvdG9zL0Rh",
            "dGEvTG9vdC9Mb290UmV3YXJkLnByb3RvIqgGChpQbGF5ZXJQcm9mZXNzaW9u",
            "UHJvZ3Jlc3NWMxJZCg1ub2RlX3Byb2dyZXNzGAEgAygLMkIuV1VQcm90b3Mu",
            "RGF0YS5QbGF5ZXIuUGxheWVyUHJvZmVzc2lvblByb2dyZXNzVjMuTm9kZVBy",
            "b2dyZXNzRW50cnkSEwoLcmFua19wb2ludHMYAiABKA0SYAoRcmFua19wcm9n",
            "cmVzc19tYXAYAyADKAsyRS5XVVByb3Rvcy5EYXRhLlBsYXllci5QbGF5ZXJQ",
            "cm9mZXNzaW9uUHJvZ3Jlc3NWMy5SYW5rUHJvZ3Jlc3NNYXBFbnRyeRIYChBw",
            "cm9mZXNzaW9uX2dyYWRlGAQgASgNGnQKEU5vZGVQcm9ncmVzc0VudHJ5EgsK",
            "A2tleRgBIAEoCRJOCgV2YWx1ZRgCIAEoCzI/LldVUHJvdG9zLkRhdGEuUGxh",
            "eWVyLlBsYXllclByb2Zlc3Npb25Qcm9ncmVzc1YzLk5vZGVQcm9ncmVzc1Yz",
            "OgI4ARp3ChRSYW5rUHJvZ3Jlc3NNYXBFbnRyeRILCgNrZXkYASABKAkSTgoF",
            "dmFsdWUYAiABKAsyPy5XVVByb3Rvcy5EYXRhLlBsYXllci5QbGF5ZXJQcm9m",
            "ZXNzaW9uUHJvZ3Jlc3NWMy5SYW5rUHJvZ3Jlc3NWMzoCOAEajAEKDk5vZGVQ",
            "cm9ncmVzc1YzEg0KBWxldmVsGAEgASgNEh4KFmxhc3RfdXBkYXRlZF90aW1l",
            "c3RhbXAYAiABKAMSSwoUdW5sb2NrZWRfbGV2ZWxzX2Nvc3QYAyABKAsyLS5X",
            "VVByb3Rvcy5EYXRhLkxvb3QuTG9vdFJld2FyZC5Mb290Q29sbGVjdGlvbhqf",
            "AQoOUmFua1Byb2dyZXNzVjMajAEKDk5vZGVQcm9ncmVzc1YzEg0KBWxldmVs",
            "GAEgASgNEh4KFmxhc3RfdXBkYXRlZF90aW1lc3RhbXAYAiABKAMSSwoUdW5s",
            "b2NrZWRfbGV2ZWxzX2Nvc3QYAyABKAsyLS5XVVByb3Rvcy5EYXRhLkxvb3Qu",
            "TG9vdFJld2FyZC5Mb290Q29sbGVjdGlvbmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.Loot.LootRewardReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Player.PlayerProfessionProgressV3), global::WUProtos.Data.Player.PlayerProfessionProgressV3.Parser, new[]{ "NodeProgress", "RankPoints", "RankProgressMap", "ProfessionGrade" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.NodeProgressV3), global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.NodeProgressV3.Parser, new[]{ "Level", "LastUpdatedTimestamp", "UnlockedLevelsCost" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.RankProgressV3), global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.RankProgressV3.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.RankProgressV3.Types.NodeProgressV3), global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.RankProgressV3.Types.NodeProgressV3.Parser, new[]{ "Level", "LastUpdatedTimestamp", "UnlockedLevelsCost" }, null, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlayerProfessionProgressV3 : pb::IMessage<PlayerProfessionProgressV3> {
    private static readonly pb::MessageParser<PlayerProfessionProgressV3> _parser = new pb::MessageParser<PlayerProfessionProgressV3>(() => new PlayerProfessionProgressV3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerProfessionProgressV3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Player.PlayerProfessionProgressV3Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerProfessionProgressV3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerProfessionProgressV3(PlayerProfessionProgressV3 other) : this() {
      nodeProgress_ = other.nodeProgress_.Clone();
      rankPoints_ = other.rankPoints_;
      rankProgressMap_ = other.rankProgressMap_.Clone();
      professionGrade_ = other.professionGrade_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerProfessionProgressV3 Clone() {
      return new PlayerProfessionProgressV3(this);
    }

    /// <summary>Field number for the "node_progress" field.</summary>
    public const int NodeProgressFieldNumber = 1;
    private static readonly pbc::MapField<string, global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.NodeProgressV3>.Codec _map_nodeProgress_codec
        = new pbc::MapField<string, global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.NodeProgressV3>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.NodeProgressV3.Parser), 10);
    private readonly pbc::MapField<string, global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.NodeProgressV3> nodeProgress_ = new pbc::MapField<string, global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.NodeProgressV3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.NodeProgressV3> NodeProgress {
      get { return nodeProgress_; }
    }

    /// <summary>Field number for the "rank_points" field.</summary>
    public const int RankPointsFieldNumber = 2;
    private uint rankPoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RankPoints {
      get { return rankPoints_; }
      set {
        rankPoints_ = value;
      }
    }

    /// <summary>Field number for the "rank_progress_map" field.</summary>
    public const int RankProgressMapFieldNumber = 3;
    private static readonly pbc::MapField<string, global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.RankProgressV3>.Codec _map_rankProgressMap_codec
        = new pbc::MapField<string, global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.RankProgressV3>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.RankProgressV3.Parser), 26);
    private readonly pbc::MapField<string, global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.RankProgressV3> rankProgressMap_ = new pbc::MapField<string, global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.RankProgressV3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.RankProgressV3> RankProgressMap {
      get { return rankProgressMap_; }
    }

    /// <summary>Field number for the "profession_grade" field.</summary>
    public const int ProfessionGradeFieldNumber = 4;
    private uint professionGrade_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ProfessionGrade {
      get { return professionGrade_; }
      set {
        professionGrade_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerProfessionProgressV3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerProfessionProgressV3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!NodeProgress.Equals(other.NodeProgress)) return false;
      if (RankPoints != other.RankPoints) return false;
      if (!RankProgressMap.Equals(other.RankProgressMap)) return false;
      if (ProfessionGrade != other.ProfessionGrade) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= NodeProgress.GetHashCode();
      if (RankPoints != 0) hash ^= RankPoints.GetHashCode();
      hash ^= RankProgressMap.GetHashCode();
      if (ProfessionGrade != 0) hash ^= ProfessionGrade.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nodeProgress_.WriteTo(output, _map_nodeProgress_codec);
      if (RankPoints != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(RankPoints);
      }
      rankProgressMap_.WriteTo(output, _map_rankProgressMap_codec);
      if (ProfessionGrade != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ProfessionGrade);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nodeProgress_.CalculateSize(_map_nodeProgress_codec);
      if (RankPoints != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RankPoints);
      }
      size += rankProgressMap_.CalculateSize(_map_rankProgressMap_codec);
      if (ProfessionGrade != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProfessionGrade);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerProfessionProgressV3 other) {
      if (other == null) {
        return;
      }
      nodeProgress_.Add(other.nodeProgress_);
      if (other.RankPoints != 0) {
        RankPoints = other.RankPoints;
      }
      rankProgressMap_.Add(other.rankProgressMap_);
      if (other.ProfessionGrade != 0) {
        ProfessionGrade = other.ProfessionGrade;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodeProgress_.AddEntriesFrom(input, _map_nodeProgress_codec);
            break;
          }
          case 16: {
            RankPoints = input.ReadUInt32();
            break;
          }
          case 26: {
            rankProgressMap_.AddEntriesFrom(input, _map_rankProgressMap_codec);
            break;
          }
          case 32: {
            ProfessionGrade = input.ReadUInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PlayerProfessionProgressV3 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class NodeProgressV3 : pb::IMessage<NodeProgressV3> {
        private static readonly pb::MessageParser<NodeProgressV3> _parser = new pb::MessageParser<NodeProgressV3>(() => new NodeProgressV3());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NodeProgressV3> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Player.PlayerProfessionProgressV3.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NodeProgressV3() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NodeProgressV3(NodeProgressV3 other) : this() {
          level_ = other.level_;
          lastUpdatedTimestamp_ = other.lastUpdatedTimestamp_;
          unlockedLevelsCost_ = other.unlockedLevelsCost_ != null ? other.unlockedLevelsCost_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NodeProgressV3 Clone() {
          return new NodeProgressV3(this);
        }

        /// <summary>Field number for the "level" field.</summary>
        public const int LevelFieldNumber = 1;
        private uint level_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Level {
          get { return level_; }
          set {
            level_ = value;
          }
        }

        /// <summary>Field number for the "last_updated_timestamp" field.</summary>
        public const int LastUpdatedTimestampFieldNumber = 2;
        private long lastUpdatedTimestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long LastUpdatedTimestamp {
          get { return lastUpdatedTimestamp_; }
          set {
            lastUpdatedTimestamp_ = value;
          }
        }

        /// <summary>Field number for the "unlocked_levels_cost" field.</summary>
        public const int UnlockedLevelsCostFieldNumber = 3;
        private global::WUProtos.Data.Loot.LootReward.Types.LootCollection unlockedLevelsCost_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Loot.LootReward.Types.LootCollection UnlockedLevelsCost {
          get { return unlockedLevelsCost_; }
          set {
            unlockedLevelsCost_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NodeProgressV3);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NodeProgressV3 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Level != other.Level) return false;
          if (LastUpdatedTimestamp != other.LastUpdatedTimestamp) return false;
          if (!object.Equals(UnlockedLevelsCost, other.UnlockedLevelsCost)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Level != 0) hash ^= Level.GetHashCode();
          if (LastUpdatedTimestamp != 0L) hash ^= LastUpdatedTimestamp.GetHashCode();
          if (unlockedLevelsCost_ != null) hash ^= UnlockedLevelsCost.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Level != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Level);
          }
          if (LastUpdatedTimestamp != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(LastUpdatedTimestamp);
          }
          if (unlockedLevelsCost_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(UnlockedLevelsCost);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Level != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
          }
          if (LastUpdatedTimestamp != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastUpdatedTimestamp);
          }
          if (unlockedLevelsCost_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnlockedLevelsCost);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NodeProgressV3 other) {
          if (other == null) {
            return;
          }
          if (other.Level != 0) {
            Level = other.Level;
          }
          if (other.LastUpdatedTimestamp != 0L) {
            LastUpdatedTimestamp = other.LastUpdatedTimestamp;
          }
          if (other.unlockedLevelsCost_ != null) {
            if (unlockedLevelsCost_ == null) {
              UnlockedLevelsCost = new global::WUProtos.Data.Loot.LootReward.Types.LootCollection();
            }
            UnlockedLevelsCost.MergeFrom(other.UnlockedLevelsCost);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Level = input.ReadUInt32();
                break;
              }
              case 16: {
                LastUpdatedTimestamp = input.ReadInt64();
                break;
              }
              case 26: {
                if (unlockedLevelsCost_ == null) {
                  UnlockedLevelsCost = new global::WUProtos.Data.Loot.LootReward.Types.LootCollection();
                }
                input.ReadMessage(UnlockedLevelsCost);
                break;
              }
            }
          }
        }

      }

      public sealed partial class RankProgressV3 : pb::IMessage<RankProgressV3> {
        private static readonly pb::MessageParser<RankProgressV3> _parser = new pb::MessageParser<RankProgressV3>(() => new RankProgressV3());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RankProgressV3> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Player.PlayerProfessionProgressV3.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RankProgressV3() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RankProgressV3(RankProgressV3 other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RankProgressV3 Clone() {
          return new RankProgressV3(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RankProgressV3);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RankProgressV3 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RankProgressV3 other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the RankProgressV3 message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class NodeProgressV3 : pb::IMessage<NodeProgressV3> {
            private static readonly pb::MessageParser<NodeProgressV3> _parser = new pb::MessageParser<NodeProgressV3>(() => new NodeProgressV3());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<NodeProgressV3> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Player.PlayerProfessionProgressV3.Types.RankProgressV3.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NodeProgressV3() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NodeProgressV3(NodeProgressV3 other) : this() {
              level_ = other.level_;
              lastUpdatedTimestamp_ = other.lastUpdatedTimestamp_;
              unlockedLevelsCost_ = other.unlockedLevelsCost_ != null ? other.unlockedLevelsCost_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public NodeProgressV3 Clone() {
              return new NodeProgressV3(this);
            }

            /// <summary>Field number for the "level" field.</summary>
            public const int LevelFieldNumber = 1;
            private uint level_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint Level {
              get { return level_; }
              set {
                level_ = value;
              }
            }

            /// <summary>Field number for the "last_updated_timestamp" field.</summary>
            public const int LastUpdatedTimestampFieldNumber = 2;
            private long lastUpdatedTimestamp_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long LastUpdatedTimestamp {
              get { return lastUpdatedTimestamp_; }
              set {
                lastUpdatedTimestamp_ = value;
              }
            }

            /// <summary>Field number for the "unlocked_levels_cost" field.</summary>
            public const int UnlockedLevelsCostFieldNumber = 3;
            private global::WUProtos.Data.Loot.LootReward.Types.LootCollection unlockedLevelsCost_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Loot.LootReward.Types.LootCollection UnlockedLevelsCost {
              get { return unlockedLevelsCost_; }
              set {
                unlockedLevelsCost_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as NodeProgressV3);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(NodeProgressV3 other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Level != other.Level) return false;
              if (LastUpdatedTimestamp != other.LastUpdatedTimestamp) return false;
              if (!object.Equals(UnlockedLevelsCost, other.UnlockedLevelsCost)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Level != 0) hash ^= Level.GetHashCode();
              if (LastUpdatedTimestamp != 0L) hash ^= LastUpdatedTimestamp.GetHashCode();
              if (unlockedLevelsCost_ != null) hash ^= UnlockedLevelsCost.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Level != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Level);
              }
              if (LastUpdatedTimestamp != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(LastUpdatedTimestamp);
              }
              if (unlockedLevelsCost_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(UnlockedLevelsCost);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Level != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
              }
              if (LastUpdatedTimestamp != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastUpdatedTimestamp);
              }
              if (unlockedLevelsCost_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnlockedLevelsCost);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(NodeProgressV3 other) {
              if (other == null) {
                return;
              }
              if (other.Level != 0) {
                Level = other.Level;
              }
              if (other.LastUpdatedTimestamp != 0L) {
                LastUpdatedTimestamp = other.LastUpdatedTimestamp;
              }
              if (other.unlockedLevelsCost_ != null) {
                if (unlockedLevelsCost_ == null) {
                  UnlockedLevelsCost = new global::WUProtos.Data.Loot.LootReward.Types.LootCollection();
                }
                UnlockedLevelsCost.MergeFrom(other.UnlockedLevelsCost);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Level = input.ReadUInt32();
                    break;
                  }
                  case 16: {
                    LastUpdatedTimestamp = input.ReadInt64();
                    break;
                  }
                  case 26: {
                    if (unlockedLevelsCost_ == null) {
                      UnlockedLevelsCost = new global::WUProtos.Data.Loot.LootReward.Types.LootCollection();
                    }
                    input.ReadMessage(UnlockedLevelsCost);
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
