// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Condition.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Condition.proto</summary>
  public static partial class ConditionReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Condition.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConditionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1XVVByb3Rvcy9EYXRhL0NvbmRpdGlvbi5wcm90bxINV1VQcm90b3MuRGF0",
            "YRogV1VQcm90b3MvRW51bXMvQm9vbExpdGVyYWwucHJvdG8aJ1dVUHJvdG9z",
            "L0VudW1zL0NvbXBhcmlzb25PcGVyYXRvci5wcm90bxooV1VQcm90b3MvRW51",
            "bXMvQ29uZGl0aW9uVGFyZ2V0VHlwZS5wcm90byL1FAoJQ29uZGl0aW9uEi0K",
            "BmFsd2F5cxgBIAEoDjIbLldVUHJvdG9zLkVudW1zLkJvb2xMaXRlcmFsSAAS",
            "RAoOZW5lbXlfdGFnX2NvbmQYAiABKAsyKi5XVVByb3Rvcy5EYXRhLkNvbmRp",
            "dGlvbi5FbmVteVRhZ0NvbmRpdGlvbkgAEkQKDnN0YXRzX3RhZ19jb25kGAMg",
            "ASgLMiouV1VQcm90b3MuRGF0YS5Db25kaXRpb24uU3RhdHNUYWdDb25kaXRp",
            "b25IABJGCg9idWZmX2NvdW50X2NvbmQYBCABKAsyKy5XVVByb3Rvcy5EYXRh",
            "LkNvbmRpdGlvbi5CdWZmQ291bnRDb25kaXRpb25IABJTChZydW5lX2luX2No",
            "YWxsZW5nZV9jb25kGAUgASgLMjEuV1VQcm90b3MuRGF0YS5Db25kaXRpb24u",
            "UnVuZUluQ2hhbGxlbmdlQ29uZGl0aW9uSAASTgoTdGltZV9yZW1haW5pbmdf",
            "Y29uZBgGIAEoCzIvLldVUHJvdG9zLkRhdGEuQ29uZGl0aW9uLlRpbWVSZW1h",
            "aW5pbmdDb25kaXRpb25IABJJChBmb2N1c19sZXZlbF9jb25kGAcgASgLMi0u",
            "V1VQcm90b3MuRGF0YS5Db25kaXRpb24uRm9jdXNBbW91bnRDb25kaXRpb25I",
            "ABJSChV0ZWFtX2NvbXBvc2l0aW9uX2NvbmQYCCABKAsyMS5XVVByb3Rvcy5E",
            "YXRhLkNvbmRpdGlvbi5UZWFtQ29tcG9zaXRpb25Db25kaXRpb25IABJHChB0",
            "aW1lX29mX2RheV9jb25kGAkgASgLMisuV1VQcm90b3MuRGF0YS5Db25kaXRp",
            "b24uVGltZU9mRGF5Q29uZGl0aW9uSAASQQoMd2VhdGhlcl9jb25kGAogASgL",
            "MikuV1VQcm90b3MuRGF0YS5Db25kaXRpb24uV2VhdGhlckNvbmRpdGlvbkgA",
            "EkwKEnRlYW1fcHJvcGVydHlfY29uZBgLIAEoCzIuLldVUHJvdG9zLkRhdGEu",
            "Q29uZGl0aW9uLlRlYW1Qcm9wZXJ0eUNvbmRpdGlvbkgAElcKFWVuZW1pZXNf",
            "ZGVmZWF0ZWRfY29uZBgMIAEoCzI2LldVUHJvdG9zLkRhdGEuQ29uZGl0aW9u",
            "LkVuZW1pZXNEZWZlYXRlZENvdW50Q29uZGl0aW9uSAAaeAoURm9jdXNBbW91",
            "bnRDb25kaXRpb24SPwoTY29tcGFyaXNvbl9vcGVyYXRvchgBIAEoDjIiLldV",
            "UHJvdG9zLkVudW1zLkNvbXBhcmlzb25PcGVyYXRvchIfChd0YXJnZXRfY29t",
            "cGFyaXNvbl92YWx1ZRgCIAEoBRoxChhSdW5lSW5DaGFsbGVuZ2VDb25kaXRp",
            "b24SFQoNdmF1bHRfaXRlbV9pZBgBIAEoCRqTAQoYVGVhbUNvbXBvc2l0aW9u",
            "Q29uZGl0aW9uEj8KE2NvbXBhcmlzb25fb3BlcmF0b3IYASABKA4yIi5XVVBy",
            "b3Rvcy5FbnVtcy5Db21wYXJpc29uT3BlcmF0b3ISHwoXdGFyZ2V0X2NvbXBh",
            "cmlzb25fdmFsdWUYAiABKAUSFQoNcHJvZmVzc2lvbl9pZBgDIAEoCRqaAgoV",
            "VGVhbVByb3BlcnR5Q29uZGl0aW9uEj8KE2NvbXBhcmlzb25fb3BlcmF0b3IY",
            "ASABKA4yIi5XVVByb3Rvcy5FbnVtcy5Db21wYXJpc29uT3BlcmF0b3ISHwoX",
            "dGFyZ2V0X2NvbXBhcmlzb25fdmFsdWUYAiABKAUSSQoIY3JpdGVyaWEYAyAB",
            "KA4yNy5XVVByb3Rvcy5EYXRhLkNvbmRpdGlvbi5UZWFtUHJvcGVydHlDb25k",
            "aXRpb24uQ3JpdGVyaWEiVAoIQ3JpdGVyaWESCwoHVU5LTk9XThAAEgsKB0ZS",
            "SUVORFMQARIPCgtOT05fRlJJRU5EUxACEg0KCVNBTUVfVEVBTRADEg4KCk9U",
            "SEVSX1RFQU0QBBpWChJUaW1lT2ZEYXlDb25kaXRpb24SIAoYc3RhcnRpbmdf",
            "ZGFpbHlfdGltZXN0YW1wGAEgASgDEh4KFmVuZGluZ19kYWlseV90aW1lc3Rh",
            "bXAYAiABKAMaegoWVGltZVJlbWFpbmluZ0NvbmRpdGlvbhI/ChNjb21wYXJp",
            "c29uX29wZXJhdG9yGAEgASgOMiIuV1VQcm90b3MuRW51bXMuQ29tcGFyaXNv",
            "bk9wZXJhdG9yEh8KF3RhcmdldF9jb21wYXJpc29uX3ZhbHVlGAIgASgDGucB",
            "ChJCdWZmQ291bnRDb25kaXRpb24SEwoLdGFyZ2V0X3R5cGUYASABKAkSPwoT",
            "Y29tcGFyaXNvbl9vcGVyYXRvchgCIAEoDjIiLldVUHJvdG9zLkVudW1zLkNv",
            "bXBhcmlzb25PcGVyYXRvchIfChd0YXJnZXRfY29tcGFyaXNvbl92YWx1ZRgD",
            "IAEoBRIWCg5sb29rX2Zvcl9idWZmcxgEIAEoCBJCChVjb25kaXRpb25fdGFy",
            "Z2V0X3R5cGUYBSABKA4yIy5XVVByb3Rvcy5FbnVtcy5Db25kaXRpb25UYXJn",
            "ZXRUeXBlGoEBCh1FbmVtaWVzRGVmZWF0ZWRDb3VudENvbmRpdGlvbhI/ChNj",
            "b21wYXJpc29uX29wZXJhdG9yGAEgASgOMiIuV1VQcm90b3MuRW51bXMuQ29t",
            "cGFyaXNvbk9wZXJhdG9yEh8KF3RhcmdldF9jb21wYXJpc29uX3ZhbHVlGAIg",
            "ASgFGiUKEUVuZW15VGFnQ29uZGl0aW9uEhAKCHJhbmtfdGFnGAEgASgJGo4C",
            "ChBXZWF0aGVyQ29uZGl0aW9uElAKEXdlYXRoZXJfY29uZGl0aW9uGAEgASgO",
            "MjUuV1VQcm90b3MuRGF0YS5Db25kaXRpb24uV2VhdGhlckNvbmRpdGlvbi5X",
            "ZWF0aGVyVHlwZSKnAQoLV2VhdGhlclR5cGUSCwoHVU5LTk9XThAAEgkKBVNV",
            "Tk5ZEAESCgoGQ0xPVURZEAISCwoHUkFJTklORxADEgsKB1NOT1dJTkcQBBIM",
            "CghTTEVFVElORxAFEg0KCUZVTExfTU9PThAGEg4KCk5JR0hUX1RJTUUQBxIM",
            "CghEQVlfVElNRRAIEg0KCUhBTEZfTU9PThAJEhAKDFFVQVJURVJfTU9PThAK",
            "GoYCChFTdGF0c1RhZ0NvbmRpdGlvbhITCgt0YXJnZXRfdHlwZRgBIAEoCRIT",
            "Cgt0YXJnZXRfc3RhdBgCIAEoCRI/ChNjb21wYXJpc29uX29wZXJhdG9yGAMg",
            "ASgOMiIuV1VQcm90b3MuRW51bXMuQ29tcGFyaXNvbk9wZXJhdG9yEh8KF3Rh",
            "cmdldF9jb21wYXJpc29uX3ZhbHVlGAQgASgDEiEKGXRhcmdldF9zdGF0X2lz",
            "X3BlcmNlbnRhZ2UYBSABKAgSQgoVY29uZGl0aW9uX3RhcmdldF90eXBlGAYg",
            "ASgOMiMuV1VQcm90b3MuRW51bXMuQ29uZGl0aW9uVGFyZ2V0VHlwZUILCglD",
            "b25kaXRpb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Enums.BoolLiteralReflection.Descriptor, global::WUProtos.Enums.ComparisonOperatorReflection.Descriptor, global::WUProtos.Enums.ConditionTargetTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Condition), global::WUProtos.Data.Condition.Parser, new[]{ "Always", "EnemyTagCond", "StatsTagCond", "BuffCountCond", "RuneInChallengeCond", "TimeRemainingCond", "FocusLevelCond", "TeamCompositionCond", "TimeOfDayCond", "WeatherCond", "TeamPropertyCond", "EnemiesDefeatedCond" }, new[]{ "Condition" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Condition.Types.FocusAmountCondition), global::WUProtos.Data.Condition.Types.FocusAmountCondition.Parser, new[]{ "ComparisonOperator", "TargetComparisonValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Condition.Types.RuneInChallengeCondition), global::WUProtos.Data.Condition.Types.RuneInChallengeCondition.Parser, new[]{ "VaultItemId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Condition.Types.TeamCompositionCondition), global::WUProtos.Data.Condition.Types.TeamCompositionCondition.Parser, new[]{ "ComparisonOperator", "TargetComparisonValue", "ProfessionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Condition.Types.TeamPropertyCondition), global::WUProtos.Data.Condition.Types.TeamPropertyCondition.Parser, new[]{ "ComparisonOperator", "TargetComparisonValue", "Criteria" }, null, new[]{ typeof(global::WUProtos.Data.Condition.Types.TeamPropertyCondition.Types.Criteria) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Condition.Types.TimeOfDayCondition), global::WUProtos.Data.Condition.Types.TimeOfDayCondition.Parser, new[]{ "StartingDailyTimestamp", "EndingDailyTimestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Condition.Types.TimeRemainingCondition), global::WUProtos.Data.Condition.Types.TimeRemainingCondition.Parser, new[]{ "ComparisonOperator", "TargetComparisonValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Condition.Types.BuffCountCondition), global::WUProtos.Data.Condition.Types.BuffCountCondition.Parser, new[]{ "TargetType", "ComparisonOperator", "TargetComparisonValue", "LookForBuffs", "ConditionTargetType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Condition.Types.EnemiesDefeatedCountCondition), global::WUProtos.Data.Condition.Types.EnemiesDefeatedCountCondition.Parser, new[]{ "ComparisonOperator", "TargetComparisonValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Condition.Types.EnemyTagCondition), global::WUProtos.Data.Condition.Types.EnemyTagCondition.Parser, new[]{ "RankTag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Condition.Types.WeatherCondition), global::WUProtos.Data.Condition.Types.WeatherCondition.Parser, new[]{ "WeatherCondition_" }, null, new[]{ typeof(global::WUProtos.Data.Condition.Types.WeatherCondition.Types.WeatherType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Condition.Types.StatsTagCondition), global::WUProtos.Data.Condition.Types.StatsTagCondition.Parser, new[]{ "TargetType", "TargetStat", "ComparisonOperator", "TargetComparisonValue", "TargetStatIsPercentage", "ConditionTargetType" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Condition : pb::IMessage<Condition> {
    private static readonly pb::MessageParser<Condition> _parser = new pb::MessageParser<Condition>(() => new Condition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Condition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.ConditionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Condition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Condition(Condition other) : this() {
      switch (other.ConditionCase) {
        case ConditionOneofCase.Always:
          Always = other.Always;
          break;
        case ConditionOneofCase.EnemyTagCond:
          EnemyTagCond = other.EnemyTagCond.Clone();
          break;
        case ConditionOneofCase.StatsTagCond:
          StatsTagCond = other.StatsTagCond.Clone();
          break;
        case ConditionOneofCase.BuffCountCond:
          BuffCountCond = other.BuffCountCond.Clone();
          break;
        case ConditionOneofCase.RuneInChallengeCond:
          RuneInChallengeCond = other.RuneInChallengeCond.Clone();
          break;
        case ConditionOneofCase.TimeRemainingCond:
          TimeRemainingCond = other.TimeRemainingCond.Clone();
          break;
        case ConditionOneofCase.FocusLevelCond:
          FocusLevelCond = other.FocusLevelCond.Clone();
          break;
        case ConditionOneofCase.TeamCompositionCond:
          TeamCompositionCond = other.TeamCompositionCond.Clone();
          break;
        case ConditionOneofCase.TimeOfDayCond:
          TimeOfDayCond = other.TimeOfDayCond.Clone();
          break;
        case ConditionOneofCase.WeatherCond:
          WeatherCond = other.WeatherCond.Clone();
          break;
        case ConditionOneofCase.TeamPropertyCond:
          TeamPropertyCond = other.TeamPropertyCond.Clone();
          break;
        case ConditionOneofCase.EnemiesDefeatedCond:
          EnemiesDefeatedCond = other.EnemiesDefeatedCond.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Condition Clone() {
      return new Condition(this);
    }

    /// <summary>Field number for the "always" field.</summary>
    public const int AlwaysFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Enums.BoolLiteral Always {
      get { return conditionCase_ == ConditionOneofCase.Always ? (global::WUProtos.Enums.BoolLiteral) condition_ : 0; }
      set {
        condition_ = value;
        conditionCase_ = ConditionOneofCase.Always;
      }
    }

    /// <summary>Field number for the "enemy_tag_cond" field.</summary>
    public const int EnemyTagCondFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Condition.Types.EnemyTagCondition EnemyTagCond {
      get { return conditionCase_ == ConditionOneofCase.EnemyTagCond ? (global::WUProtos.Data.Condition.Types.EnemyTagCondition) condition_ : null; }
      set {
        condition_ = value;
        conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.EnemyTagCond;
      }
    }

    /// <summary>Field number for the "stats_tag_cond" field.</summary>
    public const int StatsTagCondFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Condition.Types.StatsTagCondition StatsTagCond {
      get { return conditionCase_ == ConditionOneofCase.StatsTagCond ? (global::WUProtos.Data.Condition.Types.StatsTagCondition) condition_ : null; }
      set {
        condition_ = value;
        conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.StatsTagCond;
      }
    }

    /// <summary>Field number for the "buff_count_cond" field.</summary>
    public const int BuffCountCondFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Condition.Types.BuffCountCondition BuffCountCond {
      get { return conditionCase_ == ConditionOneofCase.BuffCountCond ? (global::WUProtos.Data.Condition.Types.BuffCountCondition) condition_ : null; }
      set {
        condition_ = value;
        conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.BuffCountCond;
      }
    }

    /// <summary>Field number for the "rune_in_challenge_cond" field.</summary>
    public const int RuneInChallengeCondFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Condition.Types.RuneInChallengeCondition RuneInChallengeCond {
      get { return conditionCase_ == ConditionOneofCase.RuneInChallengeCond ? (global::WUProtos.Data.Condition.Types.RuneInChallengeCondition) condition_ : null; }
      set {
        condition_ = value;
        conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.RuneInChallengeCond;
      }
    }

    /// <summary>Field number for the "time_remaining_cond" field.</summary>
    public const int TimeRemainingCondFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Condition.Types.TimeRemainingCondition TimeRemainingCond {
      get { return conditionCase_ == ConditionOneofCase.TimeRemainingCond ? (global::WUProtos.Data.Condition.Types.TimeRemainingCondition) condition_ : null; }
      set {
        condition_ = value;
        conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.TimeRemainingCond;
      }
    }

    /// <summary>Field number for the "focus_level_cond" field.</summary>
    public const int FocusLevelCondFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Condition.Types.FocusAmountCondition FocusLevelCond {
      get { return conditionCase_ == ConditionOneofCase.FocusLevelCond ? (global::WUProtos.Data.Condition.Types.FocusAmountCondition) condition_ : null; }
      set {
        condition_ = value;
        conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.FocusLevelCond;
      }
    }

    /// <summary>Field number for the "team_composition_cond" field.</summary>
    public const int TeamCompositionCondFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Condition.Types.TeamCompositionCondition TeamCompositionCond {
      get { return conditionCase_ == ConditionOneofCase.TeamCompositionCond ? (global::WUProtos.Data.Condition.Types.TeamCompositionCondition) condition_ : null; }
      set {
        condition_ = value;
        conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.TeamCompositionCond;
      }
    }

    /// <summary>Field number for the "time_of_day_cond" field.</summary>
    public const int TimeOfDayCondFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Condition.Types.TimeOfDayCondition TimeOfDayCond {
      get { return conditionCase_ == ConditionOneofCase.TimeOfDayCond ? (global::WUProtos.Data.Condition.Types.TimeOfDayCondition) condition_ : null; }
      set {
        condition_ = value;
        conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.TimeOfDayCond;
      }
    }

    /// <summary>Field number for the "weather_cond" field.</summary>
    public const int WeatherCondFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Condition.Types.WeatherCondition WeatherCond {
      get { return conditionCase_ == ConditionOneofCase.WeatherCond ? (global::WUProtos.Data.Condition.Types.WeatherCondition) condition_ : null; }
      set {
        condition_ = value;
        conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.WeatherCond;
      }
    }

    /// <summary>Field number for the "team_property_cond" field.</summary>
    public const int TeamPropertyCondFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Condition.Types.TeamPropertyCondition TeamPropertyCond {
      get { return conditionCase_ == ConditionOneofCase.TeamPropertyCond ? (global::WUProtos.Data.Condition.Types.TeamPropertyCondition) condition_ : null; }
      set {
        condition_ = value;
        conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.TeamPropertyCond;
      }
    }

    /// <summary>Field number for the "enemies_defeated_cond" field.</summary>
    public const int EnemiesDefeatedCondFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Condition.Types.EnemiesDefeatedCountCondition EnemiesDefeatedCond {
      get { return conditionCase_ == ConditionOneofCase.EnemiesDefeatedCond ? (global::WUProtos.Data.Condition.Types.EnemiesDefeatedCountCondition) condition_ : null; }
      set {
        condition_ = value;
        conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.EnemiesDefeatedCond;
      }
    }

    private object condition_;
    /// <summary>Enum of possible cases for the "Condition" oneof.</summary>
    public enum ConditionOneofCase {
      None = 0,
      Always = 1,
      EnemyTagCond = 2,
      StatsTagCond = 3,
      BuffCountCond = 4,
      RuneInChallengeCond = 5,
      TimeRemainingCond = 6,
      FocusLevelCond = 7,
      TeamCompositionCond = 8,
      TimeOfDayCond = 9,
      WeatherCond = 10,
      TeamPropertyCond = 11,
      EnemiesDefeatedCond = 12,
    }
    private ConditionOneofCase conditionCase_ = ConditionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConditionOneofCase ConditionCase {
      get { return conditionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCondition() {
      conditionCase_ = ConditionOneofCase.None;
      condition_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Condition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Condition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Always != other.Always) return false;
      if (!object.Equals(EnemyTagCond, other.EnemyTagCond)) return false;
      if (!object.Equals(StatsTagCond, other.StatsTagCond)) return false;
      if (!object.Equals(BuffCountCond, other.BuffCountCond)) return false;
      if (!object.Equals(RuneInChallengeCond, other.RuneInChallengeCond)) return false;
      if (!object.Equals(TimeRemainingCond, other.TimeRemainingCond)) return false;
      if (!object.Equals(FocusLevelCond, other.FocusLevelCond)) return false;
      if (!object.Equals(TeamCompositionCond, other.TeamCompositionCond)) return false;
      if (!object.Equals(TimeOfDayCond, other.TimeOfDayCond)) return false;
      if (!object.Equals(WeatherCond, other.WeatherCond)) return false;
      if (!object.Equals(TeamPropertyCond, other.TeamPropertyCond)) return false;
      if (!object.Equals(EnemiesDefeatedCond, other.EnemiesDefeatedCond)) return false;
      if (ConditionCase != other.ConditionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (conditionCase_ == ConditionOneofCase.Always) hash ^= Always.GetHashCode();
      if (conditionCase_ == ConditionOneofCase.EnemyTagCond) hash ^= EnemyTagCond.GetHashCode();
      if (conditionCase_ == ConditionOneofCase.StatsTagCond) hash ^= StatsTagCond.GetHashCode();
      if (conditionCase_ == ConditionOneofCase.BuffCountCond) hash ^= BuffCountCond.GetHashCode();
      if (conditionCase_ == ConditionOneofCase.RuneInChallengeCond) hash ^= RuneInChallengeCond.GetHashCode();
      if (conditionCase_ == ConditionOneofCase.TimeRemainingCond) hash ^= TimeRemainingCond.GetHashCode();
      if (conditionCase_ == ConditionOneofCase.FocusLevelCond) hash ^= FocusLevelCond.GetHashCode();
      if (conditionCase_ == ConditionOneofCase.TeamCompositionCond) hash ^= TeamCompositionCond.GetHashCode();
      if (conditionCase_ == ConditionOneofCase.TimeOfDayCond) hash ^= TimeOfDayCond.GetHashCode();
      if (conditionCase_ == ConditionOneofCase.WeatherCond) hash ^= WeatherCond.GetHashCode();
      if (conditionCase_ == ConditionOneofCase.TeamPropertyCond) hash ^= TeamPropertyCond.GetHashCode();
      if (conditionCase_ == ConditionOneofCase.EnemiesDefeatedCond) hash ^= EnemiesDefeatedCond.GetHashCode();
      hash ^= (int) conditionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (conditionCase_ == ConditionOneofCase.Always) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Always);
      }
      if (conditionCase_ == ConditionOneofCase.EnemyTagCond) {
        output.WriteRawTag(18);
        output.WriteMessage(EnemyTagCond);
      }
      if (conditionCase_ == ConditionOneofCase.StatsTagCond) {
        output.WriteRawTag(26);
        output.WriteMessage(StatsTagCond);
      }
      if (conditionCase_ == ConditionOneofCase.BuffCountCond) {
        output.WriteRawTag(34);
        output.WriteMessage(BuffCountCond);
      }
      if (conditionCase_ == ConditionOneofCase.RuneInChallengeCond) {
        output.WriteRawTag(42);
        output.WriteMessage(RuneInChallengeCond);
      }
      if (conditionCase_ == ConditionOneofCase.TimeRemainingCond) {
        output.WriteRawTag(50);
        output.WriteMessage(TimeRemainingCond);
      }
      if (conditionCase_ == ConditionOneofCase.FocusLevelCond) {
        output.WriteRawTag(58);
        output.WriteMessage(FocusLevelCond);
      }
      if (conditionCase_ == ConditionOneofCase.TeamCompositionCond) {
        output.WriteRawTag(66);
        output.WriteMessage(TeamCompositionCond);
      }
      if (conditionCase_ == ConditionOneofCase.TimeOfDayCond) {
        output.WriteRawTag(74);
        output.WriteMessage(TimeOfDayCond);
      }
      if (conditionCase_ == ConditionOneofCase.WeatherCond) {
        output.WriteRawTag(82);
        output.WriteMessage(WeatherCond);
      }
      if (conditionCase_ == ConditionOneofCase.TeamPropertyCond) {
        output.WriteRawTag(90);
        output.WriteMessage(TeamPropertyCond);
      }
      if (conditionCase_ == ConditionOneofCase.EnemiesDefeatedCond) {
        output.WriteRawTag(98);
        output.WriteMessage(EnemiesDefeatedCond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (conditionCase_ == ConditionOneofCase.Always) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Always);
      }
      if (conditionCase_ == ConditionOneofCase.EnemyTagCond) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnemyTagCond);
      }
      if (conditionCase_ == ConditionOneofCase.StatsTagCond) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatsTagCond);
      }
      if (conditionCase_ == ConditionOneofCase.BuffCountCond) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuffCountCond);
      }
      if (conditionCase_ == ConditionOneofCase.RuneInChallengeCond) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RuneInChallengeCond);
      }
      if (conditionCase_ == ConditionOneofCase.TimeRemainingCond) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRemainingCond);
      }
      if (conditionCase_ == ConditionOneofCase.FocusLevelCond) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FocusLevelCond);
      }
      if (conditionCase_ == ConditionOneofCase.TeamCompositionCond) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TeamCompositionCond);
      }
      if (conditionCase_ == ConditionOneofCase.TimeOfDayCond) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeOfDayCond);
      }
      if (conditionCase_ == ConditionOneofCase.WeatherCond) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WeatherCond);
      }
      if (conditionCase_ == ConditionOneofCase.TeamPropertyCond) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TeamPropertyCond);
      }
      if (conditionCase_ == ConditionOneofCase.EnemiesDefeatedCond) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnemiesDefeatedCond);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Condition other) {
      if (other == null) {
        return;
      }
      switch (other.ConditionCase) {
        case ConditionOneofCase.Always:
          Always = other.Always;
          break;
        case ConditionOneofCase.EnemyTagCond:
          if (EnemyTagCond == null) {
            EnemyTagCond = new global::WUProtos.Data.Condition.Types.EnemyTagCondition();
          }
          EnemyTagCond.MergeFrom(other.EnemyTagCond);
          break;
        case ConditionOneofCase.StatsTagCond:
          if (StatsTagCond == null) {
            StatsTagCond = new global::WUProtos.Data.Condition.Types.StatsTagCondition();
          }
          StatsTagCond.MergeFrom(other.StatsTagCond);
          break;
        case ConditionOneofCase.BuffCountCond:
          if (BuffCountCond == null) {
            BuffCountCond = new global::WUProtos.Data.Condition.Types.BuffCountCondition();
          }
          BuffCountCond.MergeFrom(other.BuffCountCond);
          break;
        case ConditionOneofCase.RuneInChallengeCond:
          if (RuneInChallengeCond == null) {
            RuneInChallengeCond = new global::WUProtos.Data.Condition.Types.RuneInChallengeCondition();
          }
          RuneInChallengeCond.MergeFrom(other.RuneInChallengeCond);
          break;
        case ConditionOneofCase.TimeRemainingCond:
          if (TimeRemainingCond == null) {
            TimeRemainingCond = new global::WUProtos.Data.Condition.Types.TimeRemainingCondition();
          }
          TimeRemainingCond.MergeFrom(other.TimeRemainingCond);
          break;
        case ConditionOneofCase.FocusLevelCond:
          if (FocusLevelCond == null) {
            FocusLevelCond = new global::WUProtos.Data.Condition.Types.FocusAmountCondition();
          }
          FocusLevelCond.MergeFrom(other.FocusLevelCond);
          break;
        case ConditionOneofCase.TeamCompositionCond:
          if (TeamCompositionCond == null) {
            TeamCompositionCond = new global::WUProtos.Data.Condition.Types.TeamCompositionCondition();
          }
          TeamCompositionCond.MergeFrom(other.TeamCompositionCond);
          break;
        case ConditionOneofCase.TimeOfDayCond:
          if (TimeOfDayCond == null) {
            TimeOfDayCond = new global::WUProtos.Data.Condition.Types.TimeOfDayCondition();
          }
          TimeOfDayCond.MergeFrom(other.TimeOfDayCond);
          break;
        case ConditionOneofCase.WeatherCond:
          if (WeatherCond == null) {
            WeatherCond = new global::WUProtos.Data.Condition.Types.WeatherCondition();
          }
          WeatherCond.MergeFrom(other.WeatherCond);
          break;
        case ConditionOneofCase.TeamPropertyCond:
          if (TeamPropertyCond == null) {
            TeamPropertyCond = new global::WUProtos.Data.Condition.Types.TeamPropertyCondition();
          }
          TeamPropertyCond.MergeFrom(other.TeamPropertyCond);
          break;
        case ConditionOneofCase.EnemiesDefeatedCond:
          if (EnemiesDefeatedCond == null) {
            EnemiesDefeatedCond = new global::WUProtos.Data.Condition.Types.EnemiesDefeatedCountCondition();
          }
          EnemiesDefeatedCond.MergeFrom(other.EnemiesDefeatedCond);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            condition_ = input.ReadEnum();
            conditionCase_ = ConditionOneofCase.Always;
            break;
          }
          case 18: {
            global::WUProtos.Data.Condition.Types.EnemyTagCondition subBuilder = new global::WUProtos.Data.Condition.Types.EnemyTagCondition();
            if (conditionCase_ == ConditionOneofCase.EnemyTagCond) {
              subBuilder.MergeFrom(EnemyTagCond);
            }
            input.ReadMessage(subBuilder);
            EnemyTagCond = subBuilder;
            break;
          }
          case 26: {
            global::WUProtos.Data.Condition.Types.StatsTagCondition subBuilder = new global::WUProtos.Data.Condition.Types.StatsTagCondition();
            if (conditionCase_ == ConditionOneofCase.StatsTagCond) {
              subBuilder.MergeFrom(StatsTagCond);
            }
            input.ReadMessage(subBuilder);
            StatsTagCond = subBuilder;
            break;
          }
          case 34: {
            global::WUProtos.Data.Condition.Types.BuffCountCondition subBuilder = new global::WUProtos.Data.Condition.Types.BuffCountCondition();
            if (conditionCase_ == ConditionOneofCase.BuffCountCond) {
              subBuilder.MergeFrom(BuffCountCond);
            }
            input.ReadMessage(subBuilder);
            BuffCountCond = subBuilder;
            break;
          }
          case 42: {
            global::WUProtos.Data.Condition.Types.RuneInChallengeCondition subBuilder = new global::WUProtos.Data.Condition.Types.RuneInChallengeCondition();
            if (conditionCase_ == ConditionOneofCase.RuneInChallengeCond) {
              subBuilder.MergeFrom(RuneInChallengeCond);
            }
            input.ReadMessage(subBuilder);
            RuneInChallengeCond = subBuilder;
            break;
          }
          case 50: {
            global::WUProtos.Data.Condition.Types.TimeRemainingCondition subBuilder = new global::WUProtos.Data.Condition.Types.TimeRemainingCondition();
            if (conditionCase_ == ConditionOneofCase.TimeRemainingCond) {
              subBuilder.MergeFrom(TimeRemainingCond);
            }
            input.ReadMessage(subBuilder);
            TimeRemainingCond = subBuilder;
            break;
          }
          case 58: {
            global::WUProtos.Data.Condition.Types.FocusAmountCondition subBuilder = new global::WUProtos.Data.Condition.Types.FocusAmountCondition();
            if (conditionCase_ == ConditionOneofCase.FocusLevelCond) {
              subBuilder.MergeFrom(FocusLevelCond);
            }
            input.ReadMessage(subBuilder);
            FocusLevelCond = subBuilder;
            break;
          }
          case 66: {
            global::WUProtos.Data.Condition.Types.TeamCompositionCondition subBuilder = new global::WUProtos.Data.Condition.Types.TeamCompositionCondition();
            if (conditionCase_ == ConditionOneofCase.TeamCompositionCond) {
              subBuilder.MergeFrom(TeamCompositionCond);
            }
            input.ReadMessage(subBuilder);
            TeamCompositionCond = subBuilder;
            break;
          }
          case 74: {
            global::WUProtos.Data.Condition.Types.TimeOfDayCondition subBuilder = new global::WUProtos.Data.Condition.Types.TimeOfDayCondition();
            if (conditionCase_ == ConditionOneofCase.TimeOfDayCond) {
              subBuilder.MergeFrom(TimeOfDayCond);
            }
            input.ReadMessage(subBuilder);
            TimeOfDayCond = subBuilder;
            break;
          }
          case 82: {
            global::WUProtos.Data.Condition.Types.WeatherCondition subBuilder = new global::WUProtos.Data.Condition.Types.WeatherCondition();
            if (conditionCase_ == ConditionOneofCase.WeatherCond) {
              subBuilder.MergeFrom(WeatherCond);
            }
            input.ReadMessage(subBuilder);
            WeatherCond = subBuilder;
            break;
          }
          case 90: {
            global::WUProtos.Data.Condition.Types.TeamPropertyCondition subBuilder = new global::WUProtos.Data.Condition.Types.TeamPropertyCondition();
            if (conditionCase_ == ConditionOneofCase.TeamPropertyCond) {
              subBuilder.MergeFrom(TeamPropertyCond);
            }
            input.ReadMessage(subBuilder);
            TeamPropertyCond = subBuilder;
            break;
          }
          case 98: {
            global::WUProtos.Data.Condition.Types.EnemiesDefeatedCountCondition subBuilder = new global::WUProtos.Data.Condition.Types.EnemiesDefeatedCountCondition();
            if (conditionCase_ == ConditionOneofCase.EnemiesDefeatedCond) {
              subBuilder.MergeFrom(EnemiesDefeatedCond);
            }
            input.ReadMessage(subBuilder);
            EnemiesDefeatedCond = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Condition message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class FocusAmountCondition : pb::IMessage<FocusAmountCondition> {
        private static readonly pb::MessageParser<FocusAmountCondition> _parser = new pb::MessageParser<FocusAmountCondition>(() => new FocusAmountCondition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FocusAmountCondition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Condition.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FocusAmountCondition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FocusAmountCondition(FocusAmountCondition other) : this() {
          comparisonOperator_ = other.comparisonOperator_;
          targetComparisonValue_ = other.targetComparisonValue_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FocusAmountCondition Clone() {
          return new FocusAmountCondition(this);
        }

        /// <summary>Field number for the "comparison_operator" field.</summary>
        public const int ComparisonOperatorFieldNumber = 1;
        private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
          get { return comparisonOperator_; }
          set {
            comparisonOperator_ = value;
          }
        }

        /// <summary>Field number for the "target_comparison_value" field.</summary>
        public const int TargetComparisonValueFieldNumber = 2;
        private int targetComparisonValue_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int TargetComparisonValue {
          get { return targetComparisonValue_; }
          set {
            targetComparisonValue_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FocusAmountCondition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FocusAmountCondition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ComparisonOperator != other.ComparisonOperator) return false;
          if (TargetComparisonValue != other.TargetComparisonValue) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
          if (TargetComparisonValue != 0) hash ^= TargetComparisonValue.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ComparisonOperator != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) ComparisonOperator);
          }
          if (TargetComparisonValue != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(TargetComparisonValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ComparisonOperator != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
          }
          if (TargetComparisonValue != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetComparisonValue);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FocusAmountCondition other) {
          if (other == null) {
            return;
          }
          if (other.ComparisonOperator != 0) {
            ComparisonOperator = other.ComparisonOperator;
          }
          if (other.TargetComparisonValue != 0) {
            TargetComparisonValue = other.TargetComparisonValue;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                break;
              }
              case 16: {
                TargetComparisonValue = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class RuneInChallengeCondition : pb::IMessage<RuneInChallengeCondition> {
        private static readonly pb::MessageParser<RuneInChallengeCondition> _parser = new pb::MessageParser<RuneInChallengeCondition>(() => new RuneInChallengeCondition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RuneInChallengeCondition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Condition.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RuneInChallengeCondition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RuneInChallengeCondition(RuneInChallengeCondition other) : this() {
          vaultItemId_ = other.vaultItemId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RuneInChallengeCondition Clone() {
          return new RuneInChallengeCondition(this);
        }

        /// <summary>Field number for the "vault_item_id" field.</summary>
        public const int VaultItemIdFieldNumber = 1;
        private string vaultItemId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string VaultItemId {
          get { return vaultItemId_; }
          set {
            vaultItemId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RuneInChallengeCondition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RuneInChallengeCondition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (VaultItemId != other.VaultItemId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (VaultItemId.Length != 0) hash ^= VaultItemId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (VaultItemId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(VaultItemId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (VaultItemId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(VaultItemId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RuneInChallengeCondition other) {
          if (other == null) {
            return;
          }
          if (other.VaultItemId.Length != 0) {
            VaultItemId = other.VaultItemId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                VaultItemId = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class TeamCompositionCondition : pb::IMessage<TeamCompositionCondition> {
        private static readonly pb::MessageParser<TeamCompositionCondition> _parser = new pb::MessageParser<TeamCompositionCondition>(() => new TeamCompositionCondition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TeamCompositionCondition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Condition.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TeamCompositionCondition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TeamCompositionCondition(TeamCompositionCondition other) : this() {
          comparisonOperator_ = other.comparisonOperator_;
          targetComparisonValue_ = other.targetComparisonValue_;
          professionId_ = other.professionId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TeamCompositionCondition Clone() {
          return new TeamCompositionCondition(this);
        }

        /// <summary>Field number for the "comparison_operator" field.</summary>
        public const int ComparisonOperatorFieldNumber = 1;
        private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
          get { return comparisonOperator_; }
          set {
            comparisonOperator_ = value;
          }
        }

        /// <summary>Field number for the "target_comparison_value" field.</summary>
        public const int TargetComparisonValueFieldNumber = 2;
        private int targetComparisonValue_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int TargetComparisonValue {
          get { return targetComparisonValue_; }
          set {
            targetComparisonValue_ = value;
          }
        }

        /// <summary>Field number for the "profession_id" field.</summary>
        public const int ProfessionIdFieldNumber = 3;
        private string professionId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ProfessionId {
          get { return professionId_; }
          set {
            professionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TeamCompositionCondition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TeamCompositionCondition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ComparisonOperator != other.ComparisonOperator) return false;
          if (TargetComparisonValue != other.TargetComparisonValue) return false;
          if (ProfessionId != other.ProfessionId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
          if (TargetComparisonValue != 0) hash ^= TargetComparisonValue.GetHashCode();
          if (ProfessionId.Length != 0) hash ^= ProfessionId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ComparisonOperator != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) ComparisonOperator);
          }
          if (TargetComparisonValue != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(TargetComparisonValue);
          }
          if (ProfessionId.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ProfessionId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ComparisonOperator != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
          }
          if (TargetComparisonValue != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetComparisonValue);
          }
          if (ProfessionId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfessionId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TeamCompositionCondition other) {
          if (other == null) {
            return;
          }
          if (other.ComparisonOperator != 0) {
            ComparisonOperator = other.ComparisonOperator;
          }
          if (other.TargetComparisonValue != 0) {
            TargetComparisonValue = other.TargetComparisonValue;
          }
          if (other.ProfessionId.Length != 0) {
            ProfessionId = other.ProfessionId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                break;
              }
              case 16: {
                TargetComparisonValue = input.ReadInt32();
                break;
              }
              case 26: {
                ProfessionId = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class TeamPropertyCondition : pb::IMessage<TeamPropertyCondition> {
        private static readonly pb::MessageParser<TeamPropertyCondition> _parser = new pb::MessageParser<TeamPropertyCondition>(() => new TeamPropertyCondition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TeamPropertyCondition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Condition.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TeamPropertyCondition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TeamPropertyCondition(TeamPropertyCondition other) : this() {
          comparisonOperator_ = other.comparisonOperator_;
          targetComparisonValue_ = other.targetComparisonValue_;
          criteria_ = other.criteria_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TeamPropertyCondition Clone() {
          return new TeamPropertyCondition(this);
        }

        /// <summary>Field number for the "comparison_operator" field.</summary>
        public const int ComparisonOperatorFieldNumber = 1;
        private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
          get { return comparisonOperator_; }
          set {
            comparisonOperator_ = value;
          }
        }

        /// <summary>Field number for the "target_comparison_value" field.</summary>
        public const int TargetComparisonValueFieldNumber = 2;
        private int targetComparisonValue_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int TargetComparisonValue {
          get { return targetComparisonValue_; }
          set {
            targetComparisonValue_ = value;
          }
        }

        /// <summary>Field number for the "criteria" field.</summary>
        public const int CriteriaFieldNumber = 3;
        private global::WUProtos.Data.Condition.Types.TeamPropertyCondition.Types.Criteria criteria_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Condition.Types.TeamPropertyCondition.Types.Criteria Criteria {
          get { return criteria_; }
          set {
            criteria_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TeamPropertyCondition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TeamPropertyCondition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ComparisonOperator != other.ComparisonOperator) return false;
          if (TargetComparisonValue != other.TargetComparisonValue) return false;
          if (Criteria != other.Criteria) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
          if (TargetComparisonValue != 0) hash ^= TargetComparisonValue.GetHashCode();
          if (Criteria != 0) hash ^= Criteria.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ComparisonOperator != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) ComparisonOperator);
          }
          if (TargetComparisonValue != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(TargetComparisonValue);
          }
          if (Criteria != 0) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Criteria);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ComparisonOperator != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
          }
          if (TargetComparisonValue != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetComparisonValue);
          }
          if (Criteria != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Criteria);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TeamPropertyCondition other) {
          if (other == null) {
            return;
          }
          if (other.ComparisonOperator != 0) {
            ComparisonOperator = other.ComparisonOperator;
          }
          if (other.TargetComparisonValue != 0) {
            TargetComparisonValue = other.TargetComparisonValue;
          }
          if (other.Criteria != 0) {
            Criteria = other.Criteria;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                break;
              }
              case 16: {
                TargetComparisonValue = input.ReadInt32();
                break;
              }
              case 24: {
                Criteria = (global::WUProtos.Data.Condition.Types.TeamPropertyCondition.Types.Criteria) input.ReadEnum();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the TeamPropertyCondition message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum Criteria {
            [pbr::OriginalName("UNKNOWN")] Unknown = 0,
            [pbr::OriginalName("FRIENDS")] Friends = 1,
            [pbr::OriginalName("NON_FRIENDS")] NonFriends = 2,
            [pbr::OriginalName("SAME_TEAM")] SameTeam = 3,
            [pbr::OriginalName("OTHER_TEAM")] OtherTeam = 4,
          }

        }
        #endregion

      }

      public sealed partial class TimeOfDayCondition : pb::IMessage<TimeOfDayCondition> {
        private static readonly pb::MessageParser<TimeOfDayCondition> _parser = new pb::MessageParser<TimeOfDayCondition>(() => new TimeOfDayCondition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TimeOfDayCondition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Condition.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimeOfDayCondition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimeOfDayCondition(TimeOfDayCondition other) : this() {
          startingDailyTimestamp_ = other.startingDailyTimestamp_;
          endingDailyTimestamp_ = other.endingDailyTimestamp_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimeOfDayCondition Clone() {
          return new TimeOfDayCondition(this);
        }

        /// <summary>Field number for the "starting_daily_timestamp" field.</summary>
        public const int StartingDailyTimestampFieldNumber = 1;
        private long startingDailyTimestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long StartingDailyTimestamp {
          get { return startingDailyTimestamp_; }
          set {
            startingDailyTimestamp_ = value;
          }
        }

        /// <summary>Field number for the "ending_daily_timestamp" field.</summary>
        public const int EndingDailyTimestampFieldNumber = 2;
        private long endingDailyTimestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long EndingDailyTimestamp {
          get { return endingDailyTimestamp_; }
          set {
            endingDailyTimestamp_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TimeOfDayCondition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TimeOfDayCondition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (StartingDailyTimestamp != other.StartingDailyTimestamp) return false;
          if (EndingDailyTimestamp != other.EndingDailyTimestamp) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (StartingDailyTimestamp != 0L) hash ^= StartingDailyTimestamp.GetHashCode();
          if (EndingDailyTimestamp != 0L) hash ^= EndingDailyTimestamp.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (StartingDailyTimestamp != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(StartingDailyTimestamp);
          }
          if (EndingDailyTimestamp != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(EndingDailyTimestamp);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (StartingDailyTimestamp != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartingDailyTimestamp);
          }
          if (EndingDailyTimestamp != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndingDailyTimestamp);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TimeOfDayCondition other) {
          if (other == null) {
            return;
          }
          if (other.StartingDailyTimestamp != 0L) {
            StartingDailyTimestamp = other.StartingDailyTimestamp;
          }
          if (other.EndingDailyTimestamp != 0L) {
            EndingDailyTimestamp = other.EndingDailyTimestamp;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                StartingDailyTimestamp = input.ReadInt64();
                break;
              }
              case 16: {
                EndingDailyTimestamp = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class TimeRemainingCondition : pb::IMessage<TimeRemainingCondition> {
        private static readonly pb::MessageParser<TimeRemainingCondition> _parser = new pb::MessageParser<TimeRemainingCondition>(() => new TimeRemainingCondition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TimeRemainingCondition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Condition.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimeRemainingCondition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimeRemainingCondition(TimeRemainingCondition other) : this() {
          comparisonOperator_ = other.comparisonOperator_;
          targetComparisonValue_ = other.targetComparisonValue_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimeRemainingCondition Clone() {
          return new TimeRemainingCondition(this);
        }

        /// <summary>Field number for the "comparison_operator" field.</summary>
        public const int ComparisonOperatorFieldNumber = 1;
        private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
          get { return comparisonOperator_; }
          set {
            comparisonOperator_ = value;
          }
        }

        /// <summary>Field number for the "target_comparison_value" field.</summary>
        public const int TargetComparisonValueFieldNumber = 2;
        private long targetComparisonValue_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetComparisonValue {
          get { return targetComparisonValue_; }
          set {
            targetComparisonValue_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TimeRemainingCondition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TimeRemainingCondition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ComparisonOperator != other.ComparisonOperator) return false;
          if (TargetComparisonValue != other.TargetComparisonValue) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
          if (TargetComparisonValue != 0L) hash ^= TargetComparisonValue.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ComparisonOperator != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) ComparisonOperator);
          }
          if (TargetComparisonValue != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(TargetComparisonValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ComparisonOperator != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
          }
          if (TargetComparisonValue != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetComparisonValue);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TimeRemainingCondition other) {
          if (other == null) {
            return;
          }
          if (other.ComparisonOperator != 0) {
            ComparisonOperator = other.ComparisonOperator;
          }
          if (other.TargetComparisonValue != 0L) {
            TargetComparisonValue = other.TargetComparisonValue;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                break;
              }
              case 16: {
                TargetComparisonValue = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class BuffCountCondition : pb::IMessage<BuffCountCondition> {
        private static readonly pb::MessageParser<BuffCountCondition> _parser = new pb::MessageParser<BuffCountCondition>(() => new BuffCountCondition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BuffCountCondition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Condition.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BuffCountCondition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BuffCountCondition(BuffCountCondition other) : this() {
          targetType_ = other.targetType_;
          comparisonOperator_ = other.comparisonOperator_;
          targetComparisonValue_ = other.targetComparisonValue_;
          lookForBuffs_ = other.lookForBuffs_;
          conditionTargetType_ = other.conditionTargetType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BuffCountCondition Clone() {
          return new BuffCountCondition(this);
        }

        /// <summary>Field number for the "target_type" field.</summary>
        public const int TargetTypeFieldNumber = 1;
        private string targetType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TargetType {
          get { return targetType_; }
          set {
            targetType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "comparison_operator" field.</summary>
        public const int ComparisonOperatorFieldNumber = 2;
        private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
          get { return comparisonOperator_; }
          set {
            comparisonOperator_ = value;
          }
        }

        /// <summary>Field number for the "target_comparison_value" field.</summary>
        public const int TargetComparisonValueFieldNumber = 3;
        private int targetComparisonValue_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int TargetComparisonValue {
          get { return targetComparisonValue_; }
          set {
            targetComparisonValue_ = value;
          }
        }

        /// <summary>Field number for the "look_for_buffs" field.</summary>
        public const int LookForBuffsFieldNumber = 4;
        private bool lookForBuffs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool LookForBuffs {
          get { return lookForBuffs_; }
          set {
            lookForBuffs_ = value;
          }
        }

        /// <summary>Field number for the "condition_target_type" field.</summary>
        public const int ConditionTargetTypeFieldNumber = 5;
        private global::WUProtos.Enums.ConditionTargetType conditionTargetType_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Enums.ConditionTargetType ConditionTargetType {
          get { return conditionTargetType_; }
          set {
            conditionTargetType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BuffCountCondition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BuffCountCondition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TargetType != other.TargetType) return false;
          if (ComparisonOperator != other.ComparisonOperator) return false;
          if (TargetComparisonValue != other.TargetComparisonValue) return false;
          if (LookForBuffs != other.LookForBuffs) return false;
          if (ConditionTargetType != other.ConditionTargetType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TargetType.Length != 0) hash ^= TargetType.GetHashCode();
          if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
          if (TargetComparisonValue != 0) hash ^= TargetComparisonValue.GetHashCode();
          if (LookForBuffs != false) hash ^= LookForBuffs.GetHashCode();
          if (ConditionTargetType != 0) hash ^= ConditionTargetType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TargetType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TargetType);
          }
          if (ComparisonOperator != 0) {
            output.WriteRawTag(16);
            output.WriteEnum((int) ComparisonOperator);
          }
          if (TargetComparisonValue != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(TargetComparisonValue);
          }
          if (LookForBuffs != false) {
            output.WriteRawTag(32);
            output.WriteBool(LookForBuffs);
          }
          if (ConditionTargetType != 0) {
            output.WriteRawTag(40);
            output.WriteEnum((int) ConditionTargetType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TargetType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetType);
          }
          if (ComparisonOperator != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
          }
          if (TargetComparisonValue != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetComparisonValue);
          }
          if (LookForBuffs != false) {
            size += 1 + 1;
          }
          if (ConditionTargetType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ConditionTargetType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BuffCountCondition other) {
          if (other == null) {
            return;
          }
          if (other.TargetType.Length != 0) {
            TargetType = other.TargetType;
          }
          if (other.ComparisonOperator != 0) {
            ComparisonOperator = other.ComparisonOperator;
          }
          if (other.TargetComparisonValue != 0) {
            TargetComparisonValue = other.TargetComparisonValue;
          }
          if (other.LookForBuffs != false) {
            LookForBuffs = other.LookForBuffs;
          }
          if (other.ConditionTargetType != 0) {
            ConditionTargetType = other.ConditionTargetType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TargetType = input.ReadString();
                break;
              }
              case 16: {
                ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                break;
              }
              case 24: {
                TargetComparisonValue = input.ReadInt32();
                break;
              }
              case 32: {
                LookForBuffs = input.ReadBool();
                break;
              }
              case 40: {
                ConditionTargetType = (global::WUProtos.Enums.ConditionTargetType) input.ReadEnum();
                break;
              }
            }
          }
        }

      }

      public sealed partial class EnemiesDefeatedCountCondition : pb::IMessage<EnemiesDefeatedCountCondition> {
        private static readonly pb::MessageParser<EnemiesDefeatedCountCondition> _parser = new pb::MessageParser<EnemiesDefeatedCountCondition>(() => new EnemiesDefeatedCountCondition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EnemiesDefeatedCountCondition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Condition.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnemiesDefeatedCountCondition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnemiesDefeatedCountCondition(EnemiesDefeatedCountCondition other) : this() {
          comparisonOperator_ = other.comparisonOperator_;
          targetComparisonValue_ = other.targetComparisonValue_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnemiesDefeatedCountCondition Clone() {
          return new EnemiesDefeatedCountCondition(this);
        }

        /// <summary>Field number for the "comparison_operator" field.</summary>
        public const int ComparisonOperatorFieldNumber = 1;
        private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
          get { return comparisonOperator_; }
          set {
            comparisonOperator_ = value;
          }
        }

        /// <summary>Field number for the "target_comparison_value" field.</summary>
        public const int TargetComparisonValueFieldNumber = 2;
        private int targetComparisonValue_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int TargetComparisonValue {
          get { return targetComparisonValue_; }
          set {
            targetComparisonValue_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EnemiesDefeatedCountCondition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EnemiesDefeatedCountCondition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ComparisonOperator != other.ComparisonOperator) return false;
          if (TargetComparisonValue != other.TargetComparisonValue) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
          if (TargetComparisonValue != 0) hash ^= TargetComparisonValue.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ComparisonOperator != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) ComparisonOperator);
          }
          if (TargetComparisonValue != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(TargetComparisonValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ComparisonOperator != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
          }
          if (TargetComparisonValue != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetComparisonValue);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EnemiesDefeatedCountCondition other) {
          if (other == null) {
            return;
          }
          if (other.ComparisonOperator != 0) {
            ComparisonOperator = other.ComparisonOperator;
          }
          if (other.TargetComparisonValue != 0) {
            TargetComparisonValue = other.TargetComparisonValue;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                break;
              }
              case 16: {
                TargetComparisonValue = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class EnemyTagCondition : pb::IMessage<EnemyTagCondition> {
        private static readonly pb::MessageParser<EnemyTagCondition> _parser = new pb::MessageParser<EnemyTagCondition>(() => new EnemyTagCondition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EnemyTagCondition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Condition.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnemyTagCondition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnemyTagCondition(EnemyTagCondition other) : this() {
          rankTag_ = other.rankTag_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnemyTagCondition Clone() {
          return new EnemyTagCondition(this);
        }

        /// <summary>Field number for the "rank_tag" field.</summary>
        public const int RankTagFieldNumber = 1;
        private string rankTag_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RankTag {
          get { return rankTag_; }
          set {
            rankTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EnemyTagCondition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EnemyTagCondition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RankTag != other.RankTag) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (RankTag.Length != 0) hash ^= RankTag.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (RankTag.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(RankTag);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (RankTag.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RankTag);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EnemyTagCondition other) {
          if (other == null) {
            return;
          }
          if (other.RankTag.Length != 0) {
            RankTag = other.RankTag;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                RankTag = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class WeatherCondition : pb::IMessage<WeatherCondition> {
        private static readonly pb::MessageParser<WeatherCondition> _parser = new pb::MessageParser<WeatherCondition>(() => new WeatherCondition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<WeatherCondition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Condition.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WeatherCondition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WeatherCondition(WeatherCondition other) : this() {
          weatherCondition_ = other.weatherCondition_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WeatherCondition Clone() {
          return new WeatherCondition(this);
        }

        /// <summary>Field number for the "weather_condition" field.</summary>
        public const int WeatherCondition_FieldNumber = 1;
        private global::WUProtos.Data.Condition.Types.WeatherCondition.Types.WeatherType weatherCondition_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Condition.Types.WeatherCondition.Types.WeatherType WeatherCondition_ {
          get { return weatherCondition_; }
          set {
            weatherCondition_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as WeatherCondition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(WeatherCondition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (WeatherCondition_ != other.WeatherCondition_) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (WeatherCondition_ != 0) hash ^= WeatherCondition_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (WeatherCondition_ != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) WeatherCondition_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (WeatherCondition_ != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WeatherCondition_);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(WeatherCondition other) {
          if (other == null) {
            return;
          }
          if (other.WeatherCondition_ != 0) {
            WeatherCondition_ = other.WeatherCondition_;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                WeatherCondition_ = (global::WUProtos.Data.Condition.Types.WeatherCondition.Types.WeatherType) input.ReadEnum();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the WeatherCondition message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum WeatherType {
            [pbr::OriginalName("UNKNOWN")] Unknown = 0,
            [pbr::OriginalName("SUNNY")] Sunny = 1,
            [pbr::OriginalName("CLOUDY")] Cloudy = 2,
            [pbr::OriginalName("RAINING")] Raining = 3,
            [pbr::OriginalName("SNOWING")] Snowing = 4,
            [pbr::OriginalName("SLEETING")] Sleeting = 5,
            [pbr::OriginalName("FULL_MOON")] FullMoon = 6,
            [pbr::OriginalName("NIGHT_TIME")] NightTime = 7,
            [pbr::OriginalName("DAY_TIME")] DayTime = 8,
            [pbr::OriginalName("HALF_MOON")] HalfMoon = 9,
            [pbr::OriginalName("QUARTER_MOON")] QuarterMoon = 10,
          }

        }
        #endregion

      }

      public sealed partial class StatsTagCondition : pb::IMessage<StatsTagCondition> {
        private static readonly pb::MessageParser<StatsTagCondition> _parser = new pb::MessageParser<StatsTagCondition>(() => new StatsTagCondition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StatsTagCondition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Condition.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StatsTagCondition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StatsTagCondition(StatsTagCondition other) : this() {
          targetType_ = other.targetType_;
          targetStat_ = other.targetStat_;
          comparisonOperator_ = other.comparisonOperator_;
          targetComparisonValue_ = other.targetComparisonValue_;
          targetStatIsPercentage_ = other.targetStatIsPercentage_;
          conditionTargetType_ = other.conditionTargetType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StatsTagCondition Clone() {
          return new StatsTagCondition(this);
        }

        /// <summary>Field number for the "target_type" field.</summary>
        public const int TargetTypeFieldNumber = 1;
        private string targetType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TargetType {
          get { return targetType_; }
          set {
            targetType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "target_stat" field.</summary>
        public const int TargetStatFieldNumber = 2;
        private string targetStat_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TargetStat {
          get { return targetStat_; }
          set {
            targetStat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "comparison_operator" field.</summary>
        public const int ComparisonOperatorFieldNumber = 3;
        private global::WUProtos.Enums.ComparisonOperator comparisonOperator_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Enums.ComparisonOperator ComparisonOperator {
          get { return comparisonOperator_; }
          set {
            comparisonOperator_ = value;
          }
        }

        /// <summary>Field number for the "target_comparison_value" field.</summary>
        public const int TargetComparisonValueFieldNumber = 4;
        private long targetComparisonValue_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TargetComparisonValue {
          get { return targetComparisonValue_; }
          set {
            targetComparisonValue_ = value;
          }
        }

        /// <summary>Field number for the "target_stat_is_percentage" field.</summary>
        public const int TargetStatIsPercentageFieldNumber = 5;
        private bool targetStatIsPercentage_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool TargetStatIsPercentage {
          get { return targetStatIsPercentage_; }
          set {
            targetStatIsPercentage_ = value;
          }
        }

        /// <summary>Field number for the "condition_target_type" field.</summary>
        public const int ConditionTargetTypeFieldNumber = 6;
        private global::WUProtos.Enums.ConditionTargetType conditionTargetType_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Enums.ConditionTargetType ConditionTargetType {
          get { return conditionTargetType_; }
          set {
            conditionTargetType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as StatsTagCondition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StatsTagCondition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TargetType != other.TargetType) return false;
          if (TargetStat != other.TargetStat) return false;
          if (ComparisonOperator != other.ComparisonOperator) return false;
          if (TargetComparisonValue != other.TargetComparisonValue) return false;
          if (TargetStatIsPercentage != other.TargetStatIsPercentage) return false;
          if (ConditionTargetType != other.ConditionTargetType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TargetType.Length != 0) hash ^= TargetType.GetHashCode();
          if (TargetStat.Length != 0) hash ^= TargetStat.GetHashCode();
          if (ComparisonOperator != 0) hash ^= ComparisonOperator.GetHashCode();
          if (TargetComparisonValue != 0L) hash ^= TargetComparisonValue.GetHashCode();
          if (TargetStatIsPercentage != false) hash ^= TargetStatIsPercentage.GetHashCode();
          if (ConditionTargetType != 0) hash ^= ConditionTargetType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TargetType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TargetType);
          }
          if (TargetStat.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TargetStat);
          }
          if (ComparisonOperator != 0) {
            output.WriteRawTag(24);
            output.WriteEnum((int) ComparisonOperator);
          }
          if (TargetComparisonValue != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(TargetComparisonValue);
          }
          if (TargetStatIsPercentage != false) {
            output.WriteRawTag(40);
            output.WriteBool(TargetStatIsPercentage);
          }
          if (ConditionTargetType != 0) {
            output.WriteRawTag(48);
            output.WriteEnum((int) ConditionTargetType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TargetType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetType);
          }
          if (TargetStat.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetStat);
          }
          if (ComparisonOperator != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonOperator);
          }
          if (TargetComparisonValue != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetComparisonValue);
          }
          if (TargetStatIsPercentage != false) {
            size += 1 + 1;
          }
          if (ConditionTargetType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ConditionTargetType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StatsTagCondition other) {
          if (other == null) {
            return;
          }
          if (other.TargetType.Length != 0) {
            TargetType = other.TargetType;
          }
          if (other.TargetStat.Length != 0) {
            TargetStat = other.TargetStat;
          }
          if (other.ComparisonOperator != 0) {
            ComparisonOperator = other.ComparisonOperator;
          }
          if (other.TargetComparisonValue != 0L) {
            TargetComparisonValue = other.TargetComparisonValue;
          }
          if (other.TargetStatIsPercentage != false) {
            TargetStatIsPercentage = other.TargetStatIsPercentage;
          }
          if (other.ConditionTargetType != 0) {
            ConditionTargetType = other.ConditionTargetType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TargetType = input.ReadString();
                break;
              }
              case 18: {
                TargetStat = input.ReadString();
                break;
              }
              case 24: {
                ComparisonOperator = (global::WUProtos.Enums.ComparisonOperator) input.ReadEnum();
                break;
              }
              case 32: {
                TargetComparisonValue = input.ReadInt64();
                break;
              }
              case 40: {
                TargetStatIsPercentage = input.ReadBool();
                break;
              }
              case 48: {
                ConditionTargetType = (global::WUProtos.Enums.ConditionTargetType) input.ReadEnum();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
