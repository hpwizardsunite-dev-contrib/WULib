// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientWandFlexibility.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientWandFlexibility.proto</summary>
  public static partial class ClientWandFlexibilityReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientWandFlexibility.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientWandFlexibilityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBXVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRXYW5kRmxleGliaWxpdHku",
            "cHJvdG8SFFdVUHJvdG9zLkRhdGEuQ2xpZW50Ir4BChVDbGllbnRXYW5kRmxl",
            "eGliaWxpdHkSDAoEbmFtZRgBIAEoCRIMCgRpY29uGAIgASgJEhIKCm1vZGVs",
            "X3BhdGgYAyABKAkSEwoLc2xpZGVydmFsdWUYBCABKAUSEAoIZm9udHNpemUY",
            "BSABKAISEgoKaW50ZXJzcGFjZRgGIAEoAhIRCgltb3Zlc3BlZWQYByABKAIS",
            "EgoKY3VydmV3aWR0aBgIIAEoAhITCgtjdXJ2ZWhlaWdodBgJIAEoAmIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientWandFlexibility), global::WUProtos.Data.Client.ClientWandFlexibility.Parser, new[]{ "Name", "Icon", "ModelPath", "Slidervalue", "Fontsize", "Interspace", "Movespeed", "Curvewidth", "Curveheight" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientWandFlexibility : pb::IMessage<ClientWandFlexibility> {
    private static readonly pb::MessageParser<ClientWandFlexibility> _parser = new pb::MessageParser<ClientWandFlexibility>(() => new ClientWandFlexibility());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientWandFlexibility> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientWandFlexibilityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientWandFlexibility() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientWandFlexibility(ClientWandFlexibility other) : this() {
      name_ = other.name_;
      icon_ = other.icon_;
      modelPath_ = other.modelPath_;
      slidervalue_ = other.slidervalue_;
      fontsize_ = other.fontsize_;
      interspace_ = other.interspace_;
      movespeed_ = other.movespeed_;
      curvewidth_ = other.curvewidth_;
      curveheight_ = other.curveheight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientWandFlexibility Clone() {
      return new ClientWandFlexibility(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 2;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_path" field.</summary>
    public const int ModelPathFieldNumber = 3;
    private string modelPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelPath {
      get { return modelPath_; }
      set {
        modelPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "slidervalue" field.</summary>
    public const int SlidervalueFieldNumber = 4;
    private int slidervalue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Slidervalue {
      get { return slidervalue_; }
      set {
        slidervalue_ = value;
      }
    }

    /// <summary>Field number for the "fontsize" field.</summary>
    public const int FontsizeFieldNumber = 5;
    private float fontsize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Fontsize {
      get { return fontsize_; }
      set {
        fontsize_ = value;
      }
    }

    /// <summary>Field number for the "interspace" field.</summary>
    public const int InterspaceFieldNumber = 6;
    private float interspace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Interspace {
      get { return interspace_; }
      set {
        interspace_ = value;
      }
    }

    /// <summary>Field number for the "movespeed" field.</summary>
    public const int MovespeedFieldNumber = 7;
    private float movespeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Movespeed {
      get { return movespeed_; }
      set {
        movespeed_ = value;
      }
    }

    /// <summary>Field number for the "curvewidth" field.</summary>
    public const int CurvewidthFieldNumber = 8;
    private float curvewidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Curvewidth {
      get { return curvewidth_; }
      set {
        curvewidth_ = value;
      }
    }

    /// <summary>Field number for the "curveheight" field.</summary>
    public const int CurveheightFieldNumber = 9;
    private float curveheight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Curveheight {
      get { return curveheight_; }
      set {
        curveheight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientWandFlexibility);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientWandFlexibility other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Icon != other.Icon) return false;
      if (ModelPath != other.ModelPath) return false;
      if (Slidervalue != other.Slidervalue) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Fontsize, other.Fontsize)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Interspace, other.Interspace)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Movespeed, other.Movespeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Curvewidth, other.Curvewidth)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Curveheight, other.Curveheight)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (ModelPath.Length != 0) hash ^= ModelPath.GetHashCode();
      if (Slidervalue != 0) hash ^= Slidervalue.GetHashCode();
      if (Fontsize != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Fontsize);
      if (Interspace != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Interspace);
      if (Movespeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Movespeed);
      if (Curvewidth != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Curvewidth);
      if (Curveheight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Curveheight);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (ModelPath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ModelPath);
      }
      if (Slidervalue != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Slidervalue);
      }
      if (Fontsize != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Fontsize);
      }
      if (Interspace != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Interspace);
      }
      if (Movespeed != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Movespeed);
      }
      if (Curvewidth != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Curvewidth);
      }
      if (Curveheight != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Curveheight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (ModelPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelPath);
      }
      if (Slidervalue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Slidervalue);
      }
      if (Fontsize != 0F) {
        size += 1 + 4;
      }
      if (Interspace != 0F) {
        size += 1 + 4;
      }
      if (Movespeed != 0F) {
        size += 1 + 4;
      }
      if (Curvewidth != 0F) {
        size += 1 + 4;
      }
      if (Curveheight != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientWandFlexibility other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.ModelPath.Length != 0) {
        ModelPath = other.ModelPath;
      }
      if (other.Slidervalue != 0) {
        Slidervalue = other.Slidervalue;
      }
      if (other.Fontsize != 0F) {
        Fontsize = other.Fontsize;
      }
      if (other.Interspace != 0F) {
        Interspace = other.Interspace;
      }
      if (other.Movespeed != 0F) {
        Movespeed = other.Movespeed;
      }
      if (other.Curvewidth != 0F) {
        Curvewidth = other.Curvewidth;
      }
      if (other.Curveheight != 0F) {
        Curveheight = other.Curveheight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
          case 26: {
            ModelPath = input.ReadString();
            break;
          }
          case 32: {
            Slidervalue = input.ReadInt32();
            break;
          }
          case 45: {
            Fontsize = input.ReadFloat();
            break;
          }
          case 53: {
            Interspace = input.ReadFloat();
            break;
          }
          case 61: {
            Movespeed = input.ReadFloat();
            break;
          }
          case 69: {
            Curvewidth = input.ReadFloat();
            break;
          }
          case 77: {
            Curveheight = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
