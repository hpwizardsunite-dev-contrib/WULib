// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Event/RpcResponseEventParams.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Event {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Event/RpcResponseEventParams.proto</summary>
  public static partial class RpcResponseEventParamsReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Event/RpcResponseEventParams.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RpcResponseEventParamsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBXVVByb3Rvcy9EYXRhL0V2ZW50L1JwY1Jlc3BvbnNlRXZlbnRQYXJhbXMu",
            "cHJvdG8SE1dVUHJvdG9zLkRhdGEuRXZlbnQiSgoWUnBjUmVzcG9uc2VFdmVu",
            "dFBhcmFtcxIOCgZycGNfaWQYASABKA0SDgoGc3RhdHVzGAIgASgNEhAKCHBh",
            "eWxvYWRzGAMgAygMYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Event.RpcResponseEventParams), global::WUProtos.Data.Event.RpcResponseEventParams.Parser, new[]{ "RpcId", "Status", "Payloads" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RpcResponseEventParams : pb::IMessage<RpcResponseEventParams> {
    private static readonly pb::MessageParser<RpcResponseEventParams> _parser = new pb::MessageParser<RpcResponseEventParams>(() => new RpcResponseEventParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcResponseEventParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Event.RpcResponseEventParamsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcResponseEventParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcResponseEventParams(RpcResponseEventParams other) : this() {
      rpcId_ = other.rpcId_;
      status_ = other.status_;
      payloads_ = other.payloads_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcResponseEventParams Clone() {
      return new RpcResponseEventParams(this);
    }

    /// <summary>Field number for the "rpc_id" field.</summary>
    public const int RpcIdFieldNumber = 1;
    private uint rpcId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RpcId {
      get { return rpcId_; }
      set {
        rpcId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private uint status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "payloads" field.</summary>
    public const int PayloadsFieldNumber = 3;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_payloads_codec
        = pb::FieldCodec.ForBytes(26);
    private readonly pbc::RepeatedField<pb::ByteString> payloads_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Payloads {
      get { return payloads_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcResponseEventParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcResponseEventParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RpcId != other.RpcId) return false;
      if (Status != other.Status) return false;
      if(!payloads_.Equals(other.payloads_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RpcId != 0) hash ^= RpcId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      hash ^= payloads_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RpcId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RpcId);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Status);
      }
      payloads_.WriteTo(output, _repeated_payloads_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RpcId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RpcId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Status);
      }
      size += payloads_.CalculateSize(_repeated_payloads_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcResponseEventParams other) {
      if (other == null) {
        return;
      }
      if (other.RpcId != 0) {
        RpcId = other.RpcId;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      payloads_.Add(other.payloads_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RpcId = input.ReadUInt32();
            break;
          }
          case 16: {
            Status = input.ReadUInt32();
            break;
          }
          case 26: {
            payloads_.AddEntriesFrom(input, _repeated_payloads_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
