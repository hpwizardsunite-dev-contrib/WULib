// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Encounter/EncounterStartStageResult.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Encounter {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Encounter/EncounterStartStageResult.proto</summary>
  public static partial class EncounterStartStageResultReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Encounter/EncounterStartStageResult.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EncounterStartStageResultReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjdXVVByb3Rvcy9EYXRhL0VuY291bnRlci9FbmNvdW50ZXJTdGFydFN0YWdl",
            "UmVzdWx0LnByb3RvEhdXVVByb3Rvcy5EYXRhLkVuY291bnRlciKaBgoZRW5j",
            "b3VudGVyU3RhcnRTdGFnZVJlc3VsdBJiCgVzd2lzaBgBIAEoCzJRLldVUHJv",
            "dG9zLkRhdGEuRW5jb3VudGVyLkVuY291bnRlclN0YXJ0U3RhZ2VSZXN1bHQu",
            "RW5jb3VudGVyU3RhcnRTd2lzaFN0YWdlUmVzdWx0SAASZAoGY29tYmF0GAIg",
            "ASgLMlIuV1VQcm90b3MuRGF0YS5FbmNvdW50ZXIuRW5jb3VudGVyU3RhcnRT",
            "dGFnZVJlc3VsdC5FbmNvdW50ZXJTdGFydENvbWJhdFN0YWdlUmVzdWx0SAAS",
            "ZgoHcG9ydGtleRgDIAEoCzJTLldVUHJvdG9zLkRhdGEuRW5jb3VudGVyLkVu",
            "Y291bnRlclN0YXJ0U3RhZ2VSZXN1bHQuRW5jb3VudGVyU3RhcnRQb3J0a2V5",
            "U3RhZ2VSZXN1bHRIABogCh5FbmNvdW50ZXJTdGFydFN3aXNoU3RhZ2VSZXN1",
            "bHQaIgogRW5jb3VudGVyU3RhcnRQb3J0a2V5U3RhZ2VSZXN1bHQa/AIKH0Vu",
            "Y291bnRlclN0YXJ0Q29tYmF0U3RhZ2VSZXN1bHQSFAoMaHBfbWF4X2VuZW15",
            "GAEgASgDEh4KFmVuZW15X2RhbWFnZV91bmJsb2NrZWQYAiADKAMSHAoUZW5l",
            "bXlfZGFtYWdlX2Jsb2NrZWQYAyADKAMSFQoNaHBfbWF4X3BsYXllchgEIAEo",
            "AxKPAQoYcGxheWVyX2RhbWFnZV9wZXJfZW5lcmd5GAUgAygLMm0uV1VQcm90",
            "b3MuRGF0YS5FbmNvdW50ZXIuRW5jb3VudGVyU3RhcnRTdGFnZVJlc3VsdC5F",
            "bmNvdW50ZXJTdGFydENvbWJhdFN0YWdlUmVzdWx0LlBsYXllckRhbWFnZVBl",
            "ckVuZXJneUVudHJ5Eh4KFnBsYXllcl9jcml0X211bHRpcGxpZXIYBiABKAIa",
            "PAoaUGxheWVyRGFtYWdlUGVyRW5lcmd5RW50cnkSCwoDa2V5GAEgASgJEg0K",
            "BXZhbHVlGAIgASgDOgI4AUIGCgRUeXBlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Encounter.EncounterStartStageResult), global::WUProtos.Data.Encounter.EncounterStartStageResult.Parser, new[]{ "Swish", "Combat", "Portkey" }, new[]{ "Type" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartSwishStageResult), global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartSwishStageResult.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartPortkeyStageResult), global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartPortkeyStageResult.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartCombatStageResult), global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartCombatStageResult.Parser, new[]{ "HpMaxEnemy", "EnemyDamageUnblocked", "EnemyDamageBlocked", "HpMaxPlayer", "PlayerDamagePerEnergy", "PlayerCritMultiplier" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EncounterStartStageResult : pb::IMessage<EncounterStartStageResult> {
    private static readonly pb::MessageParser<EncounterStartStageResult> _parser = new pb::MessageParser<EncounterStartStageResult>(() => new EncounterStartStageResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncounterStartStageResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Encounter.EncounterStartStageResultReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterStartStageResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterStartStageResult(EncounterStartStageResult other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.Swish:
          Swish = other.Swish.Clone();
          break;
        case TypeOneofCase.Combat:
          Combat = other.Combat.Clone();
          break;
        case TypeOneofCase.Portkey:
          Portkey = other.Portkey.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterStartStageResult Clone() {
      return new EncounterStartStageResult(this);
    }

    /// <summary>Field number for the "swish" field.</summary>
    public const int SwishFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartSwishStageResult Swish {
      get { return typeCase_ == TypeOneofCase.Swish ? (global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartSwishStageResult) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Swish;
      }
    }

    /// <summary>Field number for the "combat" field.</summary>
    public const int CombatFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartCombatStageResult Combat {
      get { return typeCase_ == TypeOneofCase.Combat ? (global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartCombatStageResult) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Combat;
      }
    }

    /// <summary>Field number for the "portkey" field.</summary>
    public const int PortkeyFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartPortkeyStageResult Portkey {
      get { return typeCase_ == TypeOneofCase.Portkey ? (global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartPortkeyStageResult) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Portkey;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "Type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Swish = 1,
      Combat = 2,
      Portkey = 3,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncounterStartStageResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncounterStartStageResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Swish, other.Swish)) return false;
      if (!object.Equals(Combat, other.Combat)) return false;
      if (!object.Equals(Portkey, other.Portkey)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.Swish) hash ^= Swish.GetHashCode();
      if (typeCase_ == TypeOneofCase.Combat) hash ^= Combat.GetHashCode();
      if (typeCase_ == TypeOneofCase.Portkey) hash ^= Portkey.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeCase_ == TypeOneofCase.Swish) {
        output.WriteRawTag(10);
        output.WriteMessage(Swish);
      }
      if (typeCase_ == TypeOneofCase.Combat) {
        output.WriteRawTag(18);
        output.WriteMessage(Combat);
      }
      if (typeCase_ == TypeOneofCase.Portkey) {
        output.WriteRawTag(26);
        output.WriteMessage(Portkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.Swish) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Swish);
      }
      if (typeCase_ == TypeOneofCase.Combat) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Combat);
      }
      if (typeCase_ == TypeOneofCase.Portkey) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Portkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncounterStartStageResult other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Swish:
          if (Swish == null) {
            Swish = new global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartSwishStageResult();
          }
          Swish.MergeFrom(other.Swish);
          break;
        case TypeOneofCase.Combat:
          if (Combat == null) {
            Combat = new global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartCombatStageResult();
          }
          Combat.MergeFrom(other.Combat);
          break;
        case TypeOneofCase.Portkey:
          if (Portkey == null) {
            Portkey = new global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartPortkeyStageResult();
          }
          Portkey.MergeFrom(other.Portkey);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartSwishStageResult subBuilder = new global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartSwishStageResult();
            if (typeCase_ == TypeOneofCase.Swish) {
              subBuilder.MergeFrom(Swish);
            }
            input.ReadMessage(subBuilder);
            Swish = subBuilder;
            break;
          }
          case 18: {
            global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartCombatStageResult subBuilder = new global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartCombatStageResult();
            if (typeCase_ == TypeOneofCase.Combat) {
              subBuilder.MergeFrom(Combat);
            }
            input.ReadMessage(subBuilder);
            Combat = subBuilder;
            break;
          }
          case 26: {
            global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartPortkeyStageResult subBuilder = new global::WUProtos.Data.Encounter.EncounterStartStageResult.Types.EncounterStartPortkeyStageResult();
            if (typeCase_ == TypeOneofCase.Portkey) {
              subBuilder.MergeFrom(Portkey);
            }
            input.ReadMessage(subBuilder);
            Portkey = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the EncounterStartStageResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class EncounterStartSwishStageResult : pb::IMessage<EncounterStartSwishStageResult> {
        private static readonly pb::MessageParser<EncounterStartSwishStageResult> _parser = new pb::MessageParser<EncounterStartSwishStageResult>(() => new EncounterStartSwishStageResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EncounterStartSwishStageResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Encounter.EncounterStartStageResult.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EncounterStartSwishStageResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EncounterStartSwishStageResult(EncounterStartSwishStageResult other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EncounterStartSwishStageResult Clone() {
          return new EncounterStartSwishStageResult(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EncounterStartSwishStageResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EncounterStartSwishStageResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EncounterStartSwishStageResult other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class EncounterStartPortkeyStageResult : pb::IMessage<EncounterStartPortkeyStageResult> {
        private static readonly pb::MessageParser<EncounterStartPortkeyStageResult> _parser = new pb::MessageParser<EncounterStartPortkeyStageResult>(() => new EncounterStartPortkeyStageResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EncounterStartPortkeyStageResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Encounter.EncounterStartStageResult.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EncounterStartPortkeyStageResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EncounterStartPortkeyStageResult(EncounterStartPortkeyStageResult other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EncounterStartPortkeyStageResult Clone() {
          return new EncounterStartPortkeyStageResult(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EncounterStartPortkeyStageResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EncounterStartPortkeyStageResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EncounterStartPortkeyStageResult other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class EncounterStartCombatStageResult : pb::IMessage<EncounterStartCombatStageResult> {
        private static readonly pb::MessageParser<EncounterStartCombatStageResult> _parser = new pb::MessageParser<EncounterStartCombatStageResult>(() => new EncounterStartCombatStageResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EncounterStartCombatStageResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Encounter.EncounterStartStageResult.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EncounterStartCombatStageResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EncounterStartCombatStageResult(EncounterStartCombatStageResult other) : this() {
          hpMaxEnemy_ = other.hpMaxEnemy_;
          enemyDamageUnblocked_ = other.enemyDamageUnblocked_.Clone();
          enemyDamageBlocked_ = other.enemyDamageBlocked_.Clone();
          hpMaxPlayer_ = other.hpMaxPlayer_;
          playerDamagePerEnergy_ = other.playerDamagePerEnergy_.Clone();
          playerCritMultiplier_ = other.playerCritMultiplier_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EncounterStartCombatStageResult Clone() {
          return new EncounterStartCombatStageResult(this);
        }

        /// <summary>Field number for the "hp_max_enemy" field.</summary>
        public const int HpMaxEnemyFieldNumber = 1;
        private long hpMaxEnemy_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long HpMaxEnemy {
          get { return hpMaxEnemy_; }
          set {
            hpMaxEnemy_ = value;
          }
        }

        /// <summary>Field number for the "enemy_damage_unblocked" field.</summary>
        public const int EnemyDamageUnblockedFieldNumber = 2;
        private static readonly pb::FieldCodec<long> _repeated_enemyDamageUnblocked_codec
            = pb::FieldCodec.ForInt64(18);
        private readonly pbc::RepeatedField<long> enemyDamageUnblocked_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> EnemyDamageUnblocked {
          get { return enemyDamageUnblocked_; }
        }

        /// <summary>Field number for the "enemy_damage_blocked" field.</summary>
        public const int EnemyDamageBlockedFieldNumber = 3;
        private static readonly pb::FieldCodec<long> _repeated_enemyDamageBlocked_codec
            = pb::FieldCodec.ForInt64(26);
        private readonly pbc::RepeatedField<long> enemyDamageBlocked_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> EnemyDamageBlocked {
          get { return enemyDamageBlocked_; }
        }

        /// <summary>Field number for the "hp_max_player" field.</summary>
        public const int HpMaxPlayerFieldNumber = 4;
        private long hpMaxPlayer_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long HpMaxPlayer {
          get { return hpMaxPlayer_; }
          set {
            hpMaxPlayer_ = value;
          }
        }

        /// <summary>Field number for the "player_damage_per_energy" field.</summary>
        public const int PlayerDamagePerEnergyFieldNumber = 5;
        private static readonly pbc::MapField<string, long>.Codec _map_playerDamagePerEnergy_codec
            = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt64(16), 42);
        private readonly pbc::MapField<string, long> playerDamagePerEnergy_ = new pbc::MapField<string, long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, long> PlayerDamagePerEnergy {
          get { return playerDamagePerEnergy_; }
        }

        /// <summary>Field number for the "player_crit_multiplier" field.</summary>
        public const int PlayerCritMultiplierFieldNumber = 6;
        private float playerCritMultiplier_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float PlayerCritMultiplier {
          get { return playerCritMultiplier_; }
          set {
            playerCritMultiplier_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EncounterStartCombatStageResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EncounterStartCombatStageResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (HpMaxEnemy != other.HpMaxEnemy) return false;
          if(!enemyDamageUnblocked_.Equals(other.enemyDamageUnblocked_)) return false;
          if(!enemyDamageBlocked_.Equals(other.enemyDamageBlocked_)) return false;
          if (HpMaxPlayer != other.HpMaxPlayer) return false;
          if (!PlayerDamagePerEnergy.Equals(other.PlayerDamagePerEnergy)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PlayerCritMultiplier, other.PlayerCritMultiplier)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HpMaxEnemy != 0L) hash ^= HpMaxEnemy.GetHashCode();
          hash ^= enemyDamageUnblocked_.GetHashCode();
          hash ^= enemyDamageBlocked_.GetHashCode();
          if (HpMaxPlayer != 0L) hash ^= HpMaxPlayer.GetHashCode();
          hash ^= PlayerDamagePerEnergy.GetHashCode();
          if (PlayerCritMultiplier != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PlayerCritMultiplier);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (HpMaxEnemy != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(HpMaxEnemy);
          }
          enemyDamageUnblocked_.WriteTo(output, _repeated_enemyDamageUnblocked_codec);
          enemyDamageBlocked_.WriteTo(output, _repeated_enemyDamageBlocked_codec);
          if (HpMaxPlayer != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(HpMaxPlayer);
          }
          playerDamagePerEnergy_.WriteTo(output, _map_playerDamagePerEnergy_codec);
          if (PlayerCritMultiplier != 0F) {
            output.WriteRawTag(53);
            output.WriteFloat(PlayerCritMultiplier);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HpMaxEnemy != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(HpMaxEnemy);
          }
          size += enemyDamageUnblocked_.CalculateSize(_repeated_enemyDamageUnblocked_codec);
          size += enemyDamageBlocked_.CalculateSize(_repeated_enemyDamageBlocked_codec);
          if (HpMaxPlayer != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(HpMaxPlayer);
          }
          size += playerDamagePerEnergy_.CalculateSize(_map_playerDamagePerEnergy_codec);
          if (PlayerCritMultiplier != 0F) {
            size += 1 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EncounterStartCombatStageResult other) {
          if (other == null) {
            return;
          }
          if (other.HpMaxEnemy != 0L) {
            HpMaxEnemy = other.HpMaxEnemy;
          }
          enemyDamageUnblocked_.Add(other.enemyDamageUnblocked_);
          enemyDamageBlocked_.Add(other.enemyDamageBlocked_);
          if (other.HpMaxPlayer != 0L) {
            HpMaxPlayer = other.HpMaxPlayer;
          }
          playerDamagePerEnergy_.Add(other.playerDamagePerEnergy_);
          if (other.PlayerCritMultiplier != 0F) {
            PlayerCritMultiplier = other.PlayerCritMultiplier;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                HpMaxEnemy = input.ReadInt64();
                break;
              }
              case 18:
              case 16: {
                enemyDamageUnblocked_.AddEntriesFrom(input, _repeated_enemyDamageUnblocked_codec);
                break;
              }
              case 26:
              case 24: {
                enemyDamageBlocked_.AddEntriesFrom(input, _repeated_enemyDamageBlocked_codec);
                break;
              }
              case 32: {
                HpMaxPlayer = input.ReadInt64();
                break;
              }
              case 42: {
                playerDamagePerEnergy_.AddEntriesFrom(input, _map_playerDamagePerEnergy_codec);
                break;
              }
              case 53: {
                PlayerCritMultiplier = input.ReadFloat();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
