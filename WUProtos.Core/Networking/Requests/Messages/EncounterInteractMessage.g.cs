// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Networking/Requests/Messages/EncounterInteractMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Networking.Requests.Messages {

  /// <summary>Holder for reflection information generated from WUProtos/Networking/Requests/Messages/EncounterInteractMessage.proto</summary>
  public static partial class EncounterInteractMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Networking/Requests/Messages/EncounterInteractMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EncounterInteractMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkRXVVByb3Rvcy9OZXR3b3JraW5nL1JlcXVlc3RzL01lc3NhZ2VzL0VuY291",
            "bnRlckludGVyYWN0TWVzc2FnZS5wcm90bxIlV1VQcm90b3MuTmV0d29ya2lu",
            "Zy5SZXF1ZXN0cy5NZXNzYWdlcyLECwoYRW5jb3VudGVySW50ZXJhY3RNZXNz",
            "YWdlEhQKDGVuY291bnRlcl9pZBgBIAEoDBJ0Cg1zdGFnZV9vcHRpb25zGAIg",
            "ASgLMl0uV1VQcm90b3MuTmV0d29ya2luZy5SZXF1ZXN0cy5NZXNzYWdlcy5F",
            "bmNvdW50ZXJJbnRlcmFjdE1lc3NhZ2UuRW5jb3VudGVySW50ZXJhY3RTdGFn",
            "ZU9wdGlvbnMamwoKHUVuY291bnRlckludGVyYWN0U3RhZ2VPcHRpb25zEpIB",
            "CgVzd2lzaBgBIAEoCzKAAS5XVVByb3Rvcy5OZXR3b3JraW5nLlJlcXVlc3Rz",
            "Lk1lc3NhZ2VzLkVuY291bnRlckludGVyYWN0TWVzc2FnZS5FbmNvdW50ZXJJ",
            "bnRlcmFjdFN0YWdlT3B0aW9ucy5FbmNvdW50ZXJJbnRlcmFjdFN3aXNoU3Rh",
            "Z2VPcHRpb25zSAASlAEKBmNvbWJhdBgCIAEoCzKBAS5XVVByb3Rvcy5OZXR3",
            "b3JraW5nLlJlcXVlc3RzLk1lc3NhZ2VzLkVuY291bnRlckludGVyYWN0TWVz",
            "c2FnZS5FbmNvdW50ZXJJbnRlcmFjdFN0YWdlT3B0aW9ucy5FbmNvdW50ZXJJ",
            "bnRlcmFjdENvbWJhdFN0YWdlT3B0aW9uc0gAGpUCCiJFbmNvdW50ZXJJbnRl",
            "cmFjdFN3aXNoU3RhZ2VPcHRpb25zEhUKDWVuZXJneV9nbXRfaWQYASADKAkS",
            "FQoNaXNfY2xpZW50X2hpdBgCIAEoCBIWCg5hY2N1cmFjeV9ib251cxgDIAEo",
            "AhIdChVwcm9mZXNzaW9uc19ycHNfbWF0Y2gYBCABKAISGQoRc3BlbGxfdHlw",
            "ZV9nbXRfaWQYBSABKAkSIAoYY29lcmNlX3NwZWxsY2FzdF9zdWNjZXNzGGQg",
            "ASgIEiAKGGNvZXJjZV9zcGVsbGNhc3RfZmFpbHVyZRhlIAEoCBITCgtjb2Vy",
            "Y2VfZmxlZRhmIAEoCBIWCg5jb2VyY2Vfbm9fZmxlZRhnIAEoCBqtBQojRW5j",
            "b3VudGVySW50ZXJhY3RDb21iYXRTdGFnZU9wdGlvbnMSmwEKBmF0dGFjaxgB",
            "IAEoCzKIAS5XVVByb3Rvcy5OZXR3b3JraW5nLlJlcXVlc3RzLk1lc3NhZ2Vz",
            "LkVuY291bnRlckludGVyYWN0TWVzc2FnZS5FbmNvdW50ZXJJbnRlcmFjdFN0",
            "YWdlT3B0aW9ucy5FbmNvdW50ZXJJbnRlcmFjdENvbWJhdFN0YWdlT3B0aW9u",
            "cy5BdHRhY2tIABKbAQoGZGVmZW5kGAIgASgLMogBLldVUHJvdG9zLk5ldHdv",
            "cmtpbmcuUmVxdWVzdHMuTWVzc2FnZXMuRW5jb3VudGVySW50ZXJhY3RNZXNz",
            "YWdlLkVuY291bnRlckludGVyYWN0U3RhZ2VPcHRpb25zLkVuY291bnRlcklu",
            "dGVyYWN0Q29tYmF0U3RhZ2VPcHRpb25zLkRlZmVuZEgAEqYBCgxhdXRvX2Fk",
            "dmFuY2UYAyABKAsyjQEuV1VQcm90b3MuTmV0d29ya2luZy5SZXF1ZXN0cy5N",
            "ZXNzYWdlcy5FbmNvdW50ZXJJbnRlcmFjdE1lc3NhZ2UuRW5jb3VudGVySW50",
            "ZXJhY3RTdGFnZU9wdGlvbnMuRW5jb3VudGVySW50ZXJhY3RDb21iYXRTdGFn",
            "ZU9wdGlvbnMuQXV0b0FkdmFuY2VIABpSCgZBdHRhY2sSFQoNZW5lcmd5X2dt",
            "dF9pZBgBIAMoCRIWCg5za2lsbF9tb2RpZmllchgCIAEoAhIZChFzcGVsbF90",
            "eXBlX2dtdF9pZBgDIAEoCRoNCgtBdXRvQWR2YW5jZRo2CgZEZWZlbmQSFQoN",
            "YmxvY2tfc3VjY2VzcxgBIAEoCBIVCg1lbmVyZ3lfZ210X2lkGAIgAygJQgYK",
            "BFR5cGVCBgoEVHlwZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage), global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Parser, new[]{ "EncounterId", "StageOptions" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions), global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Parser, new[]{ "Swish", "Combat" }, new[]{ "Type" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractSwishStageOptions), global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractSwishStageOptions.Parser, new[]{ "EnergyGmtId", "IsClientHit", "AccuracyBonus", "ProfessionsRpsMatch", "SpellTypeGmtId", "CoerceSpellcastSuccess", "CoerceSpellcastFailure", "CoerceFlee", "CoerceNoFlee" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions), global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Parser, new[]{ "Attack", "Defend", "AutoAdvance" }, new[]{ "Type" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.Attack), global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.Attack.Parser, new[]{ "EnergyGmtId", "SkillModifier", "SpellTypeGmtId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.AutoAdvance), global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.AutoAdvance.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.Defend), global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.Defend.Parser, new[]{ "BlockSuccess", "EnergyGmtId" }, null, null, null)})})})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EncounterInteractMessage : pb::IMessage<EncounterInteractMessage> {
    private static readonly pb::MessageParser<EncounterInteractMessage> _parser = new pb::MessageParser<EncounterInteractMessage>(() => new EncounterInteractMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncounterInteractMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Networking.Requests.Messages.EncounterInteractMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterInteractMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterInteractMessage(EncounterInteractMessage other) : this() {
      encounterId_ = other.encounterId_;
      stageOptions_ = other.stageOptions_ != null ? other.stageOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterInteractMessage Clone() {
      return new EncounterInteractMessage(this);
    }

    /// <summary>Field number for the "encounter_id" field.</summary>
    public const int EncounterIdFieldNumber = 1;
    private pb::ByteString encounterId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString EncounterId {
      get { return encounterId_; }
      set {
        encounterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stage_options" field.</summary>
    public const int StageOptionsFieldNumber = 2;
    private global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions stageOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions StageOptions {
      get { return stageOptions_; }
      set {
        stageOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncounterInteractMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncounterInteractMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EncounterId != other.EncounterId) return false;
      if (!object.Equals(StageOptions, other.StageOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EncounterId.Length != 0) hash ^= EncounterId.GetHashCode();
      if (stageOptions_ != null) hash ^= StageOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EncounterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(EncounterId);
      }
      if (stageOptions_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StageOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EncounterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncounterId);
      }
      if (stageOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StageOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncounterInteractMessage other) {
      if (other == null) {
        return;
      }
      if (other.EncounterId.Length != 0) {
        EncounterId = other.EncounterId;
      }
      if (other.stageOptions_ != null) {
        if (stageOptions_ == null) {
          StageOptions = new global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions();
        }
        StageOptions.MergeFrom(other.StageOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EncounterId = input.ReadBytes();
            break;
          }
          case 18: {
            if (stageOptions_ == null) {
              StageOptions = new global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions();
            }
            input.ReadMessage(StageOptions);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the EncounterInteractMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class EncounterInteractStageOptions : pb::IMessage<EncounterInteractStageOptions> {
        private static readonly pb::MessageParser<EncounterInteractStageOptions> _parser = new pb::MessageParser<EncounterInteractStageOptions>(() => new EncounterInteractStageOptions());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EncounterInteractStageOptions> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EncounterInteractStageOptions() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EncounterInteractStageOptions(EncounterInteractStageOptions other) : this() {
          switch (other.TypeCase) {
            case TypeOneofCase.Swish:
              Swish = other.Swish.Clone();
              break;
            case TypeOneofCase.Combat:
              Combat = other.Combat.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EncounterInteractStageOptions Clone() {
          return new EncounterInteractStageOptions(this);
        }

        /// <summary>Field number for the "swish" field.</summary>
        public const int SwishFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractSwishStageOptions Swish {
          get { return typeCase_ == TypeOneofCase.Swish ? (global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractSwishStageOptions) type_ : null; }
          set {
            type_ = value;
            typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Swish;
          }
        }

        /// <summary>Field number for the "combat" field.</summary>
        public const int CombatFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions Combat {
          get { return typeCase_ == TypeOneofCase.Combat ? (global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions) type_ : null; }
          set {
            type_ = value;
            typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Combat;
          }
        }

        private object type_;
        /// <summary>Enum of possible cases for the "Type" oneof.</summary>
        public enum TypeOneofCase {
          None = 0,
          Swish = 1,
          Combat = 2,
        }
        private TypeOneofCase typeCase_ = TypeOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TypeOneofCase TypeCase {
          get { return typeCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearType() {
          typeCase_ = TypeOneofCase.None;
          type_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EncounterInteractStageOptions);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EncounterInteractStageOptions other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Swish, other.Swish)) return false;
          if (!object.Equals(Combat, other.Combat)) return false;
          if (TypeCase != other.TypeCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (typeCase_ == TypeOneofCase.Swish) hash ^= Swish.GetHashCode();
          if (typeCase_ == TypeOneofCase.Combat) hash ^= Combat.GetHashCode();
          hash ^= (int) typeCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (typeCase_ == TypeOneofCase.Swish) {
            output.WriteRawTag(10);
            output.WriteMessage(Swish);
          }
          if (typeCase_ == TypeOneofCase.Combat) {
            output.WriteRawTag(18);
            output.WriteMessage(Combat);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (typeCase_ == TypeOneofCase.Swish) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Swish);
          }
          if (typeCase_ == TypeOneofCase.Combat) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Combat);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EncounterInteractStageOptions other) {
          if (other == null) {
            return;
          }
          switch (other.TypeCase) {
            case TypeOneofCase.Swish:
              if (Swish == null) {
                Swish = new global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractSwishStageOptions();
              }
              Swish.MergeFrom(other.Swish);
              break;
            case TypeOneofCase.Combat:
              if (Combat == null) {
                Combat = new global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions();
              }
              Combat.MergeFrom(other.Combat);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractSwishStageOptions subBuilder = new global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractSwishStageOptions();
                if (typeCase_ == TypeOneofCase.Swish) {
                  subBuilder.MergeFrom(Swish);
                }
                input.ReadMessage(subBuilder);
                Swish = subBuilder;
                break;
              }
              case 18: {
                global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions subBuilder = new global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions();
                if (typeCase_ == TypeOneofCase.Combat) {
                  subBuilder.MergeFrom(Combat);
                }
                input.ReadMessage(subBuilder);
                Combat = subBuilder;
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the EncounterInteractStageOptions message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class EncounterInteractSwishStageOptions : pb::IMessage<EncounterInteractSwishStageOptions> {
            private static readonly pb::MessageParser<EncounterInteractSwishStageOptions> _parser = new pb::MessageParser<EncounterInteractSwishStageOptions>(() => new EncounterInteractSwishStageOptions());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<EncounterInteractSwishStageOptions> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EncounterInteractSwishStageOptions() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EncounterInteractSwishStageOptions(EncounterInteractSwishStageOptions other) : this() {
              energyGmtId_ = other.energyGmtId_.Clone();
              isClientHit_ = other.isClientHit_;
              accuracyBonus_ = other.accuracyBonus_;
              professionsRpsMatch_ = other.professionsRpsMatch_;
              spellTypeGmtId_ = other.spellTypeGmtId_;
              coerceSpellcastSuccess_ = other.coerceSpellcastSuccess_;
              coerceSpellcastFailure_ = other.coerceSpellcastFailure_;
              coerceFlee_ = other.coerceFlee_;
              coerceNoFlee_ = other.coerceNoFlee_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EncounterInteractSwishStageOptions Clone() {
              return new EncounterInteractSwishStageOptions(this);
            }

            /// <summary>Field number for the "energy_gmt_id" field.</summary>
            public const int EnergyGmtIdFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_energyGmtId_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> energyGmtId_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> EnergyGmtId {
              get { return energyGmtId_; }
            }

            /// <summary>Field number for the "is_client_hit" field.</summary>
            public const int IsClientHitFieldNumber = 2;
            private bool isClientHit_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool IsClientHit {
              get { return isClientHit_; }
              set {
                isClientHit_ = value;
              }
            }

            /// <summary>Field number for the "accuracy_bonus" field.</summary>
            public const int AccuracyBonusFieldNumber = 3;
            private float accuracyBonus_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public float AccuracyBonus {
              get { return accuracyBonus_; }
              set {
                accuracyBonus_ = value;
              }
            }

            /// <summary>Field number for the "professions_rps_match" field.</summary>
            public const int ProfessionsRpsMatchFieldNumber = 4;
            private float professionsRpsMatch_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public float ProfessionsRpsMatch {
              get { return professionsRpsMatch_; }
              set {
                professionsRpsMatch_ = value;
              }
            }

            /// <summary>Field number for the "spell_type_gmt_id" field.</summary>
            public const int SpellTypeGmtIdFieldNumber = 5;
            private string spellTypeGmtId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string SpellTypeGmtId {
              get { return spellTypeGmtId_; }
              set {
                spellTypeGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "coerce_spellcast_success" field.</summary>
            public const int CoerceSpellcastSuccessFieldNumber = 100;
            private bool coerceSpellcastSuccess_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool CoerceSpellcastSuccess {
              get { return coerceSpellcastSuccess_; }
              set {
                coerceSpellcastSuccess_ = value;
              }
            }

            /// <summary>Field number for the "coerce_spellcast_failure" field.</summary>
            public const int CoerceSpellcastFailureFieldNumber = 101;
            private bool coerceSpellcastFailure_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool CoerceSpellcastFailure {
              get { return coerceSpellcastFailure_; }
              set {
                coerceSpellcastFailure_ = value;
              }
            }

            /// <summary>Field number for the "coerce_flee" field.</summary>
            public const int CoerceFleeFieldNumber = 102;
            private bool coerceFlee_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool CoerceFlee {
              get { return coerceFlee_; }
              set {
                coerceFlee_ = value;
              }
            }

            /// <summary>Field number for the "coerce_no_flee" field.</summary>
            public const int CoerceNoFleeFieldNumber = 103;
            private bool coerceNoFlee_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool CoerceNoFlee {
              get { return coerceNoFlee_; }
              set {
                coerceNoFlee_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as EncounterInteractSwishStageOptions);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(EncounterInteractSwishStageOptions other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!energyGmtId_.Equals(other.energyGmtId_)) return false;
              if (IsClientHit != other.IsClientHit) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AccuracyBonus, other.AccuracyBonus)) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ProfessionsRpsMatch, other.ProfessionsRpsMatch)) return false;
              if (SpellTypeGmtId != other.SpellTypeGmtId) return false;
              if (CoerceSpellcastSuccess != other.CoerceSpellcastSuccess) return false;
              if (CoerceSpellcastFailure != other.CoerceSpellcastFailure) return false;
              if (CoerceFlee != other.CoerceFlee) return false;
              if (CoerceNoFlee != other.CoerceNoFlee) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= energyGmtId_.GetHashCode();
              if (IsClientHit != false) hash ^= IsClientHit.GetHashCode();
              if (AccuracyBonus != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AccuracyBonus);
              if (ProfessionsRpsMatch != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ProfessionsRpsMatch);
              if (SpellTypeGmtId.Length != 0) hash ^= SpellTypeGmtId.GetHashCode();
              if (CoerceSpellcastSuccess != false) hash ^= CoerceSpellcastSuccess.GetHashCode();
              if (CoerceSpellcastFailure != false) hash ^= CoerceSpellcastFailure.GetHashCode();
              if (CoerceFlee != false) hash ^= CoerceFlee.GetHashCode();
              if (CoerceNoFlee != false) hash ^= CoerceNoFlee.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              energyGmtId_.WriteTo(output, _repeated_energyGmtId_codec);
              if (IsClientHit != false) {
                output.WriteRawTag(16);
                output.WriteBool(IsClientHit);
              }
              if (AccuracyBonus != 0F) {
                output.WriteRawTag(29);
                output.WriteFloat(AccuracyBonus);
              }
              if (ProfessionsRpsMatch != 0F) {
                output.WriteRawTag(37);
                output.WriteFloat(ProfessionsRpsMatch);
              }
              if (SpellTypeGmtId.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(SpellTypeGmtId);
              }
              if (CoerceSpellcastSuccess != false) {
                output.WriteRawTag(160, 6);
                output.WriteBool(CoerceSpellcastSuccess);
              }
              if (CoerceSpellcastFailure != false) {
                output.WriteRawTag(168, 6);
                output.WriteBool(CoerceSpellcastFailure);
              }
              if (CoerceFlee != false) {
                output.WriteRawTag(176, 6);
                output.WriteBool(CoerceFlee);
              }
              if (CoerceNoFlee != false) {
                output.WriteRawTag(184, 6);
                output.WriteBool(CoerceNoFlee);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += energyGmtId_.CalculateSize(_repeated_energyGmtId_codec);
              if (IsClientHit != false) {
                size += 1 + 1;
              }
              if (AccuracyBonus != 0F) {
                size += 1 + 4;
              }
              if (ProfessionsRpsMatch != 0F) {
                size += 1 + 4;
              }
              if (SpellTypeGmtId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SpellTypeGmtId);
              }
              if (CoerceSpellcastSuccess != false) {
                size += 2 + 1;
              }
              if (CoerceSpellcastFailure != false) {
                size += 2 + 1;
              }
              if (CoerceFlee != false) {
                size += 2 + 1;
              }
              if (CoerceNoFlee != false) {
                size += 2 + 1;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(EncounterInteractSwishStageOptions other) {
              if (other == null) {
                return;
              }
              energyGmtId_.Add(other.energyGmtId_);
              if (other.IsClientHit != false) {
                IsClientHit = other.IsClientHit;
              }
              if (other.AccuracyBonus != 0F) {
                AccuracyBonus = other.AccuracyBonus;
              }
              if (other.ProfessionsRpsMatch != 0F) {
                ProfessionsRpsMatch = other.ProfessionsRpsMatch;
              }
              if (other.SpellTypeGmtId.Length != 0) {
                SpellTypeGmtId = other.SpellTypeGmtId;
              }
              if (other.CoerceSpellcastSuccess != false) {
                CoerceSpellcastSuccess = other.CoerceSpellcastSuccess;
              }
              if (other.CoerceSpellcastFailure != false) {
                CoerceSpellcastFailure = other.CoerceSpellcastFailure;
              }
              if (other.CoerceFlee != false) {
                CoerceFlee = other.CoerceFlee;
              }
              if (other.CoerceNoFlee != false) {
                CoerceNoFlee = other.CoerceNoFlee;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    energyGmtId_.AddEntriesFrom(input, _repeated_energyGmtId_codec);
                    break;
                  }
                  case 16: {
                    IsClientHit = input.ReadBool();
                    break;
                  }
                  case 29: {
                    AccuracyBonus = input.ReadFloat();
                    break;
                  }
                  case 37: {
                    ProfessionsRpsMatch = input.ReadFloat();
                    break;
                  }
                  case 42: {
                    SpellTypeGmtId = input.ReadString();
                    break;
                  }
                  case 800: {
                    CoerceSpellcastSuccess = input.ReadBool();
                    break;
                  }
                  case 808: {
                    CoerceSpellcastFailure = input.ReadBool();
                    break;
                  }
                  case 816: {
                    CoerceFlee = input.ReadBool();
                    break;
                  }
                  case 824: {
                    CoerceNoFlee = input.ReadBool();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class EncounterInteractCombatStageOptions : pb::IMessage<EncounterInteractCombatStageOptions> {
            private static readonly pb::MessageParser<EncounterInteractCombatStageOptions> _parser = new pb::MessageParser<EncounterInteractCombatStageOptions>(() => new EncounterInteractCombatStageOptions());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<EncounterInteractCombatStageOptions> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EncounterInteractCombatStageOptions() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EncounterInteractCombatStageOptions(EncounterInteractCombatStageOptions other) : this() {
              switch (other.TypeCase) {
                case TypeOneofCase.Attack:
                  Attack = other.Attack.Clone();
                  break;
                case TypeOneofCase.Defend:
                  Defend = other.Defend.Clone();
                  break;
                case TypeOneofCase.AutoAdvance:
                  AutoAdvance = other.AutoAdvance.Clone();
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EncounterInteractCombatStageOptions Clone() {
              return new EncounterInteractCombatStageOptions(this);
            }

            /// <summary>Field number for the "attack" field.</summary>
            public const int AttackFieldNumber = 1;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.Attack Attack {
              get { return typeCase_ == TypeOneofCase.Attack ? (global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.Attack) type_ : null; }
              set {
                type_ = value;
                typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Attack;
              }
            }

            /// <summary>Field number for the "defend" field.</summary>
            public const int DefendFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.Defend Defend {
              get { return typeCase_ == TypeOneofCase.Defend ? (global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.Defend) type_ : null; }
              set {
                type_ = value;
                typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Defend;
              }
            }

            /// <summary>Field number for the "auto_advance" field.</summary>
            public const int AutoAdvanceFieldNumber = 3;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.AutoAdvance AutoAdvance {
              get { return typeCase_ == TypeOneofCase.AutoAdvance ? (global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.AutoAdvance) type_ : null; }
              set {
                type_ = value;
                typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.AutoAdvance;
              }
            }

            private object type_;
            /// <summary>Enum of possible cases for the "Type" oneof.</summary>
            public enum TypeOneofCase {
              None = 0,
              Attack = 1,
              Defend = 2,
              AutoAdvance = 3,
            }
            private TypeOneofCase typeCase_ = TypeOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TypeOneofCase TypeCase {
              get { return typeCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearType() {
              typeCase_ = TypeOneofCase.None;
              type_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as EncounterInteractCombatStageOptions);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(EncounterInteractCombatStageOptions other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Attack, other.Attack)) return false;
              if (!object.Equals(Defend, other.Defend)) return false;
              if (!object.Equals(AutoAdvance, other.AutoAdvance)) return false;
              if (TypeCase != other.TypeCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (typeCase_ == TypeOneofCase.Attack) hash ^= Attack.GetHashCode();
              if (typeCase_ == TypeOneofCase.Defend) hash ^= Defend.GetHashCode();
              if (typeCase_ == TypeOneofCase.AutoAdvance) hash ^= AutoAdvance.GetHashCode();
              hash ^= (int) typeCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (typeCase_ == TypeOneofCase.Attack) {
                output.WriteRawTag(10);
                output.WriteMessage(Attack);
              }
              if (typeCase_ == TypeOneofCase.Defend) {
                output.WriteRawTag(18);
                output.WriteMessage(Defend);
              }
              if (typeCase_ == TypeOneofCase.AutoAdvance) {
                output.WriteRawTag(26);
                output.WriteMessage(AutoAdvance);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (typeCase_ == TypeOneofCase.Attack) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attack);
              }
              if (typeCase_ == TypeOneofCase.Defend) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Defend);
              }
              if (typeCase_ == TypeOneofCase.AutoAdvance) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AutoAdvance);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(EncounterInteractCombatStageOptions other) {
              if (other == null) {
                return;
              }
              switch (other.TypeCase) {
                case TypeOneofCase.Attack:
                  if (Attack == null) {
                    Attack = new global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.Attack();
                  }
                  Attack.MergeFrom(other.Attack);
                  break;
                case TypeOneofCase.Defend:
                  if (Defend == null) {
                    Defend = new global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.Defend();
                  }
                  Defend.MergeFrom(other.Defend);
                  break;
                case TypeOneofCase.AutoAdvance:
                  if (AutoAdvance == null) {
                    AutoAdvance = new global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.AutoAdvance();
                  }
                  AutoAdvance.MergeFrom(other.AutoAdvance);
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.Attack subBuilder = new global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.Attack();
                    if (typeCase_ == TypeOneofCase.Attack) {
                      subBuilder.MergeFrom(Attack);
                    }
                    input.ReadMessage(subBuilder);
                    Attack = subBuilder;
                    break;
                  }
                  case 18: {
                    global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.Defend subBuilder = new global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.Defend();
                    if (typeCase_ == TypeOneofCase.Defend) {
                      subBuilder.MergeFrom(Defend);
                    }
                    input.ReadMessage(subBuilder);
                    Defend = subBuilder;
                    break;
                  }
                  case 26: {
                    global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.AutoAdvance subBuilder = new global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Types.AutoAdvance();
                    if (typeCase_ == TypeOneofCase.AutoAdvance) {
                      subBuilder.MergeFrom(AutoAdvance);
                    }
                    input.ReadMessage(subBuilder);
                    AutoAdvance = subBuilder;
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the EncounterInteractCombatStageOptions message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class Attack : pb::IMessage<Attack> {
                private static readonly pb::MessageParser<Attack> _parser = new pb::MessageParser<Attack>(() => new Attack());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<Attack> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Attack() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Attack(Attack other) : this() {
                  energyGmtId_ = other.energyGmtId_.Clone();
                  skillModifier_ = other.skillModifier_;
                  spellTypeGmtId_ = other.spellTypeGmtId_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Attack Clone() {
                  return new Attack(this);
                }

                /// <summary>Field number for the "energy_gmt_id" field.</summary>
                public const int EnergyGmtIdFieldNumber = 1;
                private static readonly pb::FieldCodec<string> _repeated_energyGmtId_codec
                    = pb::FieldCodec.ForString(10);
                private readonly pbc::RepeatedField<string> energyGmtId_ = new pbc::RepeatedField<string>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<string> EnergyGmtId {
                  get { return energyGmtId_; }
                }

                /// <summary>Field number for the "skill_modifier" field.</summary>
                public const int SkillModifierFieldNumber = 2;
                private float skillModifier_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public float SkillModifier {
                  get { return skillModifier_; }
                  set {
                    skillModifier_ = value;
                  }
                }

                /// <summary>Field number for the "spell_type_gmt_id" field.</summary>
                public const int SpellTypeGmtIdFieldNumber = 3;
                private string spellTypeGmtId_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string SpellTypeGmtId {
                  get { return spellTypeGmtId_; }
                  set {
                    spellTypeGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as Attack);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(Attack other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if(!energyGmtId_.Equals(other.energyGmtId_)) return false;
                  if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SkillModifier, other.SkillModifier)) return false;
                  if (SpellTypeGmtId != other.SpellTypeGmtId) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  hash ^= energyGmtId_.GetHashCode();
                  if (SkillModifier != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SkillModifier);
                  if (SpellTypeGmtId.Length != 0) hash ^= SpellTypeGmtId.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  energyGmtId_.WriteTo(output, _repeated_energyGmtId_codec);
                  if (SkillModifier != 0F) {
                    output.WriteRawTag(21);
                    output.WriteFloat(SkillModifier);
                  }
                  if (SpellTypeGmtId.Length != 0) {
                    output.WriteRawTag(26);
                    output.WriteString(SpellTypeGmtId);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  size += energyGmtId_.CalculateSize(_repeated_energyGmtId_codec);
                  if (SkillModifier != 0F) {
                    size += 1 + 4;
                  }
                  if (SpellTypeGmtId.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(SpellTypeGmtId);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(Attack other) {
                  if (other == null) {
                    return;
                  }
                  energyGmtId_.Add(other.energyGmtId_);
                  if (other.SkillModifier != 0F) {
                    SkillModifier = other.SkillModifier;
                  }
                  if (other.SpellTypeGmtId.Length != 0) {
                    SpellTypeGmtId = other.SpellTypeGmtId;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        energyGmtId_.AddEntriesFrom(input, _repeated_energyGmtId_codec);
                        break;
                      }
                      case 21: {
                        SkillModifier = input.ReadFloat();
                        break;
                      }
                      case 26: {
                        SpellTypeGmtId = input.ReadString();
                        break;
                      }
                    }
                  }
                }

              }

              public sealed partial class AutoAdvance : pb::IMessage<AutoAdvance> {
                private static readonly pb::MessageParser<AutoAdvance> _parser = new pb::MessageParser<AutoAdvance>(() => new AutoAdvance());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<AutoAdvance> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Descriptor.NestedTypes[1]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public AutoAdvance() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public AutoAdvance(AutoAdvance other) : this() {
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public AutoAdvance Clone() {
                  return new AutoAdvance(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as AutoAdvance);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(AutoAdvance other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(AutoAdvance other) {
                  if (other == null) {
                    return;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    }
                  }
                }

              }

              public sealed partial class Defend : pb::IMessage<Defend> {
                private static readonly pb::MessageParser<Defend> _parser = new pb::MessageParser<Defend>(() => new Defend());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<Defend> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Networking.Requests.Messages.EncounterInteractMessage.Types.EncounterInteractStageOptions.Types.EncounterInteractCombatStageOptions.Descriptor.NestedTypes[2]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Defend() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Defend(Defend other) : this() {
                  blockSuccess_ = other.blockSuccess_;
                  energyGmtId_ = other.energyGmtId_.Clone();
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Defend Clone() {
                  return new Defend(this);
                }

                /// <summary>Field number for the "block_success" field.</summary>
                public const int BlockSuccessFieldNumber = 1;
                private bool blockSuccess_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool BlockSuccess {
                  get { return blockSuccess_; }
                  set {
                    blockSuccess_ = value;
                  }
                }

                /// <summary>Field number for the "energy_gmt_id" field.</summary>
                public const int EnergyGmtIdFieldNumber = 2;
                private static readonly pb::FieldCodec<string> _repeated_energyGmtId_codec
                    = pb::FieldCodec.ForString(18);
                private readonly pbc::RepeatedField<string> energyGmtId_ = new pbc::RepeatedField<string>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<string> EnergyGmtId {
                  get { return energyGmtId_; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as Defend);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(Defend other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (BlockSuccess != other.BlockSuccess) return false;
                  if(!energyGmtId_.Equals(other.energyGmtId_)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (BlockSuccess != false) hash ^= BlockSuccess.GetHashCode();
                  hash ^= energyGmtId_.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (BlockSuccess != false) {
                    output.WriteRawTag(8);
                    output.WriteBool(BlockSuccess);
                  }
                  energyGmtId_.WriteTo(output, _repeated_energyGmtId_codec);
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (BlockSuccess != false) {
                    size += 1 + 1;
                  }
                  size += energyGmtId_.CalculateSize(_repeated_energyGmtId_codec);
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(Defend other) {
                  if (other == null) {
                    return;
                  }
                  if (other.BlockSuccess != false) {
                    BlockSuccess = other.BlockSuccess;
                  }
                  energyGmtId_.Add(other.energyGmtId_);
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        BlockSuccess = input.ReadBool();
                        break;
                      }
                      case 18: {
                        energyGmtId_.AddEntriesFrom(input, _repeated_energyGmtId_codec);
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
