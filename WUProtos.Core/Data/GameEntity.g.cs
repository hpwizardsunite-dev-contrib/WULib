// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/GameEntity.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/GameEntity.proto</summary>
  public static partial class GameEntityReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/GameEntity.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameEntityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5XVVByb3Rvcy9EYXRhL0dhbWVFbnRpdHkucHJvdG8SDVdVUHJvdG9zLkRh",
            "dGEaJ1dVUHJvdG9zL0RhdGEvQ2xpZW50L0NsaWVudE1hcFBvaS5wcm90bxoi",
            "V1VQcm90b3MvRGF0YS9EaXNwbGF5V2VhdGhlci5wcm90bxojV1VQcm90b3Mv",
            "RGF0YS9HYW1lcGxheVdlYXRoZXIucHJvdG8aKFdVUHJvdG9zL0RhdGEvV2Vh",
            "dGhlckFsZXJ0U2V0dGluZ3MucHJvdG8ihg4KCkdhbWVFbnRpdHkSMQoDcG9p",
            "GAEgASgLMiIuV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50TWFwUG9pSAAS",
            "OQoFdHJhY2UYAiABKAsyKC5XVVByb3Rvcy5EYXRhLkdhbWVFbnRpdHkuQ2xp",
            "ZW50TWFwVHJhY2VIABI/CghsYW5kbWFyaxgDIAEoCzIrLldVUHJvdG9zLkRh",
            "dGEuR2FtZUVudGl0eS5DbGllbnRNYXBMYW5kbWFya0gAElAKEXBvdGlvbl9p",
            "bmdyZWRpZW50GAQgASgLMjMuV1VQcm90b3MuRGF0YS5HYW1lRW50aXR5LkNs",
            "aWVudE1hcFBvdGlvbkluZ3JlZGllbnRIABI6Cgd3ZWF0aGVyGAUgASgLMicu",
            "V1VQcm90b3MuRGF0YS5HYW1lRW50aXR5LkNsaWVudFdlYXRoZXJIABJLChBl",
            "bnZpcm9ubWVudF90YWdzGAYgASgLMi8uV1VQcm90b3MuRGF0YS5HYW1lRW50",
            "aXR5LkNsaWVudEVudmlyb25tZW50VGFnc0gAGtcBCg1DbGllbnRXZWF0aGVy",
            "EhIKCnMyX2NlbGxfaWQYASABKAMSNgoPZGlzcGxheV93ZWF0aGVyGAIgASgL",
            "Mh0uV1VQcm90b3MuRGF0YS5EaXNwbGF5V2VhdGhlchI4ChBnYW1lcGxheV93",
            "ZWF0aGVyGAMgASgLMh4uV1VQcm90b3MuRGF0YS5HYW1lcGxheVdlYXRoZXIS",
            "QAoGYWxlcnRzGAQgAygLMjAuV1VQcm90b3MuRGF0YS5XZWF0aGVyQWxlcnRT",
            "ZXR0aW5ncy5XZWF0aGVyQWxlcnQa+gEKDkNsaWVudE1hcFRyYWNlEhgKEGVu",
            "Y291bnRlcl9nbXRfaWQYASABKAkSEAoIbGF0aXR1ZGUYAiABKAESEQoJbG9u",
            "Z2l0dWRlGAMgASgBEhgKEGVuY291bnRlcl90aWNrZXQYBCABKAwSPwoGc291",
            "cmNlGAUgASgOMi8uV1VQcm90b3MuRGF0YS5HYW1lRW50aXR5LkNsaWVudE1h",
            "cFRyYWNlLlNvdXJjZRIWCg5leHBpcnlfdGltZV9tcxgGIAEoAyI2CgZTb3Vy",
            "Y2USCwoHVU5LTk9XThAAEgwKCFNUQU5EQVJEEAESEQoNREFSS19ERVRFQ1RP",
            "UhACGpEBChFDbGllbnRNYXBMYW5kbWFyaxIcChRjb2xsZWN0aW9uX2ZhbWls",
            "eV9pZBgBIAEoCRIUCgxwb2lfbGF0aXR1ZGUYAiABKAESFQoNcG9pX2xvbmdp",
            "dHVkZRgDIAEoARIXCg9ib3JkZXJfbGF0aXR1ZGUYBCADKAESGAoQYm9yZGVy",
            "X2xvbmdpdHVkZRgFIAMoARqIAgoZQ2xpZW50TWFwUG90aW9uSW5ncmVkaWVu",
            "dBIZChFpbmdyZWRpZW50X2dtdF9pZBgBIAEoCRIQCghsYXRpdHVkZRgCIAEo",
            "ARIRCglsb25naXR1ZGUYAyABKAESDgoGdGlja2V0GAQgASgMEhYKDmV4cGly",
            "eV90aW1lX21zGAUgASgDEkoKBnNvdXJjZRgGIAEoDjI6LldVUHJvdG9zLkRh",
            "dGEuR2FtZUVudGl0eS5DbGllbnRNYXBQb3Rpb25JbmdyZWRpZW50LlNvdXJj",
            "ZSI3CgZTb3VyY2USCwoHVU5LTk9XThAAEgwKCFNUQU5EQVJEEAESEgoOU09D",
            "SUFMX0dST1dJTkcQAhrvAwoVQ2xpZW50RW52aXJvbm1lbnRUYWdzEk4KCWRh",
            "eV9uaWdodBgBIAEoDjI7LldVUHJvdG9zLkRhdGEuR2FtZUVudGl0eS5DbGll",
            "bnRFbnZpcm9ubWVudFRhZ3MuRGF5TmlnaHRUYWcSUAoKbW9vbl9waGFzZRgC",
            "IAEoDjI8LldVUHJvdG9zLkRhdGEuR2FtZUVudGl0eS5DbGllbnRFbnZpcm9u",
            "bWVudFRhZ3MuTW9vblBoYXNlVGFnIl4KC0RheU5pZ2h0VGFnEhcKE0VOVl9E",
            "QVlfTklHSFRfVU5TRVQQABILCgdFTlZfREFZEAESDQoJRU5WX05JR0hUEAIS",
            "DAoIRU5WX0RBV04QAxIMCghFTlZfRFVTSxAEItMBCgxNb29uUGhhc2VUYWcS",
            "GAoURU5WX01PT05fUEhBU0VfVU5TRVQQABILCgdFTlZfTkVXEAESFQoRRU5W",
            "X0ZJUlNUX1FVQVJURVIQAhIMCghFTlZfRlVMTBADEhUKEUVOVl9USElSRF9R",
            "VUFSVEVSEAQSFwoTRU5WX1dBWElOR19DUkVTQ0VOVBAFEhYKEkVOVl9XQVhJ",
            "TkdfR0lCQk9VUxAGEhYKEkVOVl9XQU5JTkdfR0lCQk9VUxAHEhcKE0VOVl9X",
            "QU5JTkdfQ1JFU0NFTlQQCEIGCgRUeXBlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.Client.ClientMapPoiReflection.Descriptor, global::WUProtos.Data.DisplayWeatherReflection.Descriptor, global::WUProtos.Data.GameplayWeatherReflection.Descriptor, global::WUProtos.Data.WeatherAlertSettingsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.GameEntity), global::WUProtos.Data.GameEntity.Parser, new[]{ "Poi", "Trace", "Landmark", "PotionIngredient", "Weather", "EnvironmentTags" }, new[]{ "Type" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.GameEntity.Types.ClientWeather), global::WUProtos.Data.GameEntity.Types.ClientWeather.Parser, new[]{ "S2CellId", "DisplayWeather", "GameplayWeather", "Alerts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.GameEntity.Types.ClientMapTrace), global::WUProtos.Data.GameEntity.Types.ClientMapTrace.Parser, new[]{ "EncounterGmtId", "Latitude", "Longitude", "EncounterTicket", "Source", "ExpiryTimeMs" }, null, new[]{ typeof(global::WUProtos.Data.GameEntity.Types.ClientMapTrace.Types.Source) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.GameEntity.Types.ClientMapLandmark), global::WUProtos.Data.GameEntity.Types.ClientMapLandmark.Parser, new[]{ "CollectionFamilyId", "PoiLatitude", "PoiLongitude", "BorderLatitude", "BorderLongitude" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.GameEntity.Types.ClientMapPotionIngredient), global::WUProtos.Data.GameEntity.Types.ClientMapPotionIngredient.Parser, new[]{ "IngredientGmtId", "Latitude", "Longitude", "Ticket", "ExpiryTimeMs", "Source" }, null, new[]{ typeof(global::WUProtos.Data.GameEntity.Types.ClientMapPotionIngredient.Types.Source) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.GameEntity.Types.ClientEnvironmentTags), global::WUProtos.Data.GameEntity.Types.ClientEnvironmentTags.Parser, new[]{ "DayNight", "MoonPhase" }, null, new[]{ typeof(global::WUProtos.Data.GameEntity.Types.ClientEnvironmentTags.Types.DayNightTag), typeof(global::WUProtos.Data.GameEntity.Types.ClientEnvironmentTags.Types.MoonPhaseTag) }, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GameEntity : pb::IMessage<GameEntity> {
    private static readonly pb::MessageParser<GameEntity> _parser = new pb::MessageParser<GameEntity>(() => new GameEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.GameEntityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameEntity(GameEntity other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.Poi:
          Poi = other.Poi.Clone();
          break;
        case TypeOneofCase.Trace:
          Trace = other.Trace.Clone();
          break;
        case TypeOneofCase.Landmark:
          Landmark = other.Landmark.Clone();
          break;
        case TypeOneofCase.PotionIngredient:
          PotionIngredient = other.PotionIngredient.Clone();
          break;
        case TypeOneofCase.Weather:
          Weather = other.Weather.Clone();
          break;
        case TypeOneofCase.EnvironmentTags:
          EnvironmentTags = other.EnvironmentTags.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameEntity Clone() {
      return new GameEntity(this);
    }

    /// <summary>Field number for the "poi" field.</summary>
    public const int PoiFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientMapPoi Poi {
      get { return typeCase_ == TypeOneofCase.Poi ? (global::WUProtos.Data.Client.ClientMapPoi) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Poi;
      }
    }

    /// <summary>Field number for the "trace" field.</summary>
    public const int TraceFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.GameEntity.Types.ClientMapTrace Trace {
      get { return typeCase_ == TypeOneofCase.Trace ? (global::WUProtos.Data.GameEntity.Types.ClientMapTrace) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Trace;
      }
    }

    /// <summary>Field number for the "landmark" field.</summary>
    public const int LandmarkFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.GameEntity.Types.ClientMapLandmark Landmark {
      get { return typeCase_ == TypeOneofCase.Landmark ? (global::WUProtos.Data.GameEntity.Types.ClientMapLandmark) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Landmark;
      }
    }

    /// <summary>Field number for the "potion_ingredient" field.</summary>
    public const int PotionIngredientFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.GameEntity.Types.ClientMapPotionIngredient PotionIngredient {
      get { return typeCase_ == TypeOneofCase.PotionIngredient ? (global::WUProtos.Data.GameEntity.Types.ClientMapPotionIngredient) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.PotionIngredient;
      }
    }

    /// <summary>Field number for the "weather" field.</summary>
    public const int WeatherFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.GameEntity.Types.ClientWeather Weather {
      get { return typeCase_ == TypeOneofCase.Weather ? (global::WUProtos.Data.GameEntity.Types.ClientWeather) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Weather;
      }
    }

    /// <summary>Field number for the "environment_tags" field.</summary>
    public const int EnvironmentTagsFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.GameEntity.Types.ClientEnvironmentTags EnvironmentTags {
      get { return typeCase_ == TypeOneofCase.EnvironmentTags ? (global::WUProtos.Data.GameEntity.Types.ClientEnvironmentTags) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.EnvironmentTags;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "Type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Poi = 1,
      Trace = 2,
      Landmark = 3,
      PotionIngredient = 4,
      Weather = 5,
      EnvironmentTags = 6,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Poi, other.Poi)) return false;
      if (!object.Equals(Trace, other.Trace)) return false;
      if (!object.Equals(Landmark, other.Landmark)) return false;
      if (!object.Equals(PotionIngredient, other.PotionIngredient)) return false;
      if (!object.Equals(Weather, other.Weather)) return false;
      if (!object.Equals(EnvironmentTags, other.EnvironmentTags)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.Poi) hash ^= Poi.GetHashCode();
      if (typeCase_ == TypeOneofCase.Trace) hash ^= Trace.GetHashCode();
      if (typeCase_ == TypeOneofCase.Landmark) hash ^= Landmark.GetHashCode();
      if (typeCase_ == TypeOneofCase.PotionIngredient) hash ^= PotionIngredient.GetHashCode();
      if (typeCase_ == TypeOneofCase.Weather) hash ^= Weather.GetHashCode();
      if (typeCase_ == TypeOneofCase.EnvironmentTags) hash ^= EnvironmentTags.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeCase_ == TypeOneofCase.Poi) {
        output.WriteRawTag(10);
        output.WriteMessage(Poi);
      }
      if (typeCase_ == TypeOneofCase.Trace) {
        output.WriteRawTag(18);
        output.WriteMessage(Trace);
      }
      if (typeCase_ == TypeOneofCase.Landmark) {
        output.WriteRawTag(26);
        output.WriteMessage(Landmark);
      }
      if (typeCase_ == TypeOneofCase.PotionIngredient) {
        output.WriteRawTag(34);
        output.WriteMessage(PotionIngredient);
      }
      if (typeCase_ == TypeOneofCase.Weather) {
        output.WriteRawTag(42);
        output.WriteMessage(Weather);
      }
      if (typeCase_ == TypeOneofCase.EnvironmentTags) {
        output.WriteRawTag(50);
        output.WriteMessage(EnvironmentTags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.Poi) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Poi);
      }
      if (typeCase_ == TypeOneofCase.Trace) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Trace);
      }
      if (typeCase_ == TypeOneofCase.Landmark) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Landmark);
      }
      if (typeCase_ == TypeOneofCase.PotionIngredient) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PotionIngredient);
      }
      if (typeCase_ == TypeOneofCase.Weather) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weather);
      }
      if (typeCase_ == TypeOneofCase.EnvironmentTags) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnvironmentTags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameEntity other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Poi:
          if (Poi == null) {
            Poi = new global::WUProtos.Data.Client.ClientMapPoi();
          }
          Poi.MergeFrom(other.Poi);
          break;
        case TypeOneofCase.Trace:
          if (Trace == null) {
            Trace = new global::WUProtos.Data.GameEntity.Types.ClientMapTrace();
          }
          Trace.MergeFrom(other.Trace);
          break;
        case TypeOneofCase.Landmark:
          if (Landmark == null) {
            Landmark = new global::WUProtos.Data.GameEntity.Types.ClientMapLandmark();
          }
          Landmark.MergeFrom(other.Landmark);
          break;
        case TypeOneofCase.PotionIngredient:
          if (PotionIngredient == null) {
            PotionIngredient = new global::WUProtos.Data.GameEntity.Types.ClientMapPotionIngredient();
          }
          PotionIngredient.MergeFrom(other.PotionIngredient);
          break;
        case TypeOneofCase.Weather:
          if (Weather == null) {
            Weather = new global::WUProtos.Data.GameEntity.Types.ClientWeather();
          }
          Weather.MergeFrom(other.Weather);
          break;
        case TypeOneofCase.EnvironmentTags:
          if (EnvironmentTags == null) {
            EnvironmentTags = new global::WUProtos.Data.GameEntity.Types.ClientEnvironmentTags();
          }
          EnvironmentTags.MergeFrom(other.EnvironmentTags);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::WUProtos.Data.Client.ClientMapPoi subBuilder = new global::WUProtos.Data.Client.ClientMapPoi();
            if (typeCase_ == TypeOneofCase.Poi) {
              subBuilder.MergeFrom(Poi);
            }
            input.ReadMessage(subBuilder);
            Poi = subBuilder;
            break;
          }
          case 18: {
            global::WUProtos.Data.GameEntity.Types.ClientMapTrace subBuilder = new global::WUProtos.Data.GameEntity.Types.ClientMapTrace();
            if (typeCase_ == TypeOneofCase.Trace) {
              subBuilder.MergeFrom(Trace);
            }
            input.ReadMessage(subBuilder);
            Trace = subBuilder;
            break;
          }
          case 26: {
            global::WUProtos.Data.GameEntity.Types.ClientMapLandmark subBuilder = new global::WUProtos.Data.GameEntity.Types.ClientMapLandmark();
            if (typeCase_ == TypeOneofCase.Landmark) {
              subBuilder.MergeFrom(Landmark);
            }
            input.ReadMessage(subBuilder);
            Landmark = subBuilder;
            break;
          }
          case 34: {
            global::WUProtos.Data.GameEntity.Types.ClientMapPotionIngredient subBuilder = new global::WUProtos.Data.GameEntity.Types.ClientMapPotionIngredient();
            if (typeCase_ == TypeOneofCase.PotionIngredient) {
              subBuilder.MergeFrom(PotionIngredient);
            }
            input.ReadMessage(subBuilder);
            PotionIngredient = subBuilder;
            break;
          }
          case 42: {
            global::WUProtos.Data.GameEntity.Types.ClientWeather subBuilder = new global::WUProtos.Data.GameEntity.Types.ClientWeather();
            if (typeCase_ == TypeOneofCase.Weather) {
              subBuilder.MergeFrom(Weather);
            }
            input.ReadMessage(subBuilder);
            Weather = subBuilder;
            break;
          }
          case 50: {
            global::WUProtos.Data.GameEntity.Types.ClientEnvironmentTags subBuilder = new global::WUProtos.Data.GameEntity.Types.ClientEnvironmentTags();
            if (typeCase_ == TypeOneofCase.EnvironmentTags) {
              subBuilder.MergeFrom(EnvironmentTags);
            }
            input.ReadMessage(subBuilder);
            EnvironmentTags = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GameEntity message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ClientWeather : pb::IMessage<ClientWeather> {
        private static readonly pb::MessageParser<ClientWeather> _parser = new pb::MessageParser<ClientWeather>(() => new ClientWeather());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientWeather> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.GameEntity.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientWeather() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientWeather(ClientWeather other) : this() {
          s2CellId_ = other.s2CellId_;
          displayWeather_ = other.displayWeather_ != null ? other.displayWeather_.Clone() : null;
          gameplayWeather_ = other.gameplayWeather_ != null ? other.gameplayWeather_.Clone() : null;
          alerts_ = other.alerts_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientWeather Clone() {
          return new ClientWeather(this);
        }

        /// <summary>Field number for the "s2_cell_id" field.</summary>
        public const int S2CellIdFieldNumber = 1;
        private long s2CellId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long S2CellId {
          get { return s2CellId_; }
          set {
            s2CellId_ = value;
          }
        }

        /// <summary>Field number for the "display_weather" field.</summary>
        public const int DisplayWeatherFieldNumber = 2;
        private global::WUProtos.Data.DisplayWeather displayWeather_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.DisplayWeather DisplayWeather {
          get { return displayWeather_; }
          set {
            displayWeather_ = value;
          }
        }

        /// <summary>Field number for the "gameplay_weather" field.</summary>
        public const int GameplayWeatherFieldNumber = 3;
        private global::WUProtos.Data.GameplayWeather gameplayWeather_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.GameplayWeather GameplayWeather {
          get { return gameplayWeather_; }
          set {
            gameplayWeather_ = value;
          }
        }

        /// <summary>Field number for the "alerts" field.</summary>
        public const int AlertsFieldNumber = 4;
        private static readonly pb::FieldCodec<global::WUProtos.Data.WeatherAlertSettings.Types.WeatherAlert> _repeated_alerts_codec
            = pb::FieldCodec.ForMessage(34, global::WUProtos.Data.WeatherAlertSettings.Types.WeatherAlert.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.WeatherAlertSettings.Types.WeatherAlert> alerts_ = new pbc::RepeatedField<global::WUProtos.Data.WeatherAlertSettings.Types.WeatherAlert>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.WeatherAlertSettings.Types.WeatherAlert> Alerts {
          get { return alerts_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientWeather);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientWeather other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (S2CellId != other.S2CellId) return false;
          if (!object.Equals(DisplayWeather, other.DisplayWeather)) return false;
          if (!object.Equals(GameplayWeather, other.GameplayWeather)) return false;
          if(!alerts_.Equals(other.alerts_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (S2CellId != 0L) hash ^= S2CellId.GetHashCode();
          if (displayWeather_ != null) hash ^= DisplayWeather.GetHashCode();
          if (gameplayWeather_ != null) hash ^= GameplayWeather.GetHashCode();
          hash ^= alerts_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (S2CellId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(S2CellId);
          }
          if (displayWeather_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(DisplayWeather);
          }
          if (gameplayWeather_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(GameplayWeather);
          }
          alerts_.WriteTo(output, _repeated_alerts_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (S2CellId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(S2CellId);
          }
          if (displayWeather_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisplayWeather);
          }
          if (gameplayWeather_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameplayWeather);
          }
          size += alerts_.CalculateSize(_repeated_alerts_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientWeather other) {
          if (other == null) {
            return;
          }
          if (other.S2CellId != 0L) {
            S2CellId = other.S2CellId;
          }
          if (other.displayWeather_ != null) {
            if (displayWeather_ == null) {
              DisplayWeather = new global::WUProtos.Data.DisplayWeather();
            }
            DisplayWeather.MergeFrom(other.DisplayWeather);
          }
          if (other.gameplayWeather_ != null) {
            if (gameplayWeather_ == null) {
              GameplayWeather = new global::WUProtos.Data.GameplayWeather();
            }
            GameplayWeather.MergeFrom(other.GameplayWeather);
          }
          alerts_.Add(other.alerts_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                S2CellId = input.ReadInt64();
                break;
              }
              case 18: {
                if (displayWeather_ == null) {
                  DisplayWeather = new global::WUProtos.Data.DisplayWeather();
                }
                input.ReadMessage(DisplayWeather);
                break;
              }
              case 26: {
                if (gameplayWeather_ == null) {
                  GameplayWeather = new global::WUProtos.Data.GameplayWeather();
                }
                input.ReadMessage(GameplayWeather);
                break;
              }
              case 34: {
                alerts_.AddEntriesFrom(input, _repeated_alerts_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientMapTrace : pb::IMessage<ClientMapTrace> {
        private static readonly pb::MessageParser<ClientMapTrace> _parser = new pb::MessageParser<ClientMapTrace>(() => new ClientMapTrace());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientMapTrace> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.GameEntity.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapTrace() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapTrace(ClientMapTrace other) : this() {
          encounterGmtId_ = other.encounterGmtId_;
          latitude_ = other.latitude_;
          longitude_ = other.longitude_;
          encounterTicket_ = other.encounterTicket_;
          source_ = other.source_;
          expiryTimeMs_ = other.expiryTimeMs_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapTrace Clone() {
          return new ClientMapTrace(this);
        }

        /// <summary>Field number for the "encounter_gmt_id" field.</summary>
        public const int EncounterGmtIdFieldNumber = 1;
        private string encounterGmtId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EncounterGmtId {
          get { return encounterGmtId_; }
          set {
            encounterGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "latitude" field.</summary>
        public const int LatitudeFieldNumber = 2;
        private double latitude_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Latitude {
          get { return latitude_; }
          set {
            latitude_ = value;
          }
        }

        /// <summary>Field number for the "longitude" field.</summary>
        public const int LongitudeFieldNumber = 3;
        private double longitude_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Longitude {
          get { return longitude_; }
          set {
            longitude_ = value;
          }
        }

        /// <summary>Field number for the "encounter_ticket" field.</summary>
        public const int EncounterTicketFieldNumber = 4;
        private pb::ByteString encounterTicket_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString EncounterTicket {
          get { return encounterTicket_; }
          set {
            encounterTicket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "source" field.</summary>
        public const int SourceFieldNumber = 5;
        private global::WUProtos.Data.GameEntity.Types.ClientMapTrace.Types.Source source_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.GameEntity.Types.ClientMapTrace.Types.Source Source {
          get { return source_; }
          set {
            source_ = value;
          }
        }

        /// <summary>Field number for the "expiry_time_ms" field.</summary>
        public const int ExpiryTimeMsFieldNumber = 6;
        private long expiryTimeMs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ExpiryTimeMs {
          get { return expiryTimeMs_; }
          set {
            expiryTimeMs_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientMapTrace);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientMapTrace other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (EncounterGmtId != other.EncounterGmtId) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
          if (EncounterTicket != other.EncounterTicket) return false;
          if (Source != other.Source) return false;
          if (ExpiryTimeMs != other.ExpiryTimeMs) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (EncounterGmtId.Length != 0) hash ^= EncounterGmtId.GetHashCode();
          if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
          if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
          if (EncounterTicket.Length != 0) hash ^= EncounterTicket.GetHashCode();
          if (Source != 0) hash ^= Source.GetHashCode();
          if (ExpiryTimeMs != 0L) hash ^= ExpiryTimeMs.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (EncounterGmtId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(EncounterGmtId);
          }
          if (Latitude != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(Latitude);
          }
          if (Longitude != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(Longitude);
          }
          if (EncounterTicket.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(EncounterTicket);
          }
          if (Source != 0) {
            output.WriteRawTag(40);
            output.WriteEnum((int) Source);
          }
          if (ExpiryTimeMs != 0L) {
            output.WriteRawTag(48);
            output.WriteInt64(ExpiryTimeMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (EncounterGmtId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterGmtId);
          }
          if (Latitude != 0D) {
            size += 1 + 8;
          }
          if (Longitude != 0D) {
            size += 1 + 8;
          }
          if (EncounterTicket.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncounterTicket);
          }
          if (Source != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Source);
          }
          if (ExpiryTimeMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpiryTimeMs);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientMapTrace other) {
          if (other == null) {
            return;
          }
          if (other.EncounterGmtId.Length != 0) {
            EncounterGmtId = other.EncounterGmtId;
          }
          if (other.Latitude != 0D) {
            Latitude = other.Latitude;
          }
          if (other.Longitude != 0D) {
            Longitude = other.Longitude;
          }
          if (other.EncounterTicket.Length != 0) {
            EncounterTicket = other.EncounterTicket;
          }
          if (other.Source != 0) {
            Source = other.Source;
          }
          if (other.ExpiryTimeMs != 0L) {
            ExpiryTimeMs = other.ExpiryTimeMs;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                EncounterGmtId = input.ReadString();
                break;
              }
              case 17: {
                Latitude = input.ReadDouble();
                break;
              }
              case 25: {
                Longitude = input.ReadDouble();
                break;
              }
              case 34: {
                EncounterTicket = input.ReadBytes();
                break;
              }
              case 40: {
                Source = (global::WUProtos.Data.GameEntity.Types.ClientMapTrace.Types.Source) input.ReadEnum();
                break;
              }
              case 48: {
                ExpiryTimeMs = input.ReadInt64();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ClientMapTrace message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum Source {
            [pbr::OriginalName("UNKNOWN")] Unknown = 0,
            [pbr::OriginalName("STANDARD")] Standard = 1,
            [pbr::OriginalName("DARK_DETECTOR")] DarkDetector = 2,
          }

        }
        #endregion

      }

      public sealed partial class ClientMapLandmark : pb::IMessage<ClientMapLandmark> {
        private static readonly pb::MessageParser<ClientMapLandmark> _parser = new pb::MessageParser<ClientMapLandmark>(() => new ClientMapLandmark());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientMapLandmark> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.GameEntity.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapLandmark() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapLandmark(ClientMapLandmark other) : this() {
          collectionFamilyId_ = other.collectionFamilyId_;
          poiLatitude_ = other.poiLatitude_;
          poiLongitude_ = other.poiLongitude_;
          borderLatitude_ = other.borderLatitude_.Clone();
          borderLongitude_ = other.borderLongitude_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapLandmark Clone() {
          return new ClientMapLandmark(this);
        }

        /// <summary>Field number for the "collection_family_id" field.</summary>
        public const int CollectionFamilyIdFieldNumber = 1;
        private string collectionFamilyId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CollectionFamilyId {
          get { return collectionFamilyId_; }
          set {
            collectionFamilyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "poi_latitude" field.</summary>
        public const int PoiLatitudeFieldNumber = 2;
        private double poiLatitude_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double PoiLatitude {
          get { return poiLatitude_; }
          set {
            poiLatitude_ = value;
          }
        }

        /// <summary>Field number for the "poi_longitude" field.</summary>
        public const int PoiLongitudeFieldNumber = 3;
        private double poiLongitude_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double PoiLongitude {
          get { return poiLongitude_; }
          set {
            poiLongitude_ = value;
          }
        }

        /// <summary>Field number for the "border_latitude" field.</summary>
        public const int BorderLatitudeFieldNumber = 4;
        private static readonly pb::FieldCodec<double> _repeated_borderLatitude_codec
            = pb::FieldCodec.ForDouble(34);
        private readonly pbc::RepeatedField<double> borderLatitude_ = new pbc::RepeatedField<double>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<double> BorderLatitude {
          get { return borderLatitude_; }
        }

        /// <summary>Field number for the "border_longitude" field.</summary>
        public const int BorderLongitudeFieldNumber = 5;
        private static readonly pb::FieldCodec<double> _repeated_borderLongitude_codec
            = pb::FieldCodec.ForDouble(42);
        private readonly pbc::RepeatedField<double> borderLongitude_ = new pbc::RepeatedField<double>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<double> BorderLongitude {
          get { return borderLongitude_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientMapLandmark);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientMapLandmark other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CollectionFamilyId != other.CollectionFamilyId) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PoiLatitude, other.PoiLatitude)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PoiLongitude, other.PoiLongitude)) return false;
          if(!borderLatitude_.Equals(other.borderLatitude_)) return false;
          if(!borderLongitude_.Equals(other.borderLongitude_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (CollectionFamilyId.Length != 0) hash ^= CollectionFamilyId.GetHashCode();
          if (PoiLatitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PoiLatitude);
          if (PoiLongitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PoiLongitude);
          hash ^= borderLatitude_.GetHashCode();
          hash ^= borderLongitude_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (CollectionFamilyId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(CollectionFamilyId);
          }
          if (PoiLatitude != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(PoiLatitude);
          }
          if (PoiLongitude != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(PoiLongitude);
          }
          borderLatitude_.WriteTo(output, _repeated_borderLatitude_codec);
          borderLongitude_.WriteTo(output, _repeated_borderLongitude_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (CollectionFamilyId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CollectionFamilyId);
          }
          if (PoiLatitude != 0D) {
            size += 1 + 8;
          }
          if (PoiLongitude != 0D) {
            size += 1 + 8;
          }
          size += borderLatitude_.CalculateSize(_repeated_borderLatitude_codec);
          size += borderLongitude_.CalculateSize(_repeated_borderLongitude_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientMapLandmark other) {
          if (other == null) {
            return;
          }
          if (other.CollectionFamilyId.Length != 0) {
            CollectionFamilyId = other.CollectionFamilyId;
          }
          if (other.PoiLatitude != 0D) {
            PoiLatitude = other.PoiLatitude;
          }
          if (other.PoiLongitude != 0D) {
            PoiLongitude = other.PoiLongitude;
          }
          borderLatitude_.Add(other.borderLatitude_);
          borderLongitude_.Add(other.borderLongitude_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                CollectionFamilyId = input.ReadString();
                break;
              }
              case 17: {
                PoiLatitude = input.ReadDouble();
                break;
              }
              case 25: {
                PoiLongitude = input.ReadDouble();
                break;
              }
              case 34:
              case 33: {
                borderLatitude_.AddEntriesFrom(input, _repeated_borderLatitude_codec);
                break;
              }
              case 42:
              case 41: {
                borderLongitude_.AddEntriesFrom(input, _repeated_borderLongitude_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientMapPotionIngredient : pb::IMessage<ClientMapPotionIngredient> {
        private static readonly pb::MessageParser<ClientMapPotionIngredient> _parser = new pb::MessageParser<ClientMapPotionIngredient>(() => new ClientMapPotionIngredient());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientMapPotionIngredient> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.GameEntity.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapPotionIngredient() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapPotionIngredient(ClientMapPotionIngredient other) : this() {
          ingredientGmtId_ = other.ingredientGmtId_;
          latitude_ = other.latitude_;
          longitude_ = other.longitude_;
          ticket_ = other.ticket_;
          expiryTimeMs_ = other.expiryTimeMs_;
          source_ = other.source_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapPotionIngredient Clone() {
          return new ClientMapPotionIngredient(this);
        }

        /// <summary>Field number for the "ingredient_gmt_id" field.</summary>
        public const int IngredientGmtIdFieldNumber = 1;
        private string ingredientGmtId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string IngredientGmtId {
          get { return ingredientGmtId_; }
          set {
            ingredientGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "latitude" field.</summary>
        public const int LatitudeFieldNumber = 2;
        private double latitude_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Latitude {
          get { return latitude_; }
          set {
            latitude_ = value;
          }
        }

        /// <summary>Field number for the "longitude" field.</summary>
        public const int LongitudeFieldNumber = 3;
        private double longitude_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Longitude {
          get { return longitude_; }
          set {
            longitude_ = value;
          }
        }

        /// <summary>Field number for the "ticket" field.</summary>
        public const int TicketFieldNumber = 4;
        private pb::ByteString ticket_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Ticket {
          get { return ticket_; }
          set {
            ticket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "expiry_time_ms" field.</summary>
        public const int ExpiryTimeMsFieldNumber = 5;
        private long expiryTimeMs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ExpiryTimeMs {
          get { return expiryTimeMs_; }
          set {
            expiryTimeMs_ = value;
          }
        }

        /// <summary>Field number for the "source" field.</summary>
        public const int SourceFieldNumber = 6;
        private global::WUProtos.Data.GameEntity.Types.ClientMapPotionIngredient.Types.Source source_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.GameEntity.Types.ClientMapPotionIngredient.Types.Source Source {
          get { return source_; }
          set {
            source_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientMapPotionIngredient);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientMapPotionIngredient other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (IngredientGmtId != other.IngredientGmtId) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
          if (Ticket != other.Ticket) return false;
          if (ExpiryTimeMs != other.ExpiryTimeMs) return false;
          if (Source != other.Source) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (IngredientGmtId.Length != 0) hash ^= IngredientGmtId.GetHashCode();
          if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
          if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
          if (Ticket.Length != 0) hash ^= Ticket.GetHashCode();
          if (ExpiryTimeMs != 0L) hash ^= ExpiryTimeMs.GetHashCode();
          if (Source != 0) hash ^= Source.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (IngredientGmtId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(IngredientGmtId);
          }
          if (Latitude != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(Latitude);
          }
          if (Longitude != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(Longitude);
          }
          if (Ticket.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(Ticket);
          }
          if (ExpiryTimeMs != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(ExpiryTimeMs);
          }
          if (Source != 0) {
            output.WriteRawTag(48);
            output.WriteEnum((int) Source);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (IngredientGmtId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(IngredientGmtId);
          }
          if (Latitude != 0D) {
            size += 1 + 8;
          }
          if (Longitude != 0D) {
            size += 1 + 8;
          }
          if (Ticket.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ticket);
          }
          if (ExpiryTimeMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpiryTimeMs);
          }
          if (Source != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Source);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientMapPotionIngredient other) {
          if (other == null) {
            return;
          }
          if (other.IngredientGmtId.Length != 0) {
            IngredientGmtId = other.IngredientGmtId;
          }
          if (other.Latitude != 0D) {
            Latitude = other.Latitude;
          }
          if (other.Longitude != 0D) {
            Longitude = other.Longitude;
          }
          if (other.Ticket.Length != 0) {
            Ticket = other.Ticket;
          }
          if (other.ExpiryTimeMs != 0L) {
            ExpiryTimeMs = other.ExpiryTimeMs;
          }
          if (other.Source != 0) {
            Source = other.Source;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                IngredientGmtId = input.ReadString();
                break;
              }
              case 17: {
                Latitude = input.ReadDouble();
                break;
              }
              case 25: {
                Longitude = input.ReadDouble();
                break;
              }
              case 34: {
                Ticket = input.ReadBytes();
                break;
              }
              case 40: {
                ExpiryTimeMs = input.ReadInt64();
                break;
              }
              case 48: {
                Source = (global::WUProtos.Data.GameEntity.Types.ClientMapPotionIngredient.Types.Source) input.ReadEnum();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ClientMapPotionIngredient message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum Source {
            [pbr::OriginalName("UNKNOWN")] Unknown = 0,
            [pbr::OriginalName("STANDARD")] Standard = 1,
            [pbr::OriginalName("SOCIAL_GROWING")] SocialGrowing = 2,
          }

        }
        #endregion

      }

      public sealed partial class ClientEnvironmentTags : pb::IMessage<ClientEnvironmentTags> {
        private static readonly pb::MessageParser<ClientEnvironmentTags> _parser = new pb::MessageParser<ClientEnvironmentTags>(() => new ClientEnvironmentTags());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientEnvironmentTags> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.GameEntity.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientEnvironmentTags() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientEnvironmentTags(ClientEnvironmentTags other) : this() {
          dayNight_ = other.dayNight_;
          moonPhase_ = other.moonPhase_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientEnvironmentTags Clone() {
          return new ClientEnvironmentTags(this);
        }

        /// <summary>Field number for the "day_night" field.</summary>
        public const int DayNightFieldNumber = 1;
        private global::WUProtos.Data.GameEntity.Types.ClientEnvironmentTags.Types.DayNightTag dayNight_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.GameEntity.Types.ClientEnvironmentTags.Types.DayNightTag DayNight {
          get { return dayNight_; }
          set {
            dayNight_ = value;
          }
        }

        /// <summary>Field number for the "moon_phase" field.</summary>
        public const int MoonPhaseFieldNumber = 2;
        private global::WUProtos.Data.GameEntity.Types.ClientEnvironmentTags.Types.MoonPhaseTag moonPhase_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.GameEntity.Types.ClientEnvironmentTags.Types.MoonPhaseTag MoonPhase {
          get { return moonPhase_; }
          set {
            moonPhase_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientEnvironmentTags);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientEnvironmentTags other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DayNight != other.DayNight) return false;
          if (MoonPhase != other.MoonPhase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DayNight != 0) hash ^= DayNight.GetHashCode();
          if (MoonPhase != 0) hash ^= MoonPhase.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (DayNight != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) DayNight);
          }
          if (MoonPhase != 0) {
            output.WriteRawTag(16);
            output.WriteEnum((int) MoonPhase);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DayNight != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DayNight);
          }
          if (MoonPhase != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MoonPhase);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientEnvironmentTags other) {
          if (other == null) {
            return;
          }
          if (other.DayNight != 0) {
            DayNight = other.DayNight;
          }
          if (other.MoonPhase != 0) {
            MoonPhase = other.MoonPhase;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                DayNight = (global::WUProtos.Data.GameEntity.Types.ClientEnvironmentTags.Types.DayNightTag) input.ReadEnum();
                break;
              }
              case 16: {
                MoonPhase = (global::WUProtos.Data.GameEntity.Types.ClientEnvironmentTags.Types.MoonPhaseTag) input.ReadEnum();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ClientEnvironmentTags message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum DayNightTag {
            [pbr::OriginalName("ENV_DAY_NIGHT_UNSET")] EnvDayNightUnset = 0,
            [pbr::OriginalName("ENV_DAY")] EnvDay = 1,
            [pbr::OriginalName("ENV_NIGHT")] EnvNight = 2,
            [pbr::OriginalName("ENV_DAWN")] EnvDawn = 3,
            [pbr::OriginalName("ENV_DUSK")] EnvDusk = 4,
          }

          public enum MoonPhaseTag {
            [pbr::OriginalName("ENV_MOON_PHASE_UNSET")] EnvMoonPhaseUnset = 0,
            [pbr::OriginalName("ENV_NEW")] EnvNew = 1,
            [pbr::OriginalName("ENV_FIRST_QUARTER")] EnvFirstQuarter = 2,
            [pbr::OriginalName("ENV_FULL")] EnvFull = 3,
            [pbr::OriginalName("ENV_THIRD_QUARTER")] EnvThirdQuarter = 4,
            [pbr::OriginalName("ENV_WAXING_CRESCENT")] EnvWaxingCrescent = 5,
            [pbr::OriginalName("ENV_WAXING_GIBBOUS")] EnvWaxingGibbous = 6,
            [pbr::OriginalName("ENV_WANING_GIBBOUS")] EnvWaningGibbous = 7,
            [pbr::OriginalName("ENV_WANING_CRESCENT")] EnvWaningCrescent = 8,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
