// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Networking/Platform/Requests/PingMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Networking.Platform.Requests {

  /// <summary>Holder for reflection information generated from WUProtos/Networking/Platform/Requests/PingMessage.proto</summary>
  public static partial class PingMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Networking/Platform/Requests/PingMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PingMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjdXVVByb3Rvcy9OZXR3b3JraW5nL1BsYXRmb3JtL1JlcXVlc3RzL1BpbmdN",
            "ZXNzYWdlLnByb3RvEiVXVVByb3Rvcy5OZXR3b3JraW5nLlBsYXRmb3JtLlJl",
            "cXVlc3RzInQKC1BpbmdNZXNzYWdlEhsKE3Jlc3BvbnNlX3NpemVfYnl0ZXMY",
            "ASABKAUSHAoUcmFuZG9tX3JlcXVlc3RfYnl0ZXMYAiABKAkSKgoidXNlX2Nh",
            "Y2hlX2Zvcl9yYW5kb21fcmVxdWVzdF9ieXRlcxgDIAEoCGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Platform.Requests.PingMessage), global::WUProtos.Networking.Platform.Requests.PingMessage.Parser, new[]{ "ResponseSizeBytes", "RandomRequestBytes", "UseCacheForRandomRequestBytes" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PingMessage : pb::IMessage<PingMessage> {
    private static readonly pb::MessageParser<PingMessage> _parser = new pb::MessageParser<PingMessage>(() => new PingMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PingMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Networking.Platform.Requests.PingMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingMessage(PingMessage other) : this() {
      responseSizeBytes_ = other.responseSizeBytes_;
      randomRequestBytes_ = other.randomRequestBytes_;
      useCacheForRandomRequestBytes_ = other.useCacheForRandomRequestBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingMessage Clone() {
      return new PingMessage(this);
    }

    /// <summary>Field number for the "response_size_bytes" field.</summary>
    public const int ResponseSizeBytesFieldNumber = 1;
    private int responseSizeBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResponseSizeBytes {
      get { return responseSizeBytes_; }
      set {
        responseSizeBytes_ = value;
      }
    }

    /// <summary>Field number for the "random_request_bytes" field.</summary>
    public const int RandomRequestBytesFieldNumber = 2;
    private string randomRequestBytes_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RandomRequestBytes {
      get { return randomRequestBytes_; }
      set {
        randomRequestBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_cache_for_random_request_bytes" field.</summary>
    public const int UseCacheForRandomRequestBytesFieldNumber = 3;
    private bool useCacheForRandomRequestBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseCacheForRandomRequestBytes {
      get { return useCacheForRandomRequestBytes_; }
      set {
        useCacheForRandomRequestBytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PingMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PingMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResponseSizeBytes != other.ResponseSizeBytes) return false;
      if (RandomRequestBytes != other.RandomRequestBytes) return false;
      if (UseCacheForRandomRequestBytes != other.UseCacheForRandomRequestBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResponseSizeBytes != 0) hash ^= ResponseSizeBytes.GetHashCode();
      if (RandomRequestBytes.Length != 0) hash ^= RandomRequestBytes.GetHashCode();
      if (UseCacheForRandomRequestBytes != false) hash ^= UseCacheForRandomRequestBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResponseSizeBytes != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ResponseSizeBytes);
      }
      if (RandomRequestBytes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RandomRequestBytes);
      }
      if (UseCacheForRandomRequestBytes != false) {
        output.WriteRawTag(24);
        output.WriteBool(UseCacheForRandomRequestBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResponseSizeBytes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResponseSizeBytes);
      }
      if (RandomRequestBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RandomRequestBytes);
      }
      if (UseCacheForRandomRequestBytes != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PingMessage other) {
      if (other == null) {
        return;
      }
      if (other.ResponseSizeBytes != 0) {
        ResponseSizeBytes = other.ResponseSizeBytes;
      }
      if (other.RandomRequestBytes.Length != 0) {
        RandomRequestBytes = other.RandomRequestBytes;
      }
      if (other.UseCacheForRandomRequestBytes != false) {
        UseCacheForRandomRequestBytes = other.UseCacheForRandomRequestBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ResponseSizeBytes = input.ReadInt32();
            break;
          }
          case 18: {
            RandomRequestBytes = input.ReadString();
            break;
          }
          case 24: {
            UseCacheForRandomRequestBytes = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
