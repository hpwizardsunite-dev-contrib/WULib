// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientMapPoi.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientMapPoi.proto</summary>
  public static partial class ClientMapPoiReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientMapPoi.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientMapPoiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidXVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRNYXBQb2kucHJvdG8SFFdV",
            "UHJvdG9zLkRhdGEuQ2xpZW50GiVXVVByb3Rvcy9FbnVtcy9Qb2lBY2Nlc3Np",
            "YmlsaXR5LnByb3RvGjZXVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnREYXJr",
            "RGV0ZWN0b3JBbXBsaWZpZXIucHJvdG8iowsKDENsaWVudE1hcFBvaRIKCgJp",
            "ZBgBIAEoCRIMCgRuYW1lGAIgASgJEhAKCGxhdGl0dWRlGAMgASgBEhEKCWxv",
            "bmdpdHVkZRgEIAEoARITCgtkZXNjcmlwdGlvbhgFIAEoCRJGCgdvdXRwb3N0",
            "GAYgASgLMjMuV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50TWFwUG9pLkNs",
            "aWVudE1hcE91dHBvc3RIABJICghmb3J0cmVzcxgHIAEoCzI0LldVUHJvdG9z",
            "LkRhdGEuQ2xpZW50LkNsaWVudE1hcFBvaS5DbGllbnRNYXBGb3J0cmVzc0gA",
            "EkwKCmdyZWVuaG91c2UYCCABKAsyNi5XVVByb3Rvcy5EYXRhLkNsaWVudC5D",
            "bGllbnRNYXBQb2kuQ2xpZW50TWFwR3JlZW5ob3VzZUgAEjsKEXBvaV9hY2Nl",
            "c3NpYmlsaXR5GAkgASgOMiAuV1VQcm90b3MuRW51bXMuUG9pQWNjZXNzaWJp",
            "bGl0eRI7CgdwYXJ0bmVyGAogASgLMiouV1VQcm90b3MuRGF0YS5DbGllbnQu",
            "Q2xpZW50TWFwUG9pLlBhcnRuZXISHQoVc2hvd19wYXNzY29kZV9zY2FubmVy",
            "GAsgASgIGp8BChBDbGllbnRNYXBPdXRwb3N0EhYKDm5leHRfbG9vdF90aW1l",
            "GAEgASgDElIKF2RhcmtfZGV0ZWN0b3JfYW1wbGlmaWVyGAIgASgLMjEuV1VQ",
            "cm90b3MuRGF0YS5DbGllbnQuQ2xpZW50RGFya0RldGVjdG9yQW1wbGlmaWVy",
            "Eh8KF291dHBvc3RfdGVtcGxhdGVfZ210X2lkGAMgASgJGt4CChNDbGllbnRN",
            "YXBHcmVlbmhvdXNlEhYKDm5leHRfbG9vdF90aW1lGAEgASgDEiIKGmdyZWVu",
            "aG91c2VfdGVtcGxhdGVfZ210X2lkGAIgASgJElsKCm5vcm1hbF9wb3QYAyAD",
            "KAsyRy5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRNYXBQb2kuQ2xpZW50",
            "TWFwR3JlZW5ob3VzZS5DbGllbnRQb3RTdW1tYXJ5ElsKCnJlbnRhbF9wb3QY",
            "BCADKAsyRy5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRNYXBQb2kuQ2xp",
            "ZW50TWFwR3JlZW5ob3VzZS5DbGllbnRQb3RTdW1tYXJ5GlEKEENsaWVudFBv",
            "dFN1bW1hcnkSGQoRaW5ncmVkaWVudF9nbXRfaWQYASABKAkSIgoaZ3Jvd2lu",
            "Z19jb21wbGV0aW9uX3RpbWVfbXMYAiABKAMaqAEKEUNsaWVudE1hcEZvcnRy",
            "ZXNzEiAKGGZvcnRyZXNzX3RlbXBsYXRlX2dtdF9pZBgBIAEoCRIWCg5vd25p",
            "bmdfdGVhbV9pZBgCIAEoCRIXCg9lbGVjdG9yYWxfdm90ZXMYAyABKAMSEQoJ",
            "c2Vhc29uX2lkGAQgASgJEhEKCXJlZ2lvbl9pZBgFIAEoCRIaChJ3Y19hY3Rp",
            "dmVfdW50aWxfbXMYBiABKAMajwIKB1BhcnRuZXISCgoCaWQYASABKAkSEgoK",
            "cG9wdXBfZGVzYxgCIAEoCRIRCgloeXBlcmxpbmsYAyABKAkSTAoMcGFydG5l",
            "cl90eXBlGAQgASgOMjYuV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50TWFw",
            "UG9pLlBhcnRuZXIuUGFydG5lclR5cGUiggEKC1BhcnRuZXJUeXBlEhwKGFBB",
            "UlRORVJfVFlQRV9VTlNQRUNJRklFRBAAEhgKFFBBUlRORVJfVFlQRV9SRUdV",
            "TEFSEAESGgoWUEFSVE5FUl9UWVBFX0ZSQU5DSElTRRACEh8KG1BBUlRORVJf",
            "VFlQRV9QU0VVRE9fT1JHQU5JQxADQgYKBFR5cGViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Enums.PoiAccessibilityReflection.Descriptor, global::WUProtos.Data.Client.ClientDarkDetectorAmplifierReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientMapPoi), global::WUProtos.Data.Client.ClientMapPoi.Parser, new[]{ "Id", "Name", "Latitude", "Longitude", "Description", "Outpost", "Fortress", "Greenhouse", "PoiAccessibility", "Partner", "ShowPasscodeScanner" }, new[]{ "Type" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapOutpost), global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapOutpost.Parser, new[]{ "NextLootTime", "DarkDetectorAmplifier", "OutpostTemplateGmtId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse), global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse.Parser, new[]{ "NextLootTime", "GreenhouseTemplateGmtId", "NormalPot", "RentalPot" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse.Types.ClientPotSummary), global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse.Types.ClientPotSummary.Parser, new[]{ "IngredientGmtId", "GrowingCompletionTimeMs" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapFortress), global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapFortress.Parser, new[]{ "FortressTemplateGmtId", "OwningTeamId", "ElectoralVotes", "SeasonId", "RegionId", "WcActiveUntilMs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientMapPoi.Types.Partner), global::WUProtos.Data.Client.ClientMapPoi.Types.Partner.Parser, new[]{ "Id", "PopupDesc", "Hyperlink", "PartnerType" }, null, new[]{ typeof(global::WUProtos.Data.Client.ClientMapPoi.Types.Partner.Types.PartnerType) }, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientMapPoi : pb::IMessage<ClientMapPoi> {
    private static readonly pb::MessageParser<ClientMapPoi> _parser = new pb::MessageParser<ClientMapPoi>(() => new ClientMapPoi());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientMapPoi> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientMapPoiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMapPoi() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMapPoi(ClientMapPoi other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      description_ = other.description_;
      poiAccessibility_ = other.poiAccessibility_;
      partner_ = other.partner_ != null ? other.partner_.Clone() : null;
      showPasscodeScanner_ = other.showPasscodeScanner_;
      switch (other.TypeCase) {
        case TypeOneofCase.Outpost:
          Outpost = other.Outpost.Clone();
          break;
        case TypeOneofCase.Fortress:
          Fortress = other.Fortress.Clone();
          break;
        case TypeOneofCase.Greenhouse:
          Greenhouse = other.Greenhouse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMapPoi Clone() {
      return new ClientMapPoi(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 3;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 4;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "outpost" field.</summary>
    public const int OutpostFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapOutpost Outpost {
      get { return typeCase_ == TypeOneofCase.Outpost ? (global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapOutpost) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Outpost;
      }
    }

    /// <summary>Field number for the "fortress" field.</summary>
    public const int FortressFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapFortress Fortress {
      get { return typeCase_ == TypeOneofCase.Fortress ? (global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapFortress) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Fortress;
      }
    }

    /// <summary>Field number for the "greenhouse" field.</summary>
    public const int GreenhouseFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse Greenhouse {
      get { return typeCase_ == TypeOneofCase.Greenhouse ? (global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Greenhouse;
      }
    }

    /// <summary>Field number for the "poi_accessibility" field.</summary>
    public const int PoiAccessibilityFieldNumber = 9;
    private global::WUProtos.Enums.PoiAccessibility poiAccessibility_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Enums.PoiAccessibility PoiAccessibility {
      get { return poiAccessibility_; }
      set {
        poiAccessibility_ = value;
      }
    }

    /// <summary>Field number for the "partner" field.</summary>
    public const int PartnerFieldNumber = 10;
    private global::WUProtos.Data.Client.ClientMapPoi.Types.Partner partner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientMapPoi.Types.Partner Partner {
      get { return partner_; }
      set {
        partner_ = value;
      }
    }

    /// <summary>Field number for the "show_passcode_scanner" field.</summary>
    public const int ShowPasscodeScannerFieldNumber = 11;
    private bool showPasscodeScanner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowPasscodeScanner {
      get { return showPasscodeScanner_; }
      set {
        showPasscodeScanner_ = value;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "Type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Outpost = 6,
      Fortress = 7,
      Greenhouse = 8,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientMapPoi);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientMapPoi other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Outpost, other.Outpost)) return false;
      if (!object.Equals(Fortress, other.Fortress)) return false;
      if (!object.Equals(Greenhouse, other.Greenhouse)) return false;
      if (PoiAccessibility != other.PoiAccessibility) return false;
      if (!object.Equals(Partner, other.Partner)) return false;
      if (ShowPasscodeScanner != other.ShowPasscodeScanner) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (typeCase_ == TypeOneofCase.Outpost) hash ^= Outpost.GetHashCode();
      if (typeCase_ == TypeOneofCase.Fortress) hash ^= Fortress.GetHashCode();
      if (typeCase_ == TypeOneofCase.Greenhouse) hash ^= Greenhouse.GetHashCode();
      if (PoiAccessibility != 0) hash ^= PoiAccessibility.GetHashCode();
      if (partner_ != null) hash ^= Partner.GetHashCode();
      if (ShowPasscodeScanner != false) hash ^= ShowPasscodeScanner.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Latitude != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Longitude);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (typeCase_ == TypeOneofCase.Outpost) {
        output.WriteRawTag(50);
        output.WriteMessage(Outpost);
      }
      if (typeCase_ == TypeOneofCase.Fortress) {
        output.WriteRawTag(58);
        output.WriteMessage(Fortress);
      }
      if (typeCase_ == TypeOneofCase.Greenhouse) {
        output.WriteRawTag(66);
        output.WriteMessage(Greenhouse);
      }
      if (PoiAccessibility != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) PoiAccessibility);
      }
      if (partner_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Partner);
      }
      if (ShowPasscodeScanner != false) {
        output.WriteRawTag(88);
        output.WriteBool(ShowPasscodeScanner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (typeCase_ == TypeOneofCase.Outpost) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Outpost);
      }
      if (typeCase_ == TypeOneofCase.Fortress) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fortress);
      }
      if (typeCase_ == TypeOneofCase.Greenhouse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Greenhouse);
      }
      if (PoiAccessibility != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PoiAccessibility);
      }
      if (partner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Partner);
      }
      if (ShowPasscodeScanner != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientMapPoi other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.PoiAccessibility != 0) {
        PoiAccessibility = other.PoiAccessibility;
      }
      if (other.partner_ != null) {
        if (partner_ == null) {
          Partner = new global::WUProtos.Data.Client.ClientMapPoi.Types.Partner();
        }
        Partner.MergeFrom(other.Partner);
      }
      if (other.ShowPasscodeScanner != false) {
        ShowPasscodeScanner = other.ShowPasscodeScanner;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Outpost:
          if (Outpost == null) {
            Outpost = new global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapOutpost();
          }
          Outpost.MergeFrom(other.Outpost);
          break;
        case TypeOneofCase.Fortress:
          if (Fortress == null) {
            Fortress = new global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapFortress();
          }
          Fortress.MergeFrom(other.Fortress);
          break;
        case TypeOneofCase.Greenhouse:
          if (Greenhouse == null) {
            Greenhouse = new global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse();
          }
          Greenhouse.MergeFrom(other.Greenhouse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 25: {
            Latitude = input.ReadDouble();
            break;
          }
          case 33: {
            Longitude = input.ReadDouble();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapOutpost subBuilder = new global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapOutpost();
            if (typeCase_ == TypeOneofCase.Outpost) {
              subBuilder.MergeFrom(Outpost);
            }
            input.ReadMessage(subBuilder);
            Outpost = subBuilder;
            break;
          }
          case 58: {
            global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapFortress subBuilder = new global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapFortress();
            if (typeCase_ == TypeOneofCase.Fortress) {
              subBuilder.MergeFrom(Fortress);
            }
            input.ReadMessage(subBuilder);
            Fortress = subBuilder;
            break;
          }
          case 66: {
            global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse subBuilder = new global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse();
            if (typeCase_ == TypeOneofCase.Greenhouse) {
              subBuilder.MergeFrom(Greenhouse);
            }
            input.ReadMessage(subBuilder);
            Greenhouse = subBuilder;
            break;
          }
          case 72: {
            PoiAccessibility = (global::WUProtos.Enums.PoiAccessibility) input.ReadEnum();
            break;
          }
          case 82: {
            if (partner_ == null) {
              Partner = new global::WUProtos.Data.Client.ClientMapPoi.Types.Partner();
            }
            input.ReadMessage(Partner);
            break;
          }
          case 88: {
            ShowPasscodeScanner = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ClientMapPoi message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ClientMapOutpost : pb::IMessage<ClientMapOutpost> {
        private static readonly pb::MessageParser<ClientMapOutpost> _parser = new pb::MessageParser<ClientMapOutpost>(() => new ClientMapOutpost());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientMapOutpost> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientMapPoi.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapOutpost() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapOutpost(ClientMapOutpost other) : this() {
          nextLootTime_ = other.nextLootTime_;
          darkDetectorAmplifier_ = other.darkDetectorAmplifier_ != null ? other.darkDetectorAmplifier_.Clone() : null;
          outpostTemplateGmtId_ = other.outpostTemplateGmtId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapOutpost Clone() {
          return new ClientMapOutpost(this);
        }

        /// <summary>Field number for the "next_loot_time" field.</summary>
        public const int NextLootTimeFieldNumber = 1;
        private long nextLootTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long NextLootTime {
          get { return nextLootTime_; }
          set {
            nextLootTime_ = value;
          }
        }

        /// <summary>Field number for the "dark_detector_amplifier" field.</summary>
        public const int DarkDetectorAmplifierFieldNumber = 2;
        private global::WUProtos.Data.Client.ClientDarkDetectorAmplifier darkDetectorAmplifier_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Client.ClientDarkDetectorAmplifier DarkDetectorAmplifier {
          get { return darkDetectorAmplifier_; }
          set {
            darkDetectorAmplifier_ = value;
          }
        }

        /// <summary>Field number for the "outpost_template_gmt_id" field.</summary>
        public const int OutpostTemplateGmtIdFieldNumber = 3;
        private string outpostTemplateGmtId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OutpostTemplateGmtId {
          get { return outpostTemplateGmtId_; }
          set {
            outpostTemplateGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientMapOutpost);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientMapOutpost other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NextLootTime != other.NextLootTime) return false;
          if (!object.Equals(DarkDetectorAmplifier, other.DarkDetectorAmplifier)) return false;
          if (OutpostTemplateGmtId != other.OutpostTemplateGmtId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (NextLootTime != 0L) hash ^= NextLootTime.GetHashCode();
          if (darkDetectorAmplifier_ != null) hash ^= DarkDetectorAmplifier.GetHashCode();
          if (OutpostTemplateGmtId.Length != 0) hash ^= OutpostTemplateGmtId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (NextLootTime != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(NextLootTime);
          }
          if (darkDetectorAmplifier_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(DarkDetectorAmplifier);
          }
          if (OutpostTemplateGmtId.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(OutpostTemplateGmtId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (NextLootTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextLootTime);
          }
          if (darkDetectorAmplifier_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DarkDetectorAmplifier);
          }
          if (OutpostTemplateGmtId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OutpostTemplateGmtId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientMapOutpost other) {
          if (other == null) {
            return;
          }
          if (other.NextLootTime != 0L) {
            NextLootTime = other.NextLootTime;
          }
          if (other.darkDetectorAmplifier_ != null) {
            if (darkDetectorAmplifier_ == null) {
              DarkDetectorAmplifier = new global::WUProtos.Data.Client.ClientDarkDetectorAmplifier();
            }
            DarkDetectorAmplifier.MergeFrom(other.DarkDetectorAmplifier);
          }
          if (other.OutpostTemplateGmtId.Length != 0) {
            OutpostTemplateGmtId = other.OutpostTemplateGmtId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                NextLootTime = input.ReadInt64();
                break;
              }
              case 18: {
                if (darkDetectorAmplifier_ == null) {
                  DarkDetectorAmplifier = new global::WUProtos.Data.Client.ClientDarkDetectorAmplifier();
                }
                input.ReadMessage(DarkDetectorAmplifier);
                break;
              }
              case 26: {
                OutpostTemplateGmtId = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientMapGreenhouse : pb::IMessage<ClientMapGreenhouse> {
        private static readonly pb::MessageParser<ClientMapGreenhouse> _parser = new pb::MessageParser<ClientMapGreenhouse>(() => new ClientMapGreenhouse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientMapGreenhouse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientMapPoi.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapGreenhouse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapGreenhouse(ClientMapGreenhouse other) : this() {
          nextLootTime_ = other.nextLootTime_;
          greenhouseTemplateGmtId_ = other.greenhouseTemplateGmtId_;
          normalPot_ = other.normalPot_.Clone();
          rentalPot_ = other.rentalPot_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapGreenhouse Clone() {
          return new ClientMapGreenhouse(this);
        }

        /// <summary>Field number for the "next_loot_time" field.</summary>
        public const int NextLootTimeFieldNumber = 1;
        private long nextLootTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long NextLootTime {
          get { return nextLootTime_; }
          set {
            nextLootTime_ = value;
          }
        }

        /// <summary>Field number for the "greenhouse_template_gmt_id" field.</summary>
        public const int GreenhouseTemplateGmtIdFieldNumber = 2;
        private string greenhouseTemplateGmtId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string GreenhouseTemplateGmtId {
          get { return greenhouseTemplateGmtId_; }
          set {
            greenhouseTemplateGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "normal_pot" field.</summary>
        public const int NormalPotFieldNumber = 3;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse.Types.ClientPotSummary> _repeated_normalPot_codec
            = pb::FieldCodec.ForMessage(26, global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse.Types.ClientPotSummary.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse.Types.ClientPotSummary> normalPot_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse.Types.ClientPotSummary>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse.Types.ClientPotSummary> NormalPot {
          get { return normalPot_; }
        }

        /// <summary>Field number for the "rental_pot" field.</summary>
        public const int RentalPotFieldNumber = 4;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse.Types.ClientPotSummary> _repeated_rentalPot_codec
            = pb::FieldCodec.ForMessage(34, global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse.Types.ClientPotSummary.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse.Types.ClientPotSummary> rentalPot_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse.Types.ClientPotSummary>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse.Types.ClientPotSummary> RentalPot {
          get { return rentalPot_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientMapGreenhouse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientMapGreenhouse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NextLootTime != other.NextLootTime) return false;
          if (GreenhouseTemplateGmtId != other.GreenhouseTemplateGmtId) return false;
          if(!normalPot_.Equals(other.normalPot_)) return false;
          if(!rentalPot_.Equals(other.rentalPot_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (NextLootTime != 0L) hash ^= NextLootTime.GetHashCode();
          if (GreenhouseTemplateGmtId.Length != 0) hash ^= GreenhouseTemplateGmtId.GetHashCode();
          hash ^= normalPot_.GetHashCode();
          hash ^= rentalPot_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (NextLootTime != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(NextLootTime);
          }
          if (GreenhouseTemplateGmtId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(GreenhouseTemplateGmtId);
          }
          normalPot_.WriteTo(output, _repeated_normalPot_codec);
          rentalPot_.WriteTo(output, _repeated_rentalPot_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (NextLootTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextLootTime);
          }
          if (GreenhouseTemplateGmtId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(GreenhouseTemplateGmtId);
          }
          size += normalPot_.CalculateSize(_repeated_normalPot_codec);
          size += rentalPot_.CalculateSize(_repeated_rentalPot_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientMapGreenhouse other) {
          if (other == null) {
            return;
          }
          if (other.NextLootTime != 0L) {
            NextLootTime = other.NextLootTime;
          }
          if (other.GreenhouseTemplateGmtId.Length != 0) {
            GreenhouseTemplateGmtId = other.GreenhouseTemplateGmtId;
          }
          normalPot_.Add(other.normalPot_);
          rentalPot_.Add(other.rentalPot_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                NextLootTime = input.ReadInt64();
                break;
              }
              case 18: {
                GreenhouseTemplateGmtId = input.ReadString();
                break;
              }
              case 26: {
                normalPot_.AddEntriesFrom(input, _repeated_normalPot_codec);
                break;
              }
              case 34: {
                rentalPot_.AddEntriesFrom(input, _repeated_rentalPot_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ClientMapGreenhouse message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class ClientPotSummary : pb::IMessage<ClientPotSummary> {
            private static readonly pb::MessageParser<ClientPotSummary> _parser = new pb::MessageParser<ClientPotSummary>(() => new ClientPotSummary());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ClientPotSummary> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientMapPoi.Types.ClientMapGreenhouse.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientPotSummary() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientPotSummary(ClientPotSummary other) : this() {
              ingredientGmtId_ = other.ingredientGmtId_;
              growingCompletionTimeMs_ = other.growingCompletionTimeMs_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientPotSummary Clone() {
              return new ClientPotSummary(this);
            }

            /// <summary>Field number for the "ingredient_gmt_id" field.</summary>
            public const int IngredientGmtIdFieldNumber = 1;
            private string ingredientGmtId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string IngredientGmtId {
              get { return ingredientGmtId_; }
              set {
                ingredientGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "growing_completion_time_ms" field.</summary>
            public const int GrowingCompletionTimeMsFieldNumber = 2;
            private long growingCompletionTimeMs_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long GrowingCompletionTimeMs {
              get { return growingCompletionTimeMs_; }
              set {
                growingCompletionTimeMs_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ClientPotSummary);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ClientPotSummary other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (IngredientGmtId != other.IngredientGmtId) return false;
              if (GrowingCompletionTimeMs != other.GrowingCompletionTimeMs) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (IngredientGmtId.Length != 0) hash ^= IngredientGmtId.GetHashCode();
              if (GrowingCompletionTimeMs != 0L) hash ^= GrowingCompletionTimeMs.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (IngredientGmtId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(IngredientGmtId);
              }
              if (GrowingCompletionTimeMs != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(GrowingCompletionTimeMs);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (IngredientGmtId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(IngredientGmtId);
              }
              if (GrowingCompletionTimeMs != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(GrowingCompletionTimeMs);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ClientPotSummary other) {
              if (other == null) {
                return;
              }
              if (other.IngredientGmtId.Length != 0) {
                IngredientGmtId = other.IngredientGmtId;
              }
              if (other.GrowingCompletionTimeMs != 0L) {
                GrowingCompletionTimeMs = other.GrowingCompletionTimeMs;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    IngredientGmtId = input.ReadString();
                    break;
                  }
                  case 16: {
                    GrowingCompletionTimeMs = input.ReadInt64();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class ClientMapFortress : pb::IMessage<ClientMapFortress> {
        private static readonly pb::MessageParser<ClientMapFortress> _parser = new pb::MessageParser<ClientMapFortress>(() => new ClientMapFortress());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientMapFortress> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientMapPoi.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapFortress() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapFortress(ClientMapFortress other) : this() {
          fortressTemplateGmtId_ = other.fortressTemplateGmtId_;
          owningTeamId_ = other.owningTeamId_;
          electoralVotes_ = other.electoralVotes_;
          seasonId_ = other.seasonId_;
          regionId_ = other.regionId_;
          wcActiveUntilMs_ = other.wcActiveUntilMs_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapFortress Clone() {
          return new ClientMapFortress(this);
        }

        /// <summary>Field number for the "fortress_template_gmt_id" field.</summary>
        public const int FortressTemplateGmtIdFieldNumber = 1;
        private string fortressTemplateGmtId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FortressTemplateGmtId {
          get { return fortressTemplateGmtId_; }
          set {
            fortressTemplateGmtId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "owning_team_id" field.</summary>
        public const int OwningTeamIdFieldNumber = 2;
        private string owningTeamId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OwningTeamId {
          get { return owningTeamId_; }
          set {
            owningTeamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "electoral_votes" field.</summary>
        public const int ElectoralVotesFieldNumber = 3;
        private long electoralVotes_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ElectoralVotes {
          get { return electoralVotes_; }
          set {
            electoralVotes_ = value;
          }
        }

        /// <summary>Field number for the "season_id" field.</summary>
        public const int SeasonIdFieldNumber = 4;
        private string seasonId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SeasonId {
          get { return seasonId_; }
          set {
            seasonId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "region_id" field.</summary>
        public const int RegionIdFieldNumber = 5;
        private string regionId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RegionId {
          get { return regionId_; }
          set {
            regionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "wc_active_until_ms" field.</summary>
        public const int WcActiveUntilMsFieldNumber = 6;
        private long wcActiveUntilMs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long WcActiveUntilMs {
          get { return wcActiveUntilMs_; }
          set {
            wcActiveUntilMs_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientMapFortress);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientMapFortress other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FortressTemplateGmtId != other.FortressTemplateGmtId) return false;
          if (OwningTeamId != other.OwningTeamId) return false;
          if (ElectoralVotes != other.ElectoralVotes) return false;
          if (SeasonId != other.SeasonId) return false;
          if (RegionId != other.RegionId) return false;
          if (WcActiveUntilMs != other.WcActiveUntilMs) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (FortressTemplateGmtId.Length != 0) hash ^= FortressTemplateGmtId.GetHashCode();
          if (OwningTeamId.Length != 0) hash ^= OwningTeamId.GetHashCode();
          if (ElectoralVotes != 0L) hash ^= ElectoralVotes.GetHashCode();
          if (SeasonId.Length != 0) hash ^= SeasonId.GetHashCode();
          if (RegionId.Length != 0) hash ^= RegionId.GetHashCode();
          if (WcActiveUntilMs != 0L) hash ^= WcActiveUntilMs.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (FortressTemplateGmtId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(FortressTemplateGmtId);
          }
          if (OwningTeamId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(OwningTeamId);
          }
          if (ElectoralVotes != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(ElectoralVotes);
          }
          if (SeasonId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(SeasonId);
          }
          if (RegionId.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(RegionId);
          }
          if (WcActiveUntilMs != 0L) {
            output.WriteRawTag(48);
            output.WriteInt64(WcActiveUntilMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (FortressTemplateGmtId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FortressTemplateGmtId);
          }
          if (OwningTeamId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OwningTeamId);
          }
          if (ElectoralVotes != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ElectoralVotes);
          }
          if (SeasonId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SeasonId);
          }
          if (RegionId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionId);
          }
          if (WcActiveUntilMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(WcActiveUntilMs);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientMapFortress other) {
          if (other == null) {
            return;
          }
          if (other.FortressTemplateGmtId.Length != 0) {
            FortressTemplateGmtId = other.FortressTemplateGmtId;
          }
          if (other.OwningTeamId.Length != 0) {
            OwningTeamId = other.OwningTeamId;
          }
          if (other.ElectoralVotes != 0L) {
            ElectoralVotes = other.ElectoralVotes;
          }
          if (other.SeasonId.Length != 0) {
            SeasonId = other.SeasonId;
          }
          if (other.RegionId.Length != 0) {
            RegionId = other.RegionId;
          }
          if (other.WcActiveUntilMs != 0L) {
            WcActiveUntilMs = other.WcActiveUntilMs;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                FortressTemplateGmtId = input.ReadString();
                break;
              }
              case 18: {
                OwningTeamId = input.ReadString();
                break;
              }
              case 24: {
                ElectoralVotes = input.ReadInt64();
                break;
              }
              case 34: {
                SeasonId = input.ReadString();
                break;
              }
              case 42: {
                RegionId = input.ReadString();
                break;
              }
              case 48: {
                WcActiveUntilMs = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Partner : pb::IMessage<Partner> {
        private static readonly pb::MessageParser<Partner> _parser = new pb::MessageParser<Partner>(() => new Partner());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Partner> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientMapPoi.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Partner() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Partner(Partner other) : this() {
          id_ = other.id_;
          popupDesc_ = other.popupDesc_;
          hyperlink_ = other.hyperlink_;
          partnerType_ = other.partnerType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Partner Clone() {
          return new Partner(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "popup_desc" field.</summary>
        public const int PopupDescFieldNumber = 2;
        private string popupDesc_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PopupDesc {
          get { return popupDesc_; }
          set {
            popupDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "hyperlink" field.</summary>
        public const int HyperlinkFieldNumber = 3;
        private string hyperlink_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Hyperlink {
          get { return hyperlink_; }
          set {
            hyperlink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "partner_type" field.</summary>
        public const int PartnerTypeFieldNumber = 4;
        private global::WUProtos.Data.Client.ClientMapPoi.Types.Partner.Types.PartnerType partnerType_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Client.ClientMapPoi.Types.Partner.Types.PartnerType PartnerType {
          get { return partnerType_; }
          set {
            partnerType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Partner);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Partner other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (PopupDesc != other.PopupDesc) return false;
          if (Hyperlink != other.Hyperlink) return false;
          if (PartnerType != other.PartnerType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (PopupDesc.Length != 0) hash ^= PopupDesc.GetHashCode();
          if (Hyperlink.Length != 0) hash ^= Hyperlink.GetHashCode();
          if (PartnerType != 0) hash ^= PartnerType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (PopupDesc.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(PopupDesc);
          }
          if (Hyperlink.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Hyperlink);
          }
          if (PartnerType != 0) {
            output.WriteRawTag(32);
            output.WriteEnum((int) PartnerType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (PopupDesc.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PopupDesc);
          }
          if (Hyperlink.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Hyperlink);
          }
          if (PartnerType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PartnerType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Partner other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.PopupDesc.Length != 0) {
            PopupDesc = other.PopupDesc;
          }
          if (other.Hyperlink.Length != 0) {
            Hyperlink = other.Hyperlink;
          }
          if (other.PartnerType != 0) {
            PartnerType = other.PartnerType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                PopupDesc = input.ReadString();
                break;
              }
              case 26: {
                Hyperlink = input.ReadString();
                break;
              }
              case 32: {
                PartnerType = (global::WUProtos.Data.Client.ClientMapPoi.Types.Partner.Types.PartnerType) input.ReadEnum();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Partner message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum PartnerType {
            [pbr::OriginalName("PARTNER_TYPE_UNSPECIFIED")] Unspecified = 0,
            [pbr::OriginalName("PARTNER_TYPE_REGULAR")] Regular = 1,
            [pbr::OriginalName("PARTNER_TYPE_FRANCHISE")] Franchise = 2,
            [pbr::OriginalName("PARTNER_TYPE_PSEUDO_ORGANIC")] PseudoOrganic = 3,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
