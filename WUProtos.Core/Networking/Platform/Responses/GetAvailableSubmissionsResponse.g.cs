// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Networking/Platform/Responses/GetAvailableSubmissionsResponse.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Networking.Platform.Responses {

  /// <summary>Holder for reflection information generated from WUProtos/Networking/Platform/Responses/GetAvailableSubmissionsResponse.proto</summary>
  public static partial class GetAvailableSubmissionsResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Networking/Platform/Responses/GetAvailableSubmissionsResponse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GetAvailableSubmissionsResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkxXVVByb3Rvcy9OZXR3b3JraW5nL1BsYXRmb3JtL1Jlc3BvbnNlcy9HZXRB",
            "dmFpbGFibGVTdWJtaXNzaW9uc1Jlc3BvbnNlLnByb3RvEiZXVVByb3Rvcy5O",
            "ZXR3b3JraW5nLlBsYXRmb3JtLlJlc3BvbnNlcyJVCh9HZXRBdmFpbGFibGVT",
            "dWJtaXNzaW9uc1Jlc3BvbnNlEhgKEHN1Ym1pc3Npb25zX2xlZnQYASABKAUS",
            "GAoQbWluX3BsYXllcl9sZXZlbBgCIAEoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Platform.Responses.GetAvailableSubmissionsResponse), global::WUProtos.Networking.Platform.Responses.GetAvailableSubmissionsResponse.Parser, new[]{ "SubmissionsLeft", "MinPlayerLevel" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetAvailableSubmissionsResponse : pb::IMessage<GetAvailableSubmissionsResponse> {
    private static readonly pb::MessageParser<GetAvailableSubmissionsResponse> _parser = new pb::MessageParser<GetAvailableSubmissionsResponse>(() => new GetAvailableSubmissionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAvailableSubmissionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Networking.Platform.Responses.GetAvailableSubmissionsResponseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableSubmissionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableSubmissionsResponse(GetAvailableSubmissionsResponse other) : this() {
      submissionsLeft_ = other.submissionsLeft_;
      minPlayerLevel_ = other.minPlayerLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableSubmissionsResponse Clone() {
      return new GetAvailableSubmissionsResponse(this);
    }

    /// <summary>Field number for the "submissions_left" field.</summary>
    public const int SubmissionsLeftFieldNumber = 1;
    private int submissionsLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubmissionsLeft {
      get { return submissionsLeft_; }
      set {
        submissionsLeft_ = value;
      }
    }

    /// <summary>Field number for the "min_player_level" field.</summary>
    public const int MinPlayerLevelFieldNumber = 2;
    private int minPlayerLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinPlayerLevel {
      get { return minPlayerLevel_; }
      set {
        minPlayerLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAvailableSubmissionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAvailableSubmissionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubmissionsLeft != other.SubmissionsLeft) return false;
      if (MinPlayerLevel != other.MinPlayerLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubmissionsLeft != 0) hash ^= SubmissionsLeft.GetHashCode();
      if (MinPlayerLevel != 0) hash ^= MinPlayerLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubmissionsLeft != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SubmissionsLeft);
      }
      if (MinPlayerLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MinPlayerLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubmissionsLeft != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubmissionsLeft);
      }
      if (MinPlayerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinPlayerLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAvailableSubmissionsResponse other) {
      if (other == null) {
        return;
      }
      if (other.SubmissionsLeft != 0) {
        SubmissionsLeft = other.SubmissionsLeft;
      }
      if (other.MinPlayerLevel != 0) {
        MinPlayerLevel = other.MinPlayerLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SubmissionsLeft = input.ReadInt32();
            break;
          }
          case 16: {
            MinPlayerLevel = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
