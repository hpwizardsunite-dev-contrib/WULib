// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/SoundConfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/SoundConfig.proto</summary>
  public static partial class SoundConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/SoundConfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SoundConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9XVVByb3Rvcy9EYXRhL1NvdW5kQ29uZmlnLnByb3RvEg1XVVByb3Rvcy5E",
            "YXRhGiJXVVByb3Rvcy9EYXRhL0F1ZGlvUGFyYW1ldGVyLnByb3RvImkKC1Nv",
            "dW5kQ29uZmlnEhIKCnNvdW5kX2JhbmsYASABKAkSEwoLc291bmRfZXZlbnQY",
            "AiABKAkSMQoKcGFyYW1ldGVycxgDIAMoCzIdLldVUHJvdG9zLkRhdGEuQXVk",
            "aW9QYXJhbWV0ZXJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.AudioParameterReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.SoundConfig), global::WUProtos.Data.SoundConfig.Parser, new[]{ "SoundBank", "SoundEvent", "Parameters" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SoundConfig : pb::IMessage<SoundConfig> {
    private static readonly pb::MessageParser<SoundConfig> _parser = new pb::MessageParser<SoundConfig>(() => new SoundConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SoundConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.SoundConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoundConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoundConfig(SoundConfig other) : this() {
      soundBank_ = other.soundBank_;
      soundEvent_ = other.soundEvent_;
      parameters_ = other.parameters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoundConfig Clone() {
      return new SoundConfig(this);
    }

    /// <summary>Field number for the "sound_bank" field.</summary>
    public const int SoundBankFieldNumber = 1;
    private string soundBank_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SoundBank {
      get { return soundBank_; }
      set {
        soundBank_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sound_event" field.</summary>
    public const int SoundEventFieldNumber = 2;
    private string soundEvent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SoundEvent {
      get { return soundEvent_; }
      set {
        soundEvent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::WUProtos.Data.AudioParameter> _repeated_parameters_codec
        = pb::FieldCodec.ForMessage(26, global::WUProtos.Data.AudioParameter.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.AudioParameter> parameters_ = new pbc::RepeatedField<global::WUProtos.Data.AudioParameter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.AudioParameter> Parameters {
      get { return parameters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SoundConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SoundConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SoundBank != other.SoundBank) return false;
      if (SoundEvent != other.SoundEvent) return false;
      if(!parameters_.Equals(other.parameters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SoundBank.Length != 0) hash ^= SoundBank.GetHashCode();
      if (SoundEvent.Length != 0) hash ^= SoundEvent.GetHashCode();
      hash ^= parameters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SoundBank.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SoundBank);
      }
      if (SoundEvent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SoundEvent);
      }
      parameters_.WriteTo(output, _repeated_parameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SoundBank.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SoundBank);
      }
      if (SoundEvent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SoundEvent);
      }
      size += parameters_.CalculateSize(_repeated_parameters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SoundConfig other) {
      if (other == null) {
        return;
      }
      if (other.SoundBank.Length != 0) {
        SoundBank = other.SoundBank;
      }
      if (other.SoundEvent.Length != 0) {
        SoundEvent = other.SoundEvent;
      }
      parameters_.Add(other.parameters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SoundBank = input.ReadString();
            break;
          }
          case 18: {
            SoundEvent = input.ReadString();
            break;
          }
          case 26: {
            parameters_.AddEntriesFrom(input, _repeated_parameters_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
