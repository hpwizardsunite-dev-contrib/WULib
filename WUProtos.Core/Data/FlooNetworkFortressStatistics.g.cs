// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/FlooNetworkFortressStatistics.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/FlooNetworkFortressStatistics.proto</summary>
  public static partial class FlooNetworkFortressStatisticsReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/FlooNetworkFortressStatistics.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FlooNetworkFortressStatisticsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFXVVByb3Rvcy9EYXRhL0Zsb29OZXR3b3JrRm9ydHJlc3NTdGF0aXN0aWNz",
            "LnByb3RvEg1XVVByb3Rvcy5EYXRhIuABCh1GbG9vTmV0d29ya0ZvcnRyZXNz",
            "U3RhdGlzdGljcxJYCg9wb2ludHNfcGVyX3RlYW0YASADKAsyPy5XVVByb3Rv",
            "cy5EYXRhLkZsb29OZXR3b3JrRm9ydHJlc3NTdGF0aXN0aWNzLlBvaW50c1Bl",
            "clRlYW1FbnRyeRIXCg9lbGVjdG9yYWxfdm90ZXMYAiABKAMSFgoOb3duaW5n",
            "X3RlYW1faWQYAyABKAkaNAoSUG9pbnRzUGVyVGVhbUVudHJ5EgsKA2tleRgB",
            "IAEoCRINCgV2YWx1ZRgCIAEoAzoCOAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.FlooNetworkFortressStatistics), global::WUProtos.Data.FlooNetworkFortressStatistics.Parser, new[]{ "PointsPerTeam", "ElectoralVotes", "OwningTeamId" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FlooNetworkFortressStatistics : pb::IMessage<FlooNetworkFortressStatistics> {
    private static readonly pb::MessageParser<FlooNetworkFortressStatistics> _parser = new pb::MessageParser<FlooNetworkFortressStatistics>(() => new FlooNetworkFortressStatistics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FlooNetworkFortressStatistics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.FlooNetworkFortressStatisticsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlooNetworkFortressStatistics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlooNetworkFortressStatistics(FlooNetworkFortressStatistics other) : this() {
      pointsPerTeam_ = other.pointsPerTeam_.Clone();
      electoralVotes_ = other.electoralVotes_;
      owningTeamId_ = other.owningTeamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlooNetworkFortressStatistics Clone() {
      return new FlooNetworkFortressStatistics(this);
    }

    /// <summary>Field number for the "points_per_team" field.</summary>
    public const int PointsPerTeamFieldNumber = 1;
    private static readonly pbc::MapField<string, long>.Codec _map_pointsPerTeam_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt64(16), 10);
    private readonly pbc::MapField<string, long> pointsPerTeam_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> PointsPerTeam {
      get { return pointsPerTeam_; }
    }

    /// <summary>Field number for the "electoral_votes" field.</summary>
    public const int ElectoralVotesFieldNumber = 2;
    private long electoralVotes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ElectoralVotes {
      get { return electoralVotes_; }
      set {
        electoralVotes_ = value;
      }
    }

    /// <summary>Field number for the "owning_team_id" field.</summary>
    public const int OwningTeamIdFieldNumber = 3;
    private string owningTeamId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwningTeamId {
      get { return owningTeamId_; }
      set {
        owningTeamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FlooNetworkFortressStatistics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FlooNetworkFortressStatistics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!PointsPerTeam.Equals(other.PointsPerTeam)) return false;
      if (ElectoralVotes != other.ElectoralVotes) return false;
      if (OwningTeamId != other.OwningTeamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= PointsPerTeam.GetHashCode();
      if (ElectoralVotes != 0L) hash ^= ElectoralVotes.GetHashCode();
      if (OwningTeamId.Length != 0) hash ^= OwningTeamId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pointsPerTeam_.WriteTo(output, _map_pointsPerTeam_codec);
      if (ElectoralVotes != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ElectoralVotes);
      }
      if (OwningTeamId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OwningTeamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pointsPerTeam_.CalculateSize(_map_pointsPerTeam_codec);
      if (ElectoralVotes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ElectoralVotes);
      }
      if (OwningTeamId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwningTeamId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FlooNetworkFortressStatistics other) {
      if (other == null) {
        return;
      }
      pointsPerTeam_.Add(other.pointsPerTeam_);
      if (other.ElectoralVotes != 0L) {
        ElectoralVotes = other.ElectoralVotes;
      }
      if (other.OwningTeamId.Length != 0) {
        OwningTeamId = other.OwningTeamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pointsPerTeam_.AddEntriesFrom(input, _map_pointsPerTeam_codec);
            break;
          }
          case 16: {
            ElectoralVotes = input.ReadInt64();
            break;
          }
          case 26: {
            OwningTeamId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
