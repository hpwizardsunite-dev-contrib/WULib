// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/Client/ClientGmTemplate.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data.Client {

  /// <summary>Holder for reflection information generated from WUProtos/Data/Client/ClientGmTemplate.proto</summary>
  public static partial class ClientGmTemplateReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/Client/ClientGmTemplate.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientGmTemplateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CitXVVByb3Rvcy9EYXRhL0NsaWVudC9DbGllbnRHbVRlbXBsYXRlLnByb3Rv",
            "EhRXVVByb3Rvcy5EYXRhLkNsaWVudBouV1VQcm90b3MvRGF0YS9DbGllbnQv",
            "Q2xpZW50UHJvZmlsZUNvbmZpZy5wcm90bxoZV1VQcm90b3MvRGF0YS9Db2xv",
            "ci5wcm90bxogV1VQcm90b3MvRGF0YS9SZXF1aXJlbWVudHMucHJvdG8aIldV",
            "UHJvdG9zL0RhdGEvQXVkaW9QYXJhbWV0ZXIucHJvdG8aH1dVUHJvdG9zL0Rh",
            "dGEvU291bmRDb25maWcucHJvdG8aL1dVUHJvdG9zL0RhdGEvQ29sbGVjdGlv",
            "bi9Db2xsZWN0aW9uRmFtaWx5LnByb3RvIt7aAQoQQ2xpZW50R21UZW1wbGF0",
            "ZRJaChFjb2xsZWN0aW9uX2ZhbWlseRgBIAEoCzI9LldVUHJvdG9zLkRhdGEu",
            "Q2xpZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xpZW50Q29sbGVjdGlvbkZhbWls",
            "eUgAElYKD2NvbGxlY3Rpb25faXRlbRgCIAEoCzI7LldVUHJvdG9zLkRhdGEu",
            "Q2xpZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xpZW50Q29sbGVjdGlvbkl0ZW1I",
            "ABJYChB3YWxrYm94X3RlbXBsYXRlGAMgASgLMjwuV1VQcm90b3MuRGF0YS5D",
            "bGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRXYWxrYm94VGVtcGxhdGVI",
            "ABJLCgllbmNvdW50ZXIYBCABKAsyNi5XVVByb3Rvcy5EYXRhLkNsaWVudC5D",
            "bGllbnRHbVRlbXBsYXRlLkNsaWVudEVuY291bnRlckgAEkcKB3BvcnRrZXkY",
            "BSABKAsyNC5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRl",
            "LkNsaWVudFBvcnRrZXlIABJMCgp2YXVsdF9pdGVtGAYgASgLMjYuV1VQcm90",
            "b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRWYXVsdEl0",
            "ZW1IABJOCgtnYW1lX2NvbmZpZxgHIAEoCzI3LldVUHJvdG9zLkRhdGEuQ2xp",
            "ZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xpZW50R2FtZUNvbmZpZ0gAEkwKCnN0",
            "b3JlX3BhY2sYCCABKAsyNi5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRH",
            "bVRlbXBsYXRlLkNsaWVudFN0b3JlUGFja0gAEkMKBXNwZWxsGAkgASgLMjIu",
            "V1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRT",
            "cGVsbEgAElYKD3Byb3RlZ29fcGF0dGVybhgKIAEoCzI7LldVUHJvdG9zLkRh",
            "dGEuQ2xpZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xpZW50UHJvdGVnb1BhdHRl",
            "cm5IABJYChBjaGFtYmVyX3RlbXBsYXRlGAsgASgLMjwuV1VQcm90b3MuRGF0",
            "YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRDaGFtYmVyVGVtcGxh",
            "dGVIABJWCg9jb2xsZWN0aW9uX3BhZ2UYDCABKAsyOy5XVVByb3Rvcy5EYXRh",
            "LkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudENvbGxlY3Rpb25QYWdl",
            "SAASUAoMdGVhbV9jb250cm9sGA0gASgLMjguV1VQcm90b3MuRGF0YS5DbGll",
            "bnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRUZWFtQ29udHJvbEgAElAKDHN0",
            "b3JlX2NvbmZpZxgOIAEoCzI4LldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVu",
            "dEdtVGVtcGxhdGUuQ2xpZW50U3RvcmVDb25maWdIABJaChFzdG9yZV9zdWJj",
            "YXRlZ29yeRgPIAEoCzI9LldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudEdt",
            "VGVtcGxhdGUuQ2xpZW50U3RvcmVTdWJjYXRlZ29yeUgAEkUKBmhhcHRpYxgQ",
            "IAEoCzIzLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudEdtVGVtcGxhdGUu",
            "Q2xpZW50SGFwdGljSAASTQoKcHJvZmVzc2lvbhgRIAEoCzI3LldVUHJvdG9z",
            "LkRhdGEuQ2xpZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xpZW50UHJvZmVzc2lv",
            "bkgAElQKDmJvbnVzX2NhdGVnb3J5GBIgASgLMjouV1VQcm90b3MuRGF0YS5D",
            "bGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRCb251c0NhdGVnb3J5SAAS",
            "VAoOdmF1bHRfY2F0ZWdvcnkYEyABKAsyOi5XVVByb3Rvcy5EYXRhLkNsaWVu",
            "dC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudFZhdWx0Q2F0ZWdvcnlIABJDCg5w",
            "cm9maWxlX2NvbmZpZxgUIAEoCzIpLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNs",
            "aWVudFByb2ZpbGVDb25maWdIABJUCg5tYXBfaW5ncmVkaWVudBgVIAEoCzI6",
            "LldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xpZW50",
            "TWFwSW5ncmVkaWVudEgAEk4KC21hcF9hYmlsaXR5GBYgASgLMjcuV1VQcm90",
            "b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRNYXBBYmls",
            "aXR5SAASTQoKc3Rvcnlib2FyZBgXIAEoCzI3LldVUHJvdG9zLkRhdGEuQ2xp",
            "ZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xpZW50U3Rvcnlib2FyZEgAEkcKB3Jw",
            "Z3N0YXQYGCABKAsyNC5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRl",
            "bXBsYXRlLkNsaWVudFJwZ3N0YXRIABJUCg5ycGdzdGF0c19ibG9jaxgZIAEo",
            "CzI6LldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xp",
            "ZW50UnBnc3RhdHNCbG9ja0gAEl0KE3NlbGZpZV9hdmF0YXJfYXNzZXQYGiAB",
            "KAsyPi5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNs",
            "aWVudFNlbGZpZUF2YXRhckFzc2V0SAASQQoEYnVmZhgbIAEoCzIxLldVUHJv",
            "dG9zLkRhdGEuQ2xpZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xpZW50QnVmZkgA",
            "ElgKEG91dHBvc3RfdGVtcGxhdGUYHSABKAsyPC5XVVByb3Rvcy5EYXRhLkNs",
            "aWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudE91dHBvc3RUZW1wbGF0ZUgA",
            "ElYKD2NoYWxsZW5nZV9ib251cxgeIAEoCzI7LldVUHJvdG9zLkRhdGEuQ2xp",
            "ZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xpZW50Q2hhbGxlbmdlQm9udXNIABJF",
            "CgZyZWNpcGUYHyABKAsyMy5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRH",
            "bVRlbXBsYXRlLkNsaWVudFJlY2lwZUgAEk4KC21hc3Rlcl9ub3RlGCAgASgL",
            "MjcuV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGll",
            "bnRNYXN0ZXJOb3RlSAASQwoFcXVlc3QYISABKAsyMi5XVVByb3Rvcy5EYXRh",
            "LkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudFF1ZXN0SAAScAodZGFp",
            "bHlfcmV3YXJkX21vbnRobHlfc2NoZWR1bGUYIiABKAsyRy5XVVByb3Rvcy5E",
            "YXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudERhaWx5UmV3YXJk",
            "TW9udGhseVNjaGVkdWxlSAASVAoOZW5jb3VudGVyX3R5cGUYIyABKAsyOi5X",
            "VVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudEVu",
            "Y291bnRlclR5cGVIABJDCgVldmVudBgkIAEoCzIyLldVUHJvdG9zLkRhdGEu",
            "Q2xpZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xpZW50RXZlbnRIABrsOwoQQ2xp",
            "ZW50R2FtZUNvbmZpZxIKCgJpZBgBIAEoCRIwChJ0YXJnZXRfZ2x5cGhfY29s",
            "b3IYAiABKAsyFC5XVVByb3Rvcy5EYXRhLkNvbG9yEjEKE3JldGljbGVfZ2x5",
            "cGhfY29sb3IYAyABKAsyFC5XVVByb3Rvcy5EYXRhLkNvbG9yEjEKE2FsaWdu",
            "ZWRfZ2x5cGhfY29sb3IYBCABKAsyFC5XVVByb3Rvcy5EYXRhLkNvbG9yEiAK",
            "GGVuY291bnRlcl9hbmdsZV9vZl9zcGF3bhgFIAEoAhIjCht0aW1lX2JlZm9y",
            "ZV9hcl9oaW50X2Rpc3BsYXkYBiABKAISJQodbWF4X2xvY2tfZGlzdGFuY2Vf",
            "ZnJvbV9vcmlnaW4YByABKAISLgomZGlzdGFuY2VfYmVoaW5kX2NhbWVyYV90",
            "b19zcGF3bl9tYXJrZXIYCCABKAISJwofdGltZV9iZWZvcmVfc3dpdGNoX3Rv",
            "X2FyX3NpbXBsZRgJIAEoAhIdChV0dXRvcmlhbF9lbmNvdW50ZXJfaWQYCiAB",
            "KAkSHgoWZW5jb3VudGVyX3Jlc2V0X2dmb3JjZRgLIAEoAhIpCiFsb2NhbF9t",
            "YXBfdXBkYXRlX2ludGVydmFsX3NlY29uZHMYDCABKAISbAoTZmxvb19uZXR3",
            "b3JrX2NvbmZpZxgNIAEoCzJPLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVu",
            "dEdtVGVtcGxhdGUuQ2xpZW50R2FtZUNvbmZpZy5DbGllbnRGbG9vTmV0d29y",
            "a0NvbmZpZxInCh9mbG9vX2NvbnRyaWJ1dGlvbl9idXR0b25fdmFsdWVzGA4g",
            "AygDEhoKEmFwcF9iYWNrZ3JvdW5kX21hcBgPIAEoBRIbChNhcHBfYmFja2dy",
            "b3VuZF9mdWxsGBAgASgFEhwKFHRyaWdnZXJhYmxlX2Nvb2xkb3duGBEgASgC",
            "EiEKGWxldmVsX3VwX3RyaWdnZXJfcHJpb3JpdHkYEiABKAUSIAoYd2Fsa2Jv",
            "eF90cmlnZ2VyX3ByaW9yaXR5GBMgASgFEm8KEnBlcm1pc3Npb25zX2NvbmZp",
            "ZxgUIAEoCzJTLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudEdtVGVtcGxh",
            "dGUuQ2xpZW50R2FtZUNvbmZpZy5QZXJtaXNzaW9uc0NvbmZpZ1N0YXRpY0xp",
            "c3QSJQodc3dpc2hfZ2FtZV9zY29yaW5nX3RocmVzaG9sZHMYFiADKAISIgoa",
            "c3dpc2hfZ2FtZV9zY29yaW5nX2JvbnVzZXMYFyADKAISWQoMYXVkaW9fY29u",
            "ZmlnGBggASgLMkMuV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1w",
            "bGF0ZS5DbGllbnRHYW1lQ29uZmlnLkF1ZGlvQ29uZmlnEhsKE2F1ZGlvX2lu",
            "aXRpYWxfYmFua3MYGSADKAkSfgoac3ViZmVhdHVyZV9wcmVzdGlnZV9sZXZl",
            "bHMYGiADKAsyWi5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBs",
            "YXRlLkNsaWVudEdhbWVDb25maWcuQ29sbGVjdGlvblN1YmZlYXR1cmVQcmVz",
            "dGlnZUxldmVscxJfCgxib251c19jb25maWcYGyABKAsySS5XVVByb3Rvcy5E",
            "YXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudEdhbWVDb25maWcu",
            "Q2xpZW50Qm9udXNDb25maWcSMAoocG9ydGtleV93cmFja3NwdXJ0X2NvbGxl",
            "Y3Rpb25faGFwdGljX2tleRgcIAEoCRJeCgxwYXJrbW9kZV9iZ3MYHSADKAsy",
            "SC5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVu",
            "dEdhbWVDb25maWcuUGFya21vZGVCZ3NFbnRyeRIpCiFwb3Rpb25fbWFzdGVy",
            "bm90ZV91bmxvY2tfdHJlc2hvbGQYHiABKAUSegoYc3ViZmVhdHVyZV9mYW1p",
            "bHlfb3JkZXJzGB8gAygLMlguV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50",
            "R21UZW1wbGF0ZS5DbGllbnRHYW1lQ29uZmlnLkNvbGxlY3Rpb25TdWJmZWF0",
            "dXJlRmFtaWx5T3JkZXJzEmsKFmJhdHRlcnlfc2F2ZXJfcHJvZmlsZXMYICAD",
            "KAsySy5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNs",
            "aWVudEdhbWVDb25maWcuQmF0dGVyeVNhdmVyUHJvZmlsZRIhChlyYXRlX2Fw",
            "cF9taW5fcGxheWVyX2xldmVsGCEgASgFEh4KFnJhdGVfYXBwX2Nvb2xkb3du",
            "X2RheXMYIiABKAUSGQoRdG9vX2Zhc3RfY29vbGRvd24YIyABKAUSZAoPZW5j",
            "b3VudGVyX2JhbmtzGCQgAygLMksuV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xp",
            "ZW50R21UZW1wbGF0ZS5DbGllbnRHYW1lQ29uZmlnLkVuY291bnRlclNvdW5k",
            "QmFua3MSKwojZGFpbHlfcmV3YXJkX3BvcHVwX3RyaWdnZXJfcHJpb3JpdHkY",
            "JSABKAUSIQoZcmF0ZV9hcHBfdHJpZ2dlcl9wcmlvcml0eRgmIAEoBRJhCgpm",
            "dHVlX3ZpZGVvGCsgASgLMk0uV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50",
            "R21UZW1wbGF0ZS5DbGllbnRHYW1lQ29uZmlnLkNsaWVudEZ0dWVWaWRlb0Nv",
            "bmZpZxIcChR0dXRvcmlhbF9wb3Rpb25fYnJldxgsIAEoCRIkChxnZW5lcmlj",
            "X3RyYWNlX3NwZWxsX2ZhaWxfc2Z4GC0gASgJEh8KF3RyYWNpbmdfc3BlbGxf",
            "Z2x5cGhfc2Z4GC4gASgJEhwKFHRyYWNpbmdfY29tcGxldGVfc2Z4GC8gASgJ",
            "EiAKGHNwZWxsX2Jhcl9pbmNyZWFzaW5nX3NmeBgwIAEoCRIaChJiYWRfc3Bl",
            "bGxfY2FzdF9zZngYMSABKAkSGwoTZ29vZF9zcGVsbF9jYXN0X3NmeBgyIAEo",
            "CRIcChRncmVhdF9zcGVsbF9jYXN0X3NmeBgzIAEoCRIeChZwZXJmZWN0X3Nw",
            "ZWxsX2Nhc3Rfc2Z4GDQgASgJEioKInJlZ2lzdHJ5X3N0aWNrZXJfcGxhY2Vk",
            "X2hhcHRpY19rZXkYNSABKAkSIAoYcmV3YXJkc192ZXNzZWxfYnlfcmFyaXR5",
            "GDYgAygJEhsKE3Jld2FyZHNfc291bmRfYmFua3MYNyADKAkSIwobZmlyc3Rf",
            "c3RpY2tlcl9zdG9yeWJvYXJkX2lkGDggASgJEiMKG2ZpcnN0X3N0aWNrZXJf",
            "Y29sbGVjdGlvbl9pZBg5IAEoCRIyChRhdmF0YXJfZGVmYXVsdF9jb2xvchg6",
            "IAEoCzIULldVUHJvdG9zLkRhdGEuQ29sb3ISOgoWbG9ja19vbl9jb21wbGV0",
            "aW9uX3NmeBg7IAEoCzIaLldVUHJvdG9zLkRhdGEuU291bmRDb25maWcSNwoT",
            "bG9ja19vbl90aW1lX3VwX3NmeBg8IAEoCzIaLldVUHJvdG9zLkRhdGEuU291",
            "bmRDb25maWcSNAoQcHJvdGVnb19jYXN0X3NmeBg9IAEoCzIaLldVUHJvdG9z",
            "LkRhdGEuU291bmRDb25maWcSNwoTcHJvdGVnb190aW1lX3VwX3NmeBg+IAEo",
            "CzIaLldVUHJvdG9zLkRhdGEuU291bmRDb25maWcSIQoZbXNfYmVmb3JlX2Zp",
            "bmFsX2ludGVuc2l0eRg/IAEoBRIlCh1tc19iZWZvcmVfc2Vjb25kYXJ5X2lu",
            "dGVuc2l0eRhAIAEoBRJMCiVjaGFsbGVuZ2VfdGhpcnR5X3NlY29uZHNfbGVm",
            "dF9zdGluZ2VyGEEgAygLMh0uV1VQcm90b3MuRGF0YS5BdWRpb1BhcmFtZXRl",
            "chJUCi1jaGFsbGVuZ2VfZW5jb3VudGVyX3BsYXllcl92aWN0b3Jpb3VzX3N0",
            "aW5nZXIYQiADKAsyHS5XVVByb3Rvcy5EYXRhLkF1ZGlvUGFyYW1ldGVyElIK",
            "K2NoYWxsZW5nZV9lbmNvdW50ZXJfcGxheWVyX2RlZmVhdGVkX3N0aW5nZXIY",
            "QyADKAsyHS5XVVByb3Rvcy5EYXRhLkF1ZGlvUGFyYW1ldGVyEj4KF2NoYWxs",
            "ZW5nZV9iZWdpbl9zdGluZ2VyGEQgAygLMh0uV1VQcm90b3MuRGF0YS5BdWRp",
            "b1BhcmFtZXRlchI/ChhjaGFsbGVuZ2VfZmluaXNoX3ZpY3RvcnkYRSADKAsy",
            "HS5XVVByb3Rvcy5EYXRhLkF1ZGlvUGFyYW1ldGVyEj4KF2NoYWxsZW5nZV9m",
            "aW5pc2hfZGVmZWF0GEYgAygLMh0uV1VQcm90b3MuRGF0YS5BdWRpb1BhcmFt",
            "ZXRlchJJCiJjaGFsbGVuZ2VfZWxpdGVfbW9iX3NwYXduc19zdGluZ2VyGEcg",
            "AygLMh0uV1VQcm90b3MuRGF0YS5BdWRpb1BhcmFtZXRlchInCh9pbnRlcm5l",
            "dF9yZWFjaGFiaWxpdHlfY2hlY2tfdXJsGEggASgJEhwKFHJhdGVfYXBwX21h",
            "eF9wcm9tcHRzGEkgASgFEhgKEHJhdGVfYXBwX3ZlcnNpb24YSiABKAUSLAok",
            "cmF0ZV9hcHBfdHJpZ2dlcl93aXphcmRpbmdfY2hhbGxlbmdlGEsgASgFEi4K",
            "JnJhdGVfYXBwX3RyaWdnZXJfc3RpY2tlcl9wYWdlX2NvbXBsZXRlGEwgASgF",
            "EjIKKnJhdGVfYXBwX3RyaWdnZXJfZXZlbnRfcXVlc3RfbGluZV9jb21wbGV0",
            "ZRhNIAEoBRIfChdjaGVja3NfdW50aWxfZ3BzX3Byb21wdBhOIAEoBRIcChRm",
            "b3J0cmVzc19zb3VuZF9iYW5rcxhPIAMoCRJFCiF0ZW5fc2Vjb25kc19sZWZ0",
            "X2luX2NoYWxsZW5nZV9zZngYUCABKAsyGi5XVVByb3Rvcy5EYXRhLlNvdW5k",
            "Q29uZmlnEkUKIWxvbmdfc2Vjb25kX2xlZnRfaW5fY2hhbGxlbmdlX3NmeBhR",
            "IAEoCzIaLldVUHJvdG9zLkRhdGEuU291bmRDb25maWcSSwonc2hvcnRfaGFs",
            "Zl9zZWNvbmRfbGVmdF9pbl9jaGFsbGVuZ2Vfc2Z4GFIgASgLMhouV1VQcm90",
            "b3MuRGF0YS5Tb3VuZENvbmZpZxI6ChZvbmVfbWludXRlX3dhcm5pbmdfc2Z4",
            "GFMgASgLMhouV1VQcm90b3MuRGF0YS5Tb3VuZENvbmZpZxIiChpyYXRlX2Fw",
            "cF90cmlnZ2VyX21hcF9lbnRlchhUIAEoCBIrCiNwcm9mZXNzaW9uc19hZmZp",
            "bml0eV9hZHZhbnRhZ2VfaWNvbhhVIAEoCRIpCiFwcm9mZXNzaW9uc19hZmZp",
            "bml0eV9uZXV0cmFsX2ljb24YViABKAkSLgomcHJvZmVzc2lvbnNfYWZmaW5p",
            "dHlfZGlzYWR2YW50YWdlX2ljb24YVyABKAkSJAocaW50ZXJuZXRfb3V0YWdl",
            "X2JhY2tvZmZfdGltZRhYIAEoBRIiChphcl9jb3JlX3N0b3J5Ym9hcmRfdHJp",
            "Z2dlchhZIAEoCRJtChN2b2ljZV9vdmVyX21hcHBpbmdzGFogAygLMlAuV1VQ",
            "cm90b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRHYW1l",
            "Q29uZmlnLlZvaWNlT3Zlckxhbmd1YWdlTWFwcGluZxInCh9pbl9hcHBfbWVz",
            "c2FnZV90cmlnZ2VyX3ByaW9yaXR5GFsgASgFEigKIGludGVybmFsX2ZvcnRy",
            "ZXNzX2ludGVyYWN0X3JhbmdlGFwgASgCEi8KJ2xvd19jb25uZWN0aXZpdHlf",
            "dGhyZXNob2xkX2J5dGVzX3Blcl9tcxhdIAEoAhIXCg9nYW1lX3NpemVfaW5f",
            "a2IYXiABKAUSLwond2NfbWFwX2VuZW15X21hcmtlcl9idWZmX29jY3VwaWVk",
            "X2ltYWdlGF8gASgJEi0KJXdjX21hcF9lbmVteV9tYXJrZXJfYnVmZl92YWNh",
            "bnRfaW1hZ2UYYCABKAkSKgoid2NfZW5lbXlfbG9va19pbl9idWZmX2JvcmRl",
            "cl9pbWFnZRhhIAEoCRJqChVsb2NhbGl6YXRpb25fbWFwcGluZ3MYYiADKAsy",
            "Sy5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVu",
            "dEdhbWVDb25maWcuTG9jYWxpemF0aW9uTWFwcGluZxoyChBQYXJrbW9kZUJn",
            "c0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEakQkKFUNs",
            "aWVudEZ0dWVWaWRlb0NvbmZpZxKGAQoLZnJvbV9hc3NldHMYASABKAsyby5X",
            "VVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudEdh",
            "bWVDb25maWcuQ2xpZW50RnR1ZVZpZGVvQ29uZmlnLkNsaWVudEZ0dWVWaWRl",
            "b0ZhbGxiYWNrRGVmaW5pdGlvbkgAEn8KCGZyb21fdXJsGAIgASgLMmsuV1VQ",
            "cm90b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRHYW1l",
            "Q29uZmlnLkNsaWVudEZ0dWVWaWRlb0NvbmZpZy5DbGllbnRGdHVlVmlkZW9O",
            "YW1lRGVmaW5pdGlvbkgAEhcKD3F1YWxpdHlfYnVja2V0cxgDIAMoCRJ8ChBx",
            "dWFsaXR5X21hcHBpbmdzGAQgAygLMmIuV1VQcm90b3MuRGF0YS5DbGllbnQu",
            "Q2xpZW50R21UZW1wbGF0ZS5DbGllbnRHYW1lQ29uZmlnLkNsaWVudEZ0dWVW",
            "aWRlb0NvbmZpZy5RdWFsaXR5TWFwcGluZ3NFbnRyeRqjAQoUUXVhbGl0eU1h",
            "cHBpbmdzRW50cnkSCwoDa2V5GAEgASgJEnoKBXZhbHVlGAIgASgLMmsuV1VQ",
            "cm90b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRHYW1l",
            "Q29uZmlnLkNsaWVudEZ0dWVWaWRlb0NvbmZpZy5DbGllbnRGdHVlVmlkZW9R",
            "dWFsaXR5TWFwcGluZzoCOAEavQIKHUNsaWVudEZ0dWVWaWRlb1F1YWxpdHlN",
            "YXBwaW5nEoQBCgdtZWFzdXJlGAEgASgOMnMuV1VQcm90b3MuRGF0YS5DbGll",
            "bnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRHYW1lQ29uZmlnLkNsaWVudEZ0",
            "dWVWaWRlb0NvbmZpZy5DbGllbnRGdHVlVmlkZW9RdWFsaXR5TWFwcGluZy5N",
            "ZWFzdXJlEhMKC2xvd2VyX2JvdW5kGAIgASgFEhMKC3VwcGVyX2JvdW5kGAMg",
            "ASgFImsKB01lYXN1cmUSFgoSY2FtZXJhX3BpeGVsX3dpZHRoEAASFwoTY2Ft",
            "ZXJhX3BpeGVsX2hlaWdodBABEhYKEnNjcmVlbl9waXhlbF93aWR0aBACEhcK",
            "E3NjcmVlbl9waXhlbF9oZWlnaHQQAxqrAQohQ2xpZW50RnR1ZVZpZGVvRmFs",
            "bGJhY2tEZWZpbml0aW9uEoUBChBuYW1lX2RlZmluaXRpb25zGAEgAygLMmsu",
            "V1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRH",
            "YW1lQ29uZmlnLkNsaWVudEZ0dWVWaWRlb0NvbmZpZy5DbGllbnRGdHVlVmlk",
            "ZW9OYW1lRGVmaW5pdGlvbho0Ch1DbGllbnRGdHVlVmlkZW9OYW1lRGVmaW5p",
            "dGlvbhITCgtuYW1lX2Zvcm1hdBgBIAEoCUINCgtWaWRlb1NvdXJjZRrpAQoX",
            "Q2xpZW50Rmxvb05ldHdvcmtDb25maWcSlAEKH2VsZWN0b3JhbF92b3Rlc19w",
            "ZXJfZmxvb19wb2ludHMYASADKAsyay5XVVByb3Rvcy5EYXRhLkNsaWVudC5D",
            "bGllbnRHbVRlbXBsYXRlLkNsaWVudEdhbWVDb25maWcuQ2xpZW50Rmxvb05l",
            "dHdvcmtDb25maWcuRWxlY3RvcmFsVm90ZXNQZXJGbG9vUG9pbnRzGjcKG0Vs",
            "ZWN0b3JhbFZvdGVzUGVyRmxvb1BvaW50cxIYChBmb3J0cmVzc19wcmVmYWJz",
            "GAEgAygJGu4BChFDbGllbnRCb251c0NvbmZpZxIKCgJpZBgBIAEoCRIVCg1h",
            "Y2N1cmFjeV90aWVyGAIgAygCEh4KFmFjY3VyYWN5X3RpZXJfYm9udXNfaWQY",
            "AyADKAkSIAoYYWNjdXJhY3lfdGllcl9ib251c190ZXh0GAQgAygJEhsKE2Zp",
            "cnN0X3RpbWVfYm9udXNfaWQYBSABKAkSHQoVZmlyc3RfdGltZV9ib251c190",
            "ZXh0GAYgASgJEhoKEmxpZmVfdGltZV9ib251c19pZBgHIAEoCRIcChRsaWZl",
            "X3RpbWVfYm9udXNfdGV4dBgIIAEoCRpUChNMb2NhbGl6YXRpb25NYXBwaW5n",
            "EhUKDWxhbmd1YWdlX2NvZGUYASABKAkSEgoKbG9jX3N0cmluZxgCIAEoCRIS",
            "Cgppc19lbmFibGVkGAMgASgIGrECChtQZXJtaXNzaW9uc0NvbmZpZ1N0YXRp",
            "Y0xpc3QSfQoEbGlzdBgBIAMoCzJvLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNs",
            "aWVudEdtVGVtcGxhdGUuQ2xpZW50R2FtZUNvbmZpZy5QZXJtaXNzaW9uc0Nv",
            "bmZpZ1N0YXRpY0xpc3QuUGVybWlzc2lvbnNDb25maWdTdGF0aWNEYXRhGpIB",
            "ChtQZXJtaXNzaW9uc0NvbmZpZ1N0YXRpY0RhdGESCgoCaWQYASABKAkSFgoO",
            "aW5pdGlhbF9wcm9tcHQYAiABKAkSFQoNZGVuaWFsX3Byb21wdBgDIAEoCRIQ",
            "CghvcHRpb25hbBgEIAEoCBINCgV0aXRsZRgFIAEoCRIXCg9iZWdnaW5nX2Vu",
            "YWJsZWQYBiABKAgaSgoYVm9pY2VPdmVyTGFuZ3VhZ2VNYXBwaW5nEhUKDWxh",
            "bmd1YWdlX2NvZGUYASABKAkSFwoPbGFuZ3VhZ2VfZm9sZGVyGAIgASgJGn0K",
            "C0F1ZGlvQ29uZmlnEhMKC211c2ljX2V2ZW50GAEgASgJElkKDG11c2ljX2Nv",
            "bmZpZxgCIAMoCzJDLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudEdtVGVt",
            "cGxhdGUuQ2xpZW50R2FtZUNvbmZpZy5NdXNpY0NvbmZpZxo1ChNCYXR0ZXJ5",
            "U2F2ZXJQcm9maWxlEhAKCHByb2ZpbGVzGAEgAygJEgwKBG5hbWUYAiABKAka",
            "hQEKIENvbGxlY3Rpb25TdWJmZWF0dXJlRmFtaWx5T3JkZXJzEk0KCnN1YmZl",
            "YXR1cmUYASABKA4yOS5XVVByb3Rvcy5EYXRhLkNvbGxlY3Rpb24uQ29sbGVj",
            "dGlvbkZhbWlseS5TdWJmZWF0dXJlVHlwZRISCgpmYW1pbHlfaWRzGAIgAygJ",
            "GswBCiJDb2xsZWN0aW9uU3ViZmVhdHVyZVByZXN0aWdlTGV2ZWxzEk0KCnN1",
            "YmZlYXR1cmUYASABKA4yOS5XVVByb3Rvcy5EYXRhLkNvbGxlY3Rpb24uQ29s",
            "bGVjdGlvbkZhbWlseS5TdWJmZWF0dXJlVHlwZRJXCg9wcmVzdGlnZV9sZXZl",
            "bHMYAiADKAsyPi5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBs",
            "YXRlLkNvbGxlY3Rpb25QcmVzdGlnZUxldmVsGkIKE0VuY291bnRlclNvdW5k",
            "QmFua3MSFgoOZW5jb3VudGVyX3R5cGUYASABKAkSEwoLc291bmRfYmFua3MY",
            "AiADKAkaWAoLTXVzaWNDb25maWcSFgoObXVzaWNfbG9jYXRpb24YASABKAUS",
            "MQoKcGFyYW1ldGVycxgCIAMoCzIdLldVUHJvdG9zLkRhdGEuQXVkaW9QYXJh",
            "bWV0ZXIa+wQKFkNsaWVudENvbGxlY3Rpb25GYW1pbHkSCgoCaWQYASABKAkS",
            "DAoEbmFtZRgDIAEoCRITCgtkZXNjcmlwdGlvbhgEIAEoCRIMCgRpY29uGAUg",
            "ASgJEhgKEGxhbmRtYXJrX3RleHR1cmUYBiABKAkSFwoPbGFuZG1hcmtfcHJl",
            "ZmFiGAcgASgJEhwKFGxhbmRtYXJrX2Rlc2NyaXB0aW9uGAggASgJEhIKCnNo",
            "b3dfaW5fdWkYCSABKAgSFQoNbGFuZG1hcmtfaWNvbhgLIAEoCRIjCgVjb2xv",
            "chgMIAEoCzIULldVUHJvdG9zLkRhdGEuQ29sb3ISLQoPY29sb3JfaGlnaGxp",
            "Z2h0GA0gASgLMhQuV1VQcm90b3MuRGF0YS5Db2xvchIUCgx0cmFjZV9wcmVm",
            "YWIYDiABKAkSFQoNYm9yZGVyX2ltYWdlcxgPIAMoCRIdChVmYW1pbHlfcnVu",
            "ZXN0b25lX2ljb24YECABKAkSKQoFc291bmQYESABKAsyGi5XVVByb3Rvcy5E",
            "YXRhLlNvdW5kQ29uZmlnEjsKFnVuYXJjaGl2ZV9yZXF1aXJlbWVudHMYEiAB",
            "KAsyGy5XVVByb3Rvcy5EYXRhLlJlcXVpcmVtZW50cxIhChl0cmFjZV9yYXJp",
            "dHlfdmZ4X292ZXJyaWRlGBMgASgJElkKEXByZXN0aWdlX292ZXJyaWRlGBQg",
            "AygLMj4uV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5D",
            "b2xsZWN0aW9uUHJlc3RpZ2VMZXZlbBIiChpoaWRlX2xhbmRtYXJrX2luZm9f",
            "ZGV0YWlscxgVIAEoCBrGAQoXQ29sbGVjdGlvblByZXN0aWdlTGV2ZWwSFAoM",
            "Ym9yZGVyX2ltYWdlGAEgASgJEgwKBG5hbWUYAiABKAkSIwoFY29sb3IYAyAB",
            "KAsyFC5XVVByb3Rvcy5EYXRhLkNvbG9yEhMKC2lzX21ldGFsbGljGAQgASgI",
            "EhIKCmZyYW1lX21lc2gYBSABKAkSEgoKbm9ybWFsX21hcBgGIAEoCRISCgph",
            "bGJlZG9fbWFwGAcgASgJEhEKCXJvdWdobmVzcxgIIAEoAhr5AgoPQ2xpZW50",
            "VmF1bHRJdGVtEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSDAoEaWNvbhgD",
            "IAEoCRIOCgZwcmVmYWIYBCABKAkSDgoGcmFyaXR5GAUgASgDEhMKC2Rlc2Ny",
            "aXB0aW9uGAYgASgJEh8KF3Nob3dfaW5fdmF1bHRfaXRlbV9tZW51GAggASgI",
            "EhEKCWRlbGV0YWJsZRgJIAEoCBIcChRzaG93X2luX3Jld2FyZHNfZmxvdxgK",
            "IAEoCBIjCgVjb2xvchgLIAEoCzIULldVUHJvdG9zLkRhdGEuQ29sb3ISEgoK",
            "YmFja2dyb3VuZBgMIAEoCRIQCghvcmRlcmluZxgNIAEoBRIwCgxyZXdhcmRf",
            "c291bmQYDiABKAsyGi5XVVByb3Rvcy5EYXRhLlNvdW5kQ29uZmlnEh0KFXJl",
            "d2FyZF9zb3VuZF9wcmlvcml0eRgPIAEoBRIbChNzcGluZV9hbmltYXRlZF9p",
            "Y29uGBAgASgJGvwEChFDbGllbnRTdG9yZUNvbmZpZxIKCgJpZBgBIAEoCRJg",
            "ChBzdG9yZV9jYXRlZ29yaWVzGAIgAygLMkYuV1VQcm90b3MuRGF0YS5DbGll",
            "bnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRTdG9yZUNvbmZpZy5TdG9yZUNh",
            "dGVnb3J5ElwKDnN0b3JlX3Jhcml0aWVzGAMgAygLMkQuV1VQcm90b3MuRGF0",
            "YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRTdG9yZUNvbmZpZy5T",
            "dG9yZVJhcml0eRIkChxkZWZhdWx0X3N0b3JlX3BhY2tfaWNvbl9wYXRoGAQg",
            "ASgJGlIKC1N0b3JlUmFyaXR5EgoKAmlkGAEgASgJEigKCnRleHRfY29sb3IY",
            "AiABKAsyFC5XVVByb3Rvcy5EYXRhLkNvbG9yEg0KBXRpdGxlGAMgASgJGqAC",
            "Cg1TdG9yZUNhdGVnb3J5EhEKCWljb25fcGF0aBgBIAEoCRINCgV0aXRsZRgC",
            "IAEoCRIOCgZoZWFkZXIYAyABKAkSKgoMaGVhZGVyX2NvbG9yGAQgASgLMhQu",
            "V1VQcm90b3MuRGF0YS5Db2xvchISCgpiYWNrZ3JvdW5kGAUgASgJEi4KEGJh",
            "Y2tncm91bmRfY29sb3IYBiABKAsyFC5XVVByb3Rvcy5EYXRhLkNvbG9yEhsK",
            "E3N0b3JlX3N1YmNhdGVnb3JpZXMYByADKAkSFQoNaGVhZGVyX3ByZWZhYhgI",
            "IAEoCRIoCgppdGVtX2NvbG9yGAkgASgLMhQuV1VQcm90b3MuRGF0YS5Db2xv",
            "chIPCgdlbmFibGVkGAogASgIGvEECgtDbGllbnRTcGVsbBIKCgJpZBgBIAEo",
            "CRIMCgRuYW1lGAIgASgJEhgKEGNoYXJnZV91cF9lZmZlY3QYAyADKAkSVAoJ",
            "dGltZWxpbmVzGAQgAygLMkEuV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50",
            "R21UZW1wbGF0ZS5DbGllbnRTcGVsbC5UaW1lbGluZXNFbnRyeRJbCg1jcml0",
            "aWNhbF9oaXRzGAUgAygLMkQuV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50",
            "R21UZW1wbGF0ZS5DbGllbnRTcGVsbC5Dcml0aWNhbEhpdHNFbnRyeRIPCgdw",
            "YXR0ZXJuGAYgASgJEhMKC2dseXBoX2ltYWdlGAcgASgJEiEKGXByb3RlZ29f",
            "cGxheWVyX3N1Y2NlZWRfdGwYCCABKAkSIAoYcHJvdGVnb19wbGF5ZXJfZmFp",
            "bGVkX3RsGAkgASgJEicKH3Byb3RlZ29fcGxheWVyX3N1Y2NlZWRfaW50cm9f",
            "dGwYCiABKAkSGAoQZW5kX2J1cnN0X2VmZmVjdBgLIAEoCRISCgpybmdfdmZ4",
            "X3RsGAwgASgJEhkKEXNwZWxsX3JuZ19sb29wX3RsGA0gASgJEhwKFHNwZWxs",
            "X3JuZ19zdWNjZWVkX3RsGA4gASgJEhkKEXNwZWxsX3JuZ19mYWlsX3RsGA8g",
            "ASgJGjAKDlRpbWVsaW5lc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgC",
            "IAEoCToCOAEaMwoRQ3JpdGljYWxIaXRzRW50cnkSCwoDa2V5GAEgASgJEg0K",
            "BXZhbHVlGAIgASgJOgI4ARqxAQoRQ2xpZW50VGVhbUNvbnRyb2wSCgoCaWQY",
            "ASABKAkSEQoJdGVhbV9uYW1lGAIgASgJEhEKCXRlYW1faWNvbhgDIAEoCRIo",
            "Cgp0ZWFtX2NvbG9yGAQgASgLMhQuV1VQcm90b3MuRGF0YS5Db2xvchIYChB0",
            "ZWFtX2hlYWRlcl9pY29uGAUgASgJEhMKC3RlYW1fYmFubmVyGAYgASgJEhEK",
            "CXRlYW1fZmxhZxgHIAEoCRrPBwoXQ2xpZW50U2VsZmllQXZhdGFyQXNzZXQS",
            "CgoCaWQYASABKAkSNgoRdW5sb2NrX2NvbmRpdGlvbnMYAiADKAsyGy5XVVBy",
            "b3Rvcy5EYXRhLlJlcXVpcmVtZW50cxIZChFhc3NldF9zY3JpcHRfbmFtZRgD",
            "IAEoCRIMCgRpY29uGAQgASgJEmgKCmFzc2V0X3R5cGUYBSABKA4yVC5XVVBy",
            "b3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudFNlbGZp",
            "ZUF2YXRhckFzc2V0LlNlbGZpZUF2YXRhckFzc2V0VHlwZRJmCglsZW5zX3R5",
            "cGUYBiABKA4yUy5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBs",
            "YXRlLkNsaWVudFNlbGZpZUF2YXRhckFzc2V0LlNlbGZpZUF2YXRhckxlbnNU",
            "eXBlEg8KB3Zpc2libGUYByABKAgSewoUbWVkaWFfc3VwcG9ydGVkX3R5cGUY",
            "CCABKA4yXS5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRl",
            "LkNsaWVudFNlbGZpZUF2YXRhckFzc2V0LlNlbGZpZUF2YXRhck1lZGlhU3Vw",
            "cG9ydGVkVHlwZRIQCghhbmltYXRlZBgJIAEoCBIVCg1zdG9yZV9wYWNrX2lk",
            "GAogASgJEhAKCG9yZGVyX2lkGAsgASgFEhkKEWlzX2Z1bGxfYm9keV9sZW5z",
            "GAwgASgIEhYKDmlzX2VtcHR5X2Fzc2V0GA0gASgIEhIKCnNob3dfYmFkZ2UY",
            "DiABKAgSOgoVdmlzaWJpbGl0eV9jb25kaXRpb25zGA8gASgLMhsuV1VQcm90",
            "b3MuRGF0YS5SZXF1aXJlbWVudHMSGAoQc3RvY2tfYXNzZXRfbmFtZRgQIAEo",
            "CSJpChVTZWxmaWVBdmF0YXJBc3NldFR5cGUSFgoSVU5LTk9XTl9BU1NFVF9U",
            "WVBFEAASCQoFTEVOU0UQARIKCgZGSUxURVIQAhIJCgVGUkFNRRADEgsKB1NU",
            "SUNLRVIQBBIJCgVTVE9DSxAFIksKFFNlbGZpZUF2YXRhckxlbnNUeXBlEhUK",
            "EVVOS05PV05fTEVOU19UWVBFEAASCAoESEVBRBABEggKBEZBQ0UQAhIICgRO",
            "RUNLEAMiVwoeU2VsZmllQXZhdGFyTWVkaWFTdXBwb3J0ZWRUeXBlEhYKElVO",
            "S05PV05fTUVESUFfVFlQRRAAEgcKA0FMTBABEgkKBVZJREVPEAISCQoFUEhP",
            "VE8QAxo5ChNDbGllbnRScGdzdGF0c0Jsb2NrEgoKAmlkGAEgASgJEhYKDnJl",
            "bGV2YW50X3N0YXRzGAIgAygJGvQGCg9DbGllbnRTdG9yZVBhY2sSCgoCaWQY",
            "ASABKAkSGgoSc2hvd19pbl9pbmxpbmVfYnV5GAIgASgIEgwKBG5hbWUYAyAB",
            "KAkSYQoRc3RvcmVfcGFja19jb25maWcYBCADKAsyRi5XVVByb3Rvcy5EYXRh",
            "LkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudFN0b3JlUGFjay5TdG9y",
            "ZVBhY2tDb25maWcSDgoGc2t1X2lkGAUgASgJEh4KFm92ZXJyaWRlX3RpdGxl",
            "X2xvY19rZXkYBiABKAkSHQoVbWF4X3Jld2FyZF9pdGVtX2NvdW50GAcgASgF",
            "GvgECg9TdG9yZVBhY2tDb25maWcSEAoIcHJpb3JpdHkYASABKAUSFgoOc3Vi",
            "Y2F0ZWdvcnlfaWQYAiABKAkSEQoJaWNvbl9wYXRoGAMgASgJEhwKFHNob3df",
            "cXVhbnRpdHlfYmFubmVyGAQgASgIEhkKEXF1YW50aXR5X292ZXJyaWRlGAUg",
            "ASgJEhMKC3ByZWZhYl9wYXRoGAYgASgJEhYKDm1hcmtldGluZ190ZXh0GAcg",
            "ASgJEhgKEGRlc2NyaXB0aW9uX3RleHQYCCABKAkSEgoKc2hvd19iYWRnZRgJ",
            "IAEoCBITCgtib251c192YWx1ZRgKIAEoBRIRCglyYXJpdHlfaWQYCyABKAkS",
            "bQoJcGFja19zaXplGAwgASgOMlouV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xp",
            "ZW50R21UZW1wbGF0ZS5DbGllbnRTdG9yZVBhY2suU3RvcmVQYWNrQ29uZmln",
            "LlN0b3JlUGFja0NvbmZpZ1NpemUSEwoLc2hvd19pbl9odWQYDSABKAgSFAoM",
            "aHVkX3ByaW9yaXR5GA4gASgFEhUKDWh1ZF9pY29uX3BhdGgYDyABKAkSEgoK",
            "aWNvbjJfcGF0aBgQIAEoCRIcChRwb3B1cF9pbWFnZV9vdmVycmlkZRgRIAEo",
            "CRIdChVoaWRlX3BhY2tfb25fc29sZF9vdXQYEiABKAgSIgoaaGlkZV9wYWNr",
            "X29uX21hcF9odWRfY2xpY2sYEyABKAgiRgoTU3RvcmVQYWNrQ29uZmlnU2l6",
            "ZRIOCgpTSVpFX1NNQUxMEAASDwoLU0laRV9NRURJVU0QARIOCgpTSVpFX0xB",
            "UkdFEAIahhAKEENsaWVudFN0b3J5Ym9hcmQSCgoCaWQYASABKAkSWwoFc3Rl",
            "cHMYAiADKAsyTC5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBs",
            "YXRlLkNsaWVudFN0b3J5Ym9hcmQuQ2xpZW50U3Rvcnlib2FyZFN0ZXASFQoN",
            "dHJpZ2dlcl9wb2ludBgDIAEoCRIQCghwcmlvcml0eRgEIAEoBRrfDgoUQ2xp",
            "ZW50U3Rvcnlib2FyZFN0ZXASFAoMY3VzdG9tX3N0YXRlGAEgASgJEoIBCg5n",
            "ZW5lcmljX2RpYWxvZxgCIAEoCzJoLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNs",
            "aWVudEdtVGVtcGxhdGUuQ2xpZW50U3Rvcnlib2FyZC5DbGllbnRTdG9yeWJv",
            "YXJkU3RlcC5TdG9yeWJvYXJkR2VuZXJpY0RpYWxvZ1N0ZXBIABJxCgVwYXVz",
            "ZRgDIAEoCzJgLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudEdtVGVtcGxh",
            "dGUuQ2xpZW50U3Rvcnlib2FyZC5DbGllbnRTdG9yeWJvYXJkU3RlcC5TdG9y",
            "eWJvYXJkUGF1c2VTdGVwSAASggEKDmFkdmljZV9vdmVybGF5GAQgASgLMmgu",
            "V1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRT",
            "dG9yeWJvYXJkLkNsaWVudFN0b3J5Ym9hcmRTdGVwLlN0b3J5Ym9hcmRBZHZp",
            "Y2VPdmVybGF5U3RlcEgAEowBChNhZHZpY2VfaW50ZXJqZWN0aW9uGAUgASgL",
            "Mm0uV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGll",
            "bnRTdG9yeWJvYXJkLkNsaWVudFN0b3J5Ym9hcmRTdGVwLlN0b3J5Ym9hcmRB",
            "ZHZpY2VJbnRlcmplY3Rpb25TdGVwSAASmAEKGWNvbnZlcnNhdGlvbl9pbnRl",
            "cmplY3Rpb24YBiABKAsycy5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRH",
            "bVRlbXBsYXRlLkNsaWVudFN0b3J5Ym9hcmQuQ2xpZW50U3Rvcnlib2FyZFN0",
            "ZXAuU3Rvcnlib2FyZENvbnZlcnNhdGlvbkludGVyamVjdGlvblN0ZXBIABIc",
            "ChRjYWxsX3RvX2FjdGlvbl9hc3NldBgHIAEoCRIoCiBjYWxsX3RvX2FjdGlv",
            "bl9idXR0b25faWRlbnRpZmllchgIIAEoCRoVChNTdG9yeWJvYXJkUGF1c2VT",
            "dGVwGk8KG1N0b3J5Ym9hcmRHZW5lcmljRGlhbG9nU3RlcBINCgV0aXRsZRgB",
            "IAEoCRIMCgR0ZXh0GAIgASgJEhMKC2J1dHRvbl90ZXh0GAMgASgJGrwBCgxT",
            "cGVlY2hCdWJibGUSIAoYY2hhcmFjdGVyX3BvcnRyYWl0X2ltYWdlGAEgASgJ",
            "Eh0KFWNoYXJhY3Rlcl9uYW1lX2xvY2tleRgCIAEoCRIaChJidWJibGVfcHJl",
            "ZmFiX25hbWUYAyABKAkSHQoVYnViYmxlX2NvbnRlbnRfbG9ja2V5GAQgASgJ",
            "EjAKDHNvdW5kX2NvbmZpZxgFIAEoCzIaLldVUHJvdG9zLkRhdGEuU291bmRD",
            "b25maWcamQEKJlN0b3J5Ym9hcmRDb252ZXJzYXRpb25JbnRlcmplY3Rpb25T",
            "dGVwEm8KDGNvbnZlcnNhdGlvbhgBIAMoCzJZLldVUHJvdG9zLkRhdGEuQ2xp",
            "ZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xpZW50U3Rvcnlib2FyZC5DbGllbnRT",
            "dG9yeWJvYXJkU3RlcC5TcGVlY2hCdWJibGUajgMKG1N0b3J5Ym9hcmRBZHZp",
            "Y2VPdmVybGF5U3RlcBJwCg1zcGVlY2hfYnViYmxlGAEgASgLMlkuV1VQcm90",
            "b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRTdG9yeWJv",
            "YXJkLkNsaWVudFN0b3J5Ym9hcmRTdGVwLlNwZWVjaEJ1YmJsZRIWCg5yZXF1",
            "aXJlc19zY3JpbRgCIAEoCBKSAQoJYWxpZ25tZW50GAMgASgOMn8uV1VQcm90",
            "b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRTdG9yeWJv",
            "YXJkLkNsaWVudFN0b3J5Ym9hcmRTdGVwLlN0b3J5Ym9hcmRBZHZpY2VPdmVy",
            "bGF5U3RlcC5BZHZpY2VPdmVybGF5QWxpZ25tZW50EiEKGXNob3dfY29udGlu",
            "dWVfYWN0aW9uX3RleHQYBCABKAgiLQoWQWR2aWNlT3ZlcmxheUFsaWdubWVu",
            "dBIKCgZib3R0b20QABIHCgN0b3AQARrlAQogU3Rvcnlib2FyZEFkdmljZUlu",
            "dGVyamVjdGlvblN0ZXASIAoYY2hhcmFjdGVyX3BvcnRyYWl0X2ltYWdlGAEg",
            "ASgJEh0KFWNoYXJhY3Rlcl9uYW1lX2xvY2tleRgCIAEoCRIbChNjb250ZW50",
            "X3RleHRfbG9ja2V5GAMgASgJEhoKEmNvbnRlbnRfaW1hZ2VfbmFtZRgEIAEo",
            "CRIwCgxzb3VuZF9jb25maWcYBSABKAsyGi5XVVByb3Rvcy5EYXRhLlNvdW5k",
            "Q29uZmlnEhUKDWJ1dHRvbl9sb2NrZXkYBiABKAlCBgoERGF0YRqrAgoNQ2xp",
            "ZW50UnBnc3RhdBIKCgJpZBgBIAEoCRIPCgd0b29sdGlwGAIgASgJEhIKCnBl",
            "cmNlbnRhZ2UYAyABKAgSDwoHc2hvd191aRgEIAEoCBIRCglzdGF0X25hbWUY",
            "BSABKAkSGQoRZGlzcGxheV90aHJlc2hvbGQYBiABKAUSGQoRaWNvbl9kaXNw",
            "bGF5X3R5cGUYByABKAkSEQoJaW5mb19kZXNjGAggASgJEk4KBWljb25zGAkg",
            "AygLMj8uV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5D",
            "bGllbnRScGdzdGF0Lkljb25zRW50cnkaLAoKSWNvbnNFbnRyeRILCgNrZXkY",
            "ASABKAkSDQoFdmFsdWUYAiABKAk6AjgBGoECCgxDbGllbnRSZWNpcGUSCgoC",
            "aWQYASABKAkSDAoEbmFtZRgCIAEoCRITCgtkZXNjcmlwdGlvbhgDIAEoCRIM",
            "CgRpY29uGAQgASgJEg0KBW1vZGVsGAUgASgJEhIKCmNvbGxlY3RfZngYBiAB",
            "KAkSEwoLY3JhZnRpbmdfZngYByABKAkSEQoJcmV2ZWFsX2Z4GAggASgJEisK",
            "DXByaW1hcnlfY29sb3IYCSABKAsyFC5XVVByb3Rvcy5EYXRhLkNvbG9yEi0K",
            "D3NlY29uZGFyeV9jb2xvchgKIAEoCzIULldVUHJvdG9zLkRhdGEuQ29sb3IS",
            "DQoFaW5kZXgYCyABKAUaZQoLQ2xpZW50UXVlc3QSCgoCaWQYASABKAkSEgoK",
            "c29ydF9vcmRlchgCIAEoBRIaChJxdWVzdF9uYW1lX2xvY19rZXkYAyABKAkS",
            "GgoScXVlc3RfZGVzY19sb2Nfa2V5GAQgASgJGsMCChRDbGllbnRQcm90ZWdv",
            "UGF0dGVybhIKCgJpZBgBIAEoCRJgChN1aV90YXJnZXRfc3RhcnRfcG9zGAIg",
            "ASgLMkMuV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5D",
            "bGllbnRQcm90ZWdvUGF0dGVybi5WZWN0b3IyEh4KFnVpX3RhcmdldF9zdGFy",
            "dF9yYWRpdXMYAyABKAISXgoRdWlfdGFyZ2V0X2VuZF9wb3MYBCABKAsyQy5X",
            "VVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudFBy",
            "b3RlZ29QYXR0ZXJuLlZlY3RvcjISHAoUdWlfdGFyZ2V0X2VuZF9yYWRpdXMY",
            "BSABKAIaHwoHVmVjdG9yMhIJCgF4GAEgASgCEgkKAXkYAiABKAIatwUKEENs",
            "aWVudFByb2Zlc3Npb24SCgoCaWQYASABKAkSFQoNZGlzcGxheV9vcmRlchgC",
            "IAEoBRIMCgRuYW1lGAMgASgJEgwKBGRlc2MYBCABKAkSDAoEaWNvbhgFIAEo",
            "CRITCgttZW50b3JfbmFtZRgGIAEoCRITCgttZW50b3JfZGVzYxgHIAEoCRIT",
            "CgttZW50b3JfaWNvbhgIIAEoCRIZChFzY3JlZW5fYmFja2dyb3VuZBgJIAEo",
            "CRISCgppY29uX3N0YW1wGAogASgJEiAKGHNjcmVlbl9iYWNrZ3JvdW5kX2hl",
            "YWRlchgLIAEoCRIYChBzaG93X2NvbWluZ19zb29uGAwgASgIEiIKGnNob3df",
            "cHJvZmVzc2lvbl9yYW5rX21ldGVyGA4gASgIEiAKGHByb2Zlc3Npb25fYWN0",
            "aXZhdGVkX3NmeBgPIAEoCRJtChRwcm9mZXNzaW9uX3JhbmtzX21hcBgQIAMo",
            "CzJPLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xp",
            "ZW50UHJvZmVzc2lvbi5Qcm9mZXNzaW9uUmFua3NNYXBFbnRyeRIbChNlbmVt",
            "eV9hZmZpbml0eV9pY29uGBEgASgJEhsKE2VuZW15X2FmZmluaXR5X25hbWUY",
            "EiABKAkSFQoNYWZmaW5pdHlfZGVzYxgTIAEoCRIuChBwcm9mZXNzaW9uX2Nv",
            "bG9yGBQgASgLMhQuV1VQcm90b3MuRGF0YS5Db2xvchp2ChdQcm9mZXNzaW9u",
            "UmFua3NNYXBFbnRyeRILCgNrZXkYASABKAkSSgoFdmFsdWUYAiABKAsyOy5X",
            "VVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudFBy",
            "b2Zlc3Npb25SYW5rOgI4ARrKBgoUQ2xpZW50UHJvZmVzc2lvblJhbmsScQoU",
            "cHJvZmVzc2lvbl9ub2Rlc19tYXAYASADKAsyUy5XVVByb3Rvcy5EYXRhLkNs",
            "aWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudFByb2Zlc3Npb25SYW5rLlBy",
            "b2Zlc3Npb25Ob2Rlc01hcEVudHJ5EgwKBG5hbWUYAiABKAkSagoQcHJvZmVz",
            "c2lvbl9ub2RlcxgDIAMoCzJQLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVu",
            "dEdtVGVtcGxhdGUuQ2xpZW50UHJvZmVzc2lvblJhbmsuQ2xpZW50UHJvZmVz",
            "c2lvbk5vZGUSFgoOaW1hZ2VfdW5sb2NrZWQYBCABKAkSGwoTaW1hZ2VfdW5s",
            "b2NrZWRfb3BlbhgFIAEoCRIUCgxpbWFnZV9sb2NrZWQYBiABKAkSGQoRaW1h",
            "Z2VfbG9ja2VkX29wZW4YByABKAkSHAoUcHJvZmVzc2luX3Jhbmtfb3JkZXIY",
            "CCABKAUaiwEKF1Byb2Zlc3Npb25Ob2Rlc01hcEVudHJ5EgsKA2tleRgBIAEo",
            "CRJfCgV2YWx1ZRgCIAEoCzJQLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVu",
            "dEdtVGVtcGxhdGUuQ2xpZW50UHJvZmVzc2lvblJhbmsuQ2xpZW50UHJvZmVz",
            "c2lvbk5vZGU6AjgBGrICChRDbGllbnRQcm9mZXNzaW9uTm9kZRIMCgRuYW1l",
            "GAEgASgJEgwKBGljb24YAiABKAkSegoGbGV2ZWxzGAMgAygLMmouV1VQcm90",
            "b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRQcm9mZXNz",
            "aW9uUmFuay5DbGllbnRQcm9mZXNzaW9uTm9kZS5DbGllbnRQcm9mZXNzaW9u",
            "Tm9kZUxldmVsEhMKC3VubG9ja19kZXNjGAQgASgJEhYKDmNvbXBsZXRlZF9k",
            "ZXNjGAUgASgJEhYKDmNvbXBsZXRlZF9pY29uGAYgASgJGj0KGUNsaWVudFBy",
            "b2Zlc3Npb25Ob2RlTGV2ZWwSIAoYaXNfZ3JhbnRfbmV3X21hcF9hYmlsaXR5",
            "GAEgASgIGlgKDUNsaWVudFBvcnRrZXkSCgoCaWQYASABKAkSDAoEbmFtZRgC",
            "IAEoCRIMCgRpY29uGAMgASgJEh8KF2xvY2FsaXplZF9jb21wbGV0ZV90ZXh0",
            "GAQgASgJGkcKFUNsaWVudE91dHBvc3RUZW1wbGF0ZRIKCgJpZBgBIAEoCRIQ",
            "CghpbnRlcmlvchgCIAEoCRIQCghleHRlcmlvchgDIAEoCRpLChNDbGllbnRN",
            "YXBJbmdyZWRpZW50EgoKAmlkGAEgASgJEg4KBnByZWZhYhgCIAEoCRIYChBo",
            "aWRlX2F0X2NhcGFjaXR5GAMgASgIGvUCChBDbGllbnRNYXBBYmlsaXR5EgoK",
            "AmlkGAEgASgJEgwKBG5hbWUYAiABKAkSDAoEaWNvbhgDIAEoCRITCgtkZXNj",
            "cmlwdGlvbhgEIAEoCRIVCg1lZmZlY3Rfc3ByaXRlGAUgASgJEhMKC3N0YXR1",
            "c19pY29uGAYgASgJEgwKBHNsb3QYByABKAUSFQoNZWZmZWN0X3ByZWZhYhgI",
            "IAEoCRJdCgRydWxlGAkgASgOMk8uV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xp",
            "ZW50R21UZW1wbGF0ZS5DbGllbnRNYXBBYmlsaXR5LkFkZGl0aW9uYWxTZWxl",
            "Y3Rpb25SdWxlInQKF0FkZGl0aW9uYWxTZWxlY3Rpb25SdWxlEh0KGW5vbmVf",
            "YWRkaXRpb25hbF9zZWxlY3Rpb24QABIUChBub19pZl9tYXhfaGVhbHRoEAES",
            "EwoPbm9faWZfbWF4X2ZvY3VzEAISDwoLbm9faWZfYWxpdmUQAxqhAQoMQ2xp",
            "ZW50SGFwdGljEgoKAmlkGAEgASgJEhcKD2lvc3dhaXRfdGltaW5ncxgCIAMo",
            "BRIXCg9pb3NoYXB0aWNfdHlwZXMYAyADKAUSHAoUYW5kcm9pZF93YWl0X3Rp",
            "bWluZ3MYBCADKAUSGgoSYW5kcm9pZF9hbXBsaXR1ZGVzGAUgAygFEhkKEWFu",
            "ZHJvaWRfZHVyYXRpb25zGAYgAygFGrUCCgtDbGllbnRFdmVudBIKCgJpZBgB",
            "IAEoCRIWCg5pc191c2VyX2ZhY2luZxgCIAEoCBISCgp0aXRsZV90ZXh0GAMg",
            "ASgJEhgKEGRlc2NyaXB0aW9uX3RleHQYBCABKAkSDQoFaW1hZ2UYBSABKAkS",
            "FgoOZW5jb3VudGVyX2ljb24YBiABKAkSIgoaZW5jb3VudGVyX2h1ZF90b29s",
            "dGlwX3RleHQYByABKAkSHAoUZW5jb3VudGVyX3N0YXJ0X3RleHQYCCABKAkS",
            "MgoUcXVlc3RfdWlfZnJhbWVfY29sb3IYCSABKAsyFC5XVVByb3Rvcy5EYXRh",
            "LkNvbG9yEjcKGXF1ZXN0X3VpX2JhY2tncm91bmRfY29sb3IYCiABKAsyFC5X",
            "VVByb3Rvcy5EYXRhLkNvbG9yGpABChNDbGllbnRFbmNvdW50ZXJUeXBlEgoK",
            "AmlkGAEgASgJEhcKD3Nob3dfaW5fbG9va19pbhgCIAEoCBIbChNsb29rX2lu",
            "X2Rlc2NyaXB0aW9uGAMgASgJEhQKDGxvb2tfaW5faWNvbhgEIAEoCRIhChlj",
            "b25kaXRpb25hbF90YWdfc3RhdF9kZXNjGAUgASgJGtIhCg9DbGllbnRFbmNv",
            "dW50ZXISCgoCaWQYASABKAkSJAocZW5jb3VudGVyX3NlYXJjaGluZ190aW1l",
            "bGluZRgCIAEoCRIqCiJlbmNvdW50ZXJfc2VhcmNoaW5nX2lkbGVfdGltZWxp",
            "bmVzGAMgAygJEh8KF2VuY291bnRlcl9mbGVlX3RpbWVsaW5lGAQgASgJEhgK",
            "EGVuY291bnRlcl90YXJnZXQYBSABKAkSWwoGc3RhZ2VzGAYgAygLMksuV1VQ",
            "cm90b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRFbmNv",
            "dW50ZXIuQ2xpZW50RW5jb3VudGVyU3RhZ2USHwoXZW5jb3VudGVyX3Rhcmdl",
            "dF9sYXlvdXQYByABKAkSHAoUc2VhcmNoX3RhcmdldF9sYXlvdXQYCCABKAkS",
            "GAoQZW5jb3VudGVyX2Fzc2V0cxgJIAMoCRIcChRlbmNvdW50ZXJfbWFwX3Nw",
            "cml0ZRgKIAEoCRI9ChZlbmNvdW50ZXJfbXVzaWNfcGFyYW1zGAsgAygLMh0u",
            "V1VQcm90b3MuRGF0YS5BdWRpb1BhcmFtZXRlchIMCgRuYW1lGAwgASgJEiIK",
            "GmVuY291bnRlcl9tYXBfc3ByaXRlX2ZyYW1lGA0gASgJEjIKFG1hcF9oZWFs",
            "dGhfYmFyX2NvbG9yGA4gASgLMhQuV1VQcm90b3MuRGF0YS5Db2xvchIyChRo",
            "dWRfaGVhbHRoX2Jhcl9jb2xvchgPIAEoCzIULldVUHJvdG9zLkRhdGEuQ29s",
            "b3Ia+BwKFENsaWVudEVuY291bnRlclN0YWdlEnYKBXN3aXNoGAEgASgLMmUu",
            "V1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0ZS5DbGllbnRF",
            "bmNvdW50ZXIuQ2xpZW50RW5jb3VudGVyU3RhZ2UuQ2xpZW50RW5jb3VudGVy",
            "U3RhZ2VTd2lzaEgAEngKBmNvbWJhdBgCIAEoCzJmLldVUHJvdG9zLkRhdGEu",
            "Q2xpZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xpZW50RW5jb3VudGVyLkNsaWVu",
            "dEVuY291bnRlclN0YWdlLkNsaWVudEVuY291bnRlclN0YWdlQ29tYmF0SAAS",
            "egoHcG9ydGtleRgDIAEoCzJnLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVu",
            "dEdtVGVtcGxhdGUuQ2xpZW50RW5jb3VudGVyLkNsaWVudEVuY291bnRlclN0",
            "YWdlLkNsaWVudEVuY291bnRlclN0YWdlUG9ydGtleUgAEnoKB3BpY3R1cmUY",
            "BCABKAsyZy5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRl",
            "LkNsaWVudEVuY291bnRlci5DbGllbnRFbmNvdW50ZXJTdGFnZS5DbGllbnRF",
            "bmNvdW50ZXJTdGFnZVBpY3R1cmVIABIXCg9kaXNhcHBlYXJfZGVsYXkYBSAB",
            "KAISEgoKaW50cm9fdGV4dBgGIAEoCRJ8ChRzdGFnZV9zZXR1cF9zZXF1ZW5j",
            "ZRgHIAMoCzJeLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudEdtVGVtcGxh",
            "dGUuQ2xpZW50RW5jb3VudGVyLkNsaWVudEVuY291bnRlclN0YWdlLkNsaWVu",
            "dFNlcXVlbmNlRGF0YRKBAQoZc3RhZ2VfY29tcGxldGlvbl9zZXF1ZW5jZRgI",
            "IAMoCzJeLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudEdtVGVtcGxhdGUu",
            "Q2xpZW50RW5jb3VudGVyLkNsaWVudEVuY291bnRlclN0YWdlLkNsaWVudFNl",
            "cXVlbmNlRGF0YRIYChBzcGVsbF9haW1fbGF5b3V0GAkgASgJEhsKE2lkbGVf",
            "bG9vcF90aW1lbGluZXMYCiADKAkSGgoScm5nX2ludHJvX3RpbWVsaW5lGAsg",
            "ASgJEhkKEXJuZ19sb29wX3RpbWVsaW5lGAwgASgJEh0KFXNwZWxsX2ZhaWxl",
            "ZF90aW1lbGluZRgNIAEoCRIZChFjb21iYXRfc3BlbGxfbGlzdBgOIAMoCRrB",
            "AQoSQ2xpZW50U2VxdWVuY2VEYXRhEhUKDXNlcXVlbmNlX3R5cGUYASABKAUS",
            "EAoIb2JzdGFjbGUYAiABKAkSFgoOb2JzdGFjbGVfYWxpYXMYAyABKAkSGAoQ",
            "ZW5jb3VudGVyX3RhcmdldBgEIAEoCRIVCg10aW1lbGluZV9maWxlGAUgASgJ",
            "EhsKE3NlcXVlbmNlX2RlbGF5X3RpbWUYBiABKAISHAoUc2VxdWVuY2VfbGF5",
            "b3V0X25vZGUYByABKAkalgEKGUNsaWVudEVuY291bnRlclN0YWdlU3dpc2gS",
            "PQoWdHJhY2Vfc3VjY2VlZHNfZmFuZmFyZRgBIAEoCzIdLldVUHJvdG9zLkRh",
            "dGEuQXVkaW9QYXJhbWV0ZXISOgoTdHJhY2VfZmFpbHNfZmFuZmFyZRgCIAEo",
            "CzIdLldVUHJvdG9zLkRhdGEuQXVkaW9QYXJhbWV0ZXIakwEKG0NsaWVudEVu",
            "Y291bnRlclN0YWdlUG9ydGtleRIQCghzY2VuZV9pZBgBIAEoCRIRCglwb3J0",
            "YWxfaWQYAiABKAkSGwoTb2JqZWN0X3BsYWNlbWVudF9pZBgDIAEoCRIbChNw",
            "b3J0YWxfcGxhY2VtZW50X2lkGAQgASgJEhUKDXBvcnRrZXlfYXNzZXQYBSAB",
            "KAkaoAIKG0NsaWVudEVuY291bnRlclN0YWdlUGljdHVyZRIKCgJpZBgBIAEo",
            "CRITCgtzcGF3bl9zY2FsZRgCIAEoAhIRCgltaW5fc2NhbGUYAyABKAISEQoJ",
            "bWF4X3NjYWxlGAQgASgCEo0BChRzaW1wbGVfYXJfcG9zX29mZnNldBgFIAEo",
            "CzJvLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xp",
            "ZW50RW5jb3VudGVyLkNsaWVudEVuY291bnRlclN0YWdlLkNsaWVudEVuY291",
            "bnRlclN0YWdlUGljdHVyZS5WZWN0b3IzGioKB1ZlY3RvcjMSCQoBeBgBIAEo",
            "AhIJCgF5GAIgASgCEgkKAXoYAyABKAIagA8KGkNsaWVudEVuY291bnRlclN0",
            "YWdlQ29tYmF0EpMBChFzdGF0ZV9ncmFwaF9ub2RlcxgBIAMoCzJ4LldVUHJv",
            "dG9zLkRhdGEuQ2xpZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xpZW50RW5jb3Vu",
            "dGVyLkNsaWVudEVuY291bnRlclN0YWdlLkNsaWVudEVuY291bnRlclN0YWdl",
            "Q29tYmF0LkNsaWVudENvbWJhdFN0YXRlEpMBCgxlbmVteV90cmFpdHMYAiAD",
            "KAsyfS5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNs",
            "aWVudEVuY291bnRlci5DbGllbnRFbmNvdW50ZXJTdGFnZS5DbGllbnRFbmNv",
            "dW50ZXJTdGFnZUNvbWJhdC5DbGllbnRDb21iYXRFbmVteVRyYWl0ElMKD2Vu",
            "ZW15X3JhbmtfdGFncxgDIAMoCzI6LldVUHJvdG9zLkRhdGEuQ2xpZW50LkNs",
            "aWVudEdtVGVtcGxhdGUuQ2xpZW50RW5jb3VudGVyVHlwZRIZChFlbmVteV9m",
            "bGF2b3JfdGV4dBgEIAEoCRruCgoRQ2xpZW50Q29tYmF0U3RhdGUSpgEKDnBv",
            "c3NpYmxlX21vdmVzGAEgAygLMo0BLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNs",
            "aWVudEdtVGVtcGxhdGUuQ2xpZW50RW5jb3VudGVyLkNsaWVudEVuY291bnRl",
            "clN0YWdlLkNsaWVudEVuY291bnRlclN0YWdlQ29tYmF0LkNsaWVudENvbWJh",
            "dFN0YXRlLkNsaWVudENvbWJhdE1vdmVUeXBlGq8JChRDbGllbnRDb21iYXRN",
            "b3ZlVHlwZRLAAQoNcGxheWVyX2F0dGFjaxgBIAEoCzKmAS5XVVByb3Rvcy5E",
            "YXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudEVuY291bnRlci5D",
            "bGllbnRFbmNvdW50ZXJTdGFnZS5DbGllbnRFbmNvdW50ZXJTdGFnZUNvbWJh",
            "dC5DbGllbnRDb21iYXRTdGF0ZS5DbGllbnRDb21iYXRNb3ZlVHlwZS5DbGll",
            "bnRDb21iYXRQbGF5ZXJBdHRhY2tIABLAAQoNcGxheWVyX2RlZmVuZBgCIAEo",
            "CzKmAS5XVVByb3Rvcy5EYXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNs",
            "aWVudEVuY291bnRlci5DbGllbnRFbmNvdW50ZXJTdGFnZS5DbGllbnRFbmNv",
            "dW50ZXJTdGFnZUNvbWJhdC5DbGllbnRDb21iYXRTdGF0ZS5DbGllbnRDb21i",
            "YXRNb3ZlVHlwZS5DbGllbnRDb21iYXRQbGF5ZXJEZWZlbmRIABLLAQoTcGxh",
            "eWVyX2F1dG9fYWR2YW5jZRgDIAEoCzKrAS5XVVByb3Rvcy5EYXRhLkNsaWVu",
            "dC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudEVuY291bnRlci5DbGllbnRFbmNv",
            "dW50ZXJTdGFnZS5DbGllbnRFbmNvdW50ZXJTdGFnZUNvbWJhdC5DbGllbnRD",
            "b21iYXRTdGF0ZS5DbGllbnRDb21iYXRNb3ZlVHlwZS5DbGllbnRDb21iYXRQ",
            "bGF5ZXJBdXRvQWR2YW5jZUgAEh0KFWVuZW15X2FjdGlvbl90aW1lbGluZRgE",
            "IAEoCRIfChdwbGF5ZXJfc3VjY2VlZF90aW1lbGluZRgFIAEoCRIeChZwbGF5",
            "ZXJfZmFpbGVkX3RpbWVsaW5lGAYgASgJGsYCChhDbGllbnRDb21iYXRQbGF5",
            "ZXJEZWZlbmQS3QEKDHBhdHRlcm5fbGlzdBgBIAMoCzLGAS5XVVByb3Rvcy5E",
            "YXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudEVuY291bnRlci5D",
            "bGllbnRFbmNvdW50ZXJTdGFnZS5DbGllbnRFbmNvdW50ZXJTdGFnZUNvbWJh",
            "dC5DbGllbnRDb21iYXRTdGF0ZS5DbGllbnRDb21iYXRNb3ZlVHlwZS5DbGll",
            "bnRDb21iYXRQbGF5ZXJEZWZlbmQuQ2xpZW50Q29tYmF0UGxheWVyRGVmZW5k",
            "UGF0dGVybhpKCh9DbGllbnRDb21iYXRQbGF5ZXJEZWZlbmRQYXR0ZXJuEg4K",
            "BndlaWdodBgBIAEoBRIXCg9wcm90ZWdvX3BhdHRlcm4YAiABKAkaHwodQ2xp",
            "ZW50Q29tYmF0UGxheWVyQXV0b0FkdmFuY2UaawoYQ2xpZW50Q29tYmF0UGxh",
            "eWVyQXR0YWNrEhcKD2VuZW15X2JvbmVfbmFtZRgBIAEoCRIYChB1aV90YXJn",
            "ZXRfcmFkaXVzGAIgASgCEhwKFHJldGljbGVfdGltZV90b19maWxsGAMgASgC",
            "QgwKCkNvbWJhdE1vdmUaVQoWQ2xpZW50Q29tYmF0RW5lbXlUcmFpdBIKCgJp",
            "ZBgBIAEoCRIMCgRuYW1lGAIgASgJEgwKBGljb24YAyABKAkSEwoLZGVzY3Jp",
            "cHRpb24YBCABKAlCBgoEVHlwZRrzAgogQ2xpZW50RGFpbHlSZXdhcmRNb250",
            "aGx5U2NoZWR1bGUSCgoCaWQYASABKAkScAoNZGFpbHlfcmV3YXJkcxgCIAMo",
            "CzJZLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xp",
            "ZW50RGFpbHlSZXdhcmRNb250aGx5U2NoZWR1bGUuRGFpbHlSZXdhcmRzRW50",
            "cnkajgEKEURhaWx5UmV3YXJkc0VudHJ5EgsKA2tleRgBIAEoDRJoCgV2YWx1",
            "ZRgCIAEoCzJZLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudEdtVGVtcGxh",
            "dGUuQ2xpZW50RGFpbHlSZXdhcmRNb250aGx5U2NoZWR1bGUuQ2xpZW50RGFp",
            "bHlSZXdhcmQ6AjgBGkAKEUNsaWVudERhaWx5UmV3YXJkEhUKDWhpZGVfYXNf",
            "Y3JhdGUYASABKAgSFAoMbWFrZV9zcGFya2x5GAIgASgIGqgBChRDbGllbnRD",
            "b2xsZWN0aW9uUGFnZRIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEhMKC3Bh",
            "Z2VfcHJlZmFiGAMgASgJEg8KB2ljb25fYmcYBCABKAkSEgoKc2hvd19pbl91",
            "aRgFIAEoCBI8Chd2aXNpYmlsaXR5X3JlcXVpcmVtZW50cxgGIAEoCzIbLldV",
            "UHJvdG9zLkRhdGEuUmVxdWlyZW1lbnRzGvQCChRDbGllbnRDb2xsZWN0aW9u",
            "SXRlbRIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEhcKD3JldHVybl9sb2Nh",
            "dGlvbhgDIAEoCRITCgtkZXNjcmlwdGlvbhgEIAEoCRIVCg1pY29uX3JldHVy",
            "bmVkGAUgASgJEhIKCnNob3dfaW5fdWkYBiABKAgSYQoMbXlzdGVyeV9kYXRh",
            "GAcgAygLMksuV1VQcm90b3MuRGF0YS5DbGllbnQuQ2xpZW50R21UZW1wbGF0",
            "ZS5DbGllbnRDb2xsZWN0aW9uSXRlbS5NeXN0ZXJ5SXRlbUluZm8SJAocc3Rp",
            "Y2tlcl9wbGFjZWRfc3Rvcnlib2FyZF9pZBgIIAEoCRpgCg9NeXN0ZXJ5SXRl",
            "bUluZm8SDAoEbmFtZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCRIMCgRp",
            "Y29uGAMgASgJEhwKFHBsYWNlZF9zdG9yeWJvYXJkX2lkGAQgASgJGtkDChVD",
            "bGllbnRDaGFtYmVyVGVtcGxhdGUSCgoCaWQYASABKAkSDAoEbmFtZRgCIAEo",
            "CRIoCiBjaGFsbGVuZ2VfbGVhdmluZ193YXJuaW5nX3JhZGl1cxgDIAEoAhIT",
            "CgthcmVuYV9zY2VuZRgEIAEoCRIXCg9iYXNlX2RpZmZpY3VsdHkYBSABKAUS",
            "dwoWcnVuZXN0b25lX2RpZmZpY3VsdGllcxgGIAMoCzJXLldVUHJvdG9zLkRh",
            "dGEuQ2xpZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xpZW50Q2hhbWJlclRlbXBs",
            "YXRlLlJ1bmVzdG9uZURpZmZpY3VsdGllc0VudHJ5EmMKDHBhcmttb2RlX2Jn",
            "cxgHIAMoCzJNLldVUHJvdG9zLkRhdGEuQ2xpZW50LkNsaWVudEdtVGVtcGxh",
            "dGUuQ2xpZW50Q2hhbWJlclRlbXBsYXRlLlBhcmttb2RlQmdzRW50cnkaPAoa",
            "UnVuZXN0b25lRGlmZmljdWx0aWVzRW50cnkSCwoDa2V5GAEgASgFEg0KBXZh",
            "bHVlGAIgASgFOgI4ARoyChBQYXJrbW9kZUJnc0VudHJ5EgsKA2tleRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoCToCOAEaRgoUQ2xpZW50Q2hhbGxlbmdlQm9udXMS",
            "CgoCaWQYASABKAkSFAoMZGlzcGxheV90ZXh0GAIgASgJEgwKBGljb24YAyAB",
            "KAkazAQKCkNsaWVudEJ1ZmYSCgoCaWQYASABKAkSHAoUcmV3YXJkX2JvbnVz",
            "X2xvY19rZXkYAyABKAkSGQoRcmV3YXJkX2JvbnVzX2ljb24YBCABKAkSEwoL",
            "c3RhdHVzX2ljb24YBSABKAkSFAoMZGlzcGxheV9uYW1lGAYgASgJEmsKFWNv",
            "bmRpdGlvbmFsX21vZGlmaWVycxgHIAMoCzJMLldVUHJvdG9zLkRhdGEuQ2xp",
            "ZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xpZW50QnVmZi5DbGllbnRDb25kaXRp",
            "b25hbE1vZGlmaWVycxrgAgoaQ2xpZW50Q29uZGl0aW9uYWxNb2RpZmllcnMS",
            "DAoEZGVzYxgBIAEoCRJuCgltb2RpZmllcnMYAiADKAsyWy5XVVByb3Rvcy5E",
            "YXRhLkNsaWVudC5DbGllbnRHbVRlbXBsYXRlLkNsaWVudEJ1ZmYuQ2xpZW50",
            "Q29uZGl0aW9uYWxNb2RpZmllcnMuTW9kaWZpZXJzRW50cnkamAEKDk1vZGlm",
            "aWVyc0VudHJ5EgsKA2tleRgBIAEoCRJ1CgV2YWx1ZRgCIAEoCzJmLldVUHJv",
            "dG9zLkRhdGEuQ2xpZW50LkNsaWVudEdtVGVtcGxhdGUuQ2xpZW50QnVmZi5D",
            "bGllbnRDb25kaXRpb25hbE1vZGlmaWVycy5DbGllbnRDb25kaXRpb25hbE1v",
            "ZGlmaWVyOgI4ARopChlDbGllbnRDb25kaXRpb25hbE1vZGlmaWVyEgwKBGRl",
            "c2MYASABKAkaNgoWQ2xpZW50U3RvcmVTdWJjYXRlZ29yeRIKCgJpZBgBIAEo",
            "CRIQCghwcmlvcml0eRgCIAEoBRq1AgoTQ2xpZW50VmF1bHRDYXRlZ29yeRIK",
            "CgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJ",
            "EgwKBGljb24YBCABKAkSFQoNc2hvd19pbl92YXVsdBgFIAEoCBIZChF3YXJu",
            "aW5nX3RocmVzaG9sZBgGIAEoAhIeChZjYXRlZ29yeV9kaXNwbGF5X29yZGVy",
            "GAcgASgFEi0KJWluY3JlYXNlX2NhcGFjaXR5X3N0b3JlX3BhY2tfcHJvdG9f",
            "aWQYCCABKAkSLgomaW5jcmVhc2VfY2FwYWNpdHlfc3RvcmVfcGFja19wcm90",
            "b19pZHMYCSADKAkSFwoPc3RvcmVfaXRlbV9uYW1lGAogASgJEhcKD3N0b3Jl",
            "X2l0ZW1faWNvbhgLIAEoCRpWChVDbGllbnRXYWxrYm94VGVtcGxhdGUSCgoC",
            "aWQYASABKAkSDAoEbmFtZRgCIAEoCRIMCgRpY29uGAMgASgJEhUKDXVubG9j",
            "a2VkX2ljb24YBCABKAkaQQoQQ2xpZW50TWFzdGVyTm90ZRIKCgJpZBgBIAEo",
            "CRIMCgRuYW1lGAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJGnYKE0NsaWVu",
            "dEJvbnVzQ2F0ZWdvcnkSCgoCaWQYASABKAkSIwoFY29sb3IYAiABKAsyFC5X",
            "VVByb3Rvcy5EYXRhLkNvbG9yEhQKDG5hbWVfbG9jX2tleRgDIAEoCRIYChBi",
            "YWNrZ3JvdW5kX2ltYWdlGAQgASgJQg0KC01lc3NhZ2VUeXBlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::WUProtos.Data.Client.ClientProfileConfigReflection.Descriptor, global::WUProtos.Data.ColorReflection.Descriptor, global::WUProtos.Data.RequirementsReflection.Descriptor, global::WUProtos.Data.AudioParameterReflection.Descriptor, global::WUProtos.Data.SoundConfigReflection.Descriptor, global::WUProtos.Data.Collection.CollectionFamilyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate), global::WUProtos.Data.Client.ClientGmTemplate.Parser, new[]{ "CollectionFamily", "CollectionItem", "WalkboxTemplate", "Encounter", "Portkey", "VaultItem", "GameConfig", "StorePack", "Spell", "ProtegoPattern", "ChamberTemplate", "CollectionPage", "TeamControl", "StoreConfig", "StoreSubcategory", "Haptic", "Profession", "BonusCategory", "VaultCategory", "ProfileConfig", "MapIngredient", "MapAbility", "Storyboard", "Rpgstat", "RpgstatsBlock", "SelfieAvatarAsset", "Buff", "OutpostTemplate", "ChallengeBonus", "Recipe", "MasterNote", "Quest", "DailyRewardMonthlySchedule", "EncounterType", "Event" }, new[]{ "MessageType" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Parser, new[]{ "Id", "TargetGlyphColor", "ReticleGlyphColor", "AlignedGlyphColor", "EncounterAngleOfSpawn", "TimeBeforeArHintDisplay", "MaxLockDistanceFromOrigin", "DistanceBehindCameraToSpawnMarker", "TimeBeforeSwitchToArSimple", "TutorialEncounterId", "EncounterResetGforce", "LocalMapUpdateIntervalSeconds", "FlooNetworkConfig", "FlooContributionButtonValues", "AppBackgroundMap", "AppBackgroundFull", "TriggerableCooldown", "LevelUpTriggerPriority", "WalkboxTriggerPriority", "PermissionsConfig", "SwishGameScoringThresholds", "SwishGameScoringBonuses", "AudioConfig", "AudioInitialBanks", "SubfeaturePrestigeLevels", "BonusConfig", "PortkeyWrackspurtCollectionHapticKey", "ParkmodeBgs", "PotionMasternoteUnlockTreshold", "SubfeatureFamilyOrders", "BatterySaverProfiles", "RateAppMinPlayerLevel", "RateAppCooldownDays", "TooFastCooldown", "EncounterBanks", "DailyRewardPopupTriggerPriority", "RateAppTriggerPriority", "FtueVideo", "TutorialPotionBrew", "GenericTraceSpellFailSfx", "TracingSpellGlyphSfx", "TracingCompleteSfx", "SpellBarIncreasingSfx", "BadSpellCastSfx", "GoodSpellCastSfx", "GreatSpellCastSfx", "PerfectSpellCastSfx", "RegistryStickerPlacedHapticKey", "RewardsVesselByRarity", "RewardsSoundBanks", "FirstStickerStoryboardId", "FirstStickerCollectionId", "AvatarDefaultColor", "LockOnCompletionSfx", "LockOnTimeUpSfx", "ProtegoCastSfx", "ProtegoTimeUpSfx", "MsBeforeFinalIntensity", "MsBeforeSecondaryIntensity", "ChallengeThirtySecondsLeftStinger", "ChallengeEncounterPlayerVictoriousStinger", "ChallengeEncounterPlayerDefeatedStinger", "ChallengeBeginStinger", "ChallengeFinishVictory", "ChallengeFinishDefeat", "ChallengeEliteMobSpawnsStinger", "InternetReachabilityCheckUrl", "RateAppMaxPrompts", "RateAppVersion", "RateAppTriggerWizardingChallenge", "RateAppTriggerStickerPageComplete", "RateAppTriggerEventQuestLineComplete", "ChecksUntilGpsPrompt", "FortressSoundBanks", "TenSecondsLeftInChallengeSfx", "LongSecondLeftInChallengeSfx", "ShortHalfSecondLeftInChallengeSfx", "OneMinuteWarningSfx", "RateAppTriggerMapEnter", "ProfessionsAffinityAdvantageIcon", "ProfessionsAffinityNeutralIcon", "ProfessionsAffinityDisadvantageIcon", "InternetOutageBackoffTime", "ArCoreStoryboardTrigger", "VoiceOverMappings", "InAppMessageTriggerPriority", "InternalFortressInteractRange", "LowConnectivityThresholdBytesPerMs", "GameSizeInKb", "WcMapEnemyMarkerBuffOccupiedImage", "WcMapEnemyMarkerBuffVacantImage", "WcEnemyLookInBuffBorderImage", "LocalizationMappings" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Parser, new[]{ "FromAssets", "FromUrl", "QualityBuckets", "QualityMappings" }, new[]{ "VideoSource" }, null, new pbr::GeneratedClrTypeInfo[] { null, new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoQualityMapping), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoQualityMapping.Parser, new[]{ "Measure", "LowerBound", "UpperBound" }, null, new[]{ typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoQualityMapping.Types.Measure) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoFallbackDefinition), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoFallbackDefinition.Parser, new[]{ "NameDefinitions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoNameDefinition), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoNameDefinition.Parser, new[]{ "NameFormat" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFlooNetworkConfig), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFlooNetworkConfig.Parser, new[]{ "ElectoralVotesPerFlooPoints" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFlooNetworkConfig.Types.ElectoralVotesPerFlooPoints), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFlooNetworkConfig.Types.ElectoralVotesPerFlooPoints.Parser, new[]{ "FortressPrefabs" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientBonusConfig), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientBonusConfig.Parser, new[]{ "Id", "AccuracyTier", "AccuracyTierBonusId", "AccuracyTierBonusText", "FirstTimeBonusId", "FirstTimeBonusText", "LifeTimeBonusId", "LifeTimeBonusText" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.LocalizationMapping), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.LocalizationMapping.Parser, new[]{ "LanguageCode", "LocString", "IsEnabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.PermissionsConfigStaticList), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.PermissionsConfigStaticList.Parser, new[]{ "List" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.PermissionsConfigStaticList.Types.PermissionsConfigStaticData), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.PermissionsConfigStaticList.Types.PermissionsConfigStaticData.Parser, new[]{ "Id", "InitialPrompt", "DenialPrompt", "Optional", "Title", "BeggingEnabled" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.VoiceOverLanguageMapping), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.VoiceOverLanguageMapping.Parser, new[]{ "LanguageCode", "LanguageFolder" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.AudioConfig), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.AudioConfig.Parser, new[]{ "MusicEvent", "MusicConfig" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.BatterySaverProfile), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.BatterySaverProfile.Parser, new[]{ "Profiles", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.CollectionSubfeatureFamilyOrders), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.CollectionSubfeatureFamilyOrders.Parser, new[]{ "Subfeature", "FamilyIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.CollectionSubfeaturePrestigeLevels), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.CollectionSubfeaturePrestigeLevels.Parser, new[]{ "Subfeature", "PrestigeLevels" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.EncounterSoundBanks), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.EncounterSoundBanks.Parser, new[]{ "EncounterType", "SoundBanks" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.MusicConfig), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.MusicConfig.Parser, new[]{ "MusicLocation", "Parameters" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionFamily), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionFamily.Parser, new[]{ "Id", "Name", "Description", "Icon", "LandmarkTexture", "LandmarkPrefab", "LandmarkDescription", "ShowInUi", "LandmarkIcon", "Color", "ColorHighlight", "TracePrefab", "BorderImages", "FamilyRunestoneIcon", "Sound", "UnarchiveRequirements", "TraceRarityVfxOverride", "PrestigeOverride", "HideLandmarkInfoDetails" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.CollectionPrestigeLevel), global::WUProtos.Data.Client.ClientGmTemplate.Types.CollectionPrestigeLevel.Parser, new[]{ "BorderImage", "Name", "Color", "IsMetallic", "FrameMesh", "NormalMap", "AlbedoMap", "Roughness" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientVaultItem), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientVaultItem.Parser, new[]{ "Id", "Name", "Icon", "Prefab", "Rarity", "Description", "ShowInVaultItemMenu", "Deletable", "ShowInRewardsFlow", "Color", "Background", "Ordering", "RewardSound", "RewardSoundPriority", "SpineAnimatedIcon" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Parser, new[]{ "Id", "StoreCategories", "StoreRarities", "DefaultStorePackIconPath" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Types.StoreRarity), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Types.StoreRarity.Parser, new[]{ "Id", "TextColor", "Title" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Types.StoreCategory), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Types.StoreCategory.Parser, new[]{ "IconPath", "Title", "Header", "HeaderColor", "Background", "BackgroundColor", "StoreSubcategories", "HeaderPrefab", "ItemColor", "Enabled" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSpell), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSpell.Parser, new[]{ "Id", "Name", "ChargeUpEffect", "Timelines", "CriticalHits", "Pattern", "GlyphImage", "ProtegoPlayerSucceedTl", "ProtegoPlayerFailedTl", "ProtegoPlayerSucceedIntroTl", "EndBurstEffect", "RngVfxTl", "SpellRngLoopTl", "SpellRngSucceedTl", "SpellRngFailTl" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientTeamControl), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientTeamControl.Parser, new[]{ "Id", "TeamName", "TeamIcon", "TeamColor", "TeamHeaderIcon", "TeamBanner", "TeamFlag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset.Parser, new[]{ "Id", "UnlockConditions", "AssetScriptName", "Icon", "AssetType", "LensType", "Visible", "MediaSupportedType", "Animated", "StorePackId", "OrderId", "IsFullBodyLens", "IsEmptyAsset", "ShowBadge", "VisibilityConditions", "StockAssetName" }, null, new[]{ typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset.Types.SelfieAvatarAssetType), typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset.Types.SelfieAvatarLensType), typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset.Types.SelfieAvatarMediaSupportedType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRpgstatsBlock), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRpgstatsBlock.Parser, new[]{ "Id", "RelevantStats" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack.Parser, new[]{ "Id", "ShowInInlineBuy", "Name", "StorePackConfig", "SkuId", "OverrideTitleLocKey", "MaxRewardItemCount" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack.Types.StorePackConfig), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack.Types.StorePackConfig.Parser, new[]{ "Priority", "SubcategoryId", "IconPath", "ShowQuantityBanner", "QuantityOverride", "PrefabPath", "MarketingText", "DescriptionText", "ShowBadge", "BonusValue", "RarityId", "PackSize", "ShowInHud", "HudPriority", "HudIconPath", "Icon2Path", "PopupImageOverride", "HidePackOnSoldOut", "HidePackOnMapHudClick" }, null, new[]{ typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack.Types.StorePackConfig.Types.StorePackConfigSize) }, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Parser, new[]{ "Id", "Steps", "TriggerPoint", "Priority" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Parser, new[]{ "CustomState", "GenericDialog", "Pause", "AdviceOverlay", "AdviceInterjection", "ConversationInterjection", "CallToActionAsset", "CallToActionButtonIdentifier" }, new[]{ "Data" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardPauseStep), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardPauseStep.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardGenericDialogStep), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardGenericDialogStep.Parser, new[]{ "Title", "Text", "ButtonText" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.SpeechBubble), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.SpeechBubble.Parser, new[]{ "CharacterPortraitImage", "CharacterNameLockey", "BubblePrefabName", "BubbleContentLockey", "SoundConfig" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardConversationInterjectionStep), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardConversationInterjectionStep.Parser, new[]{ "Conversation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceOverlayStep), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceOverlayStep.Parser, new[]{ "SpeechBubble", "RequiresScrim", "Alignment", "ShowContinueActionText" }, null, new[]{ typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceOverlayStep.Types.AdviceOverlayAlignment) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceInterjectionStep), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceInterjectionStep.Parser, new[]{ "CharacterPortraitImage", "CharacterNameLockey", "ContentTextLockey", "ContentImageName", "SoundConfig", "ButtonLockey" }, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRpgstat), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRpgstat.Parser, new[]{ "Id", "Tooltip", "Percentage", "ShowUi", "StatName", "DisplayThreshold", "IconDisplayType", "InfoDesc", "Icons" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRecipe), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRecipe.Parser, new[]{ "Id", "Name", "Description", "Icon", "Model", "CollectFx", "CraftingFx", "RevealFx", "PrimaryColor", "SecondaryColor", "Index" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientQuest), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientQuest.Parser, new[]{ "Id", "SortOrder", "QuestNameLocKey", "QuestDescLocKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern.Parser, new[]{ "Id", "UiTargetStartPos", "UiTargetStartRadius", "UiTargetEndPos", "UiTargetEndRadius" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern.Types.Vector2), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern.Types.Vector2.Parser, new[]{ "X", "Y" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfession), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfession.Parser, new[]{ "Id", "DisplayOrder", "Name", "Desc", "Icon", "MentorName", "MentorDesc", "MentorIcon", "ScreenBackground", "IconStamp", "ScreenBackgroundHeader", "ShowComingSoon", "ShowProfessionRankMeter", "ProfessionActivatedSfx", "ProfessionRanksMap", "EnemyAffinityIcon", "EnemyAffinityName", "AffinityDesc", "ProfessionColor" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Parser, new[]{ "ProfessionNodesMap", "Name", "ProfessionNodes", "ImageUnlocked", "ImageUnlockedOpen", "ImageLocked", "ImageLockedOpen", "ProfessinRankOrder" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode.Parser, new[]{ "Name", "Icon", "Levels", "UnlockDesc", "CompletedDesc", "CompletedIcon" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode.Types.ClientProfessionNodeLevel), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode.Types.ClientProfessionNodeLevel.Parser, new[]{ "IsGrantNewMapAbility" }, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientPortkey), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientPortkey.Parser, new[]{ "Id", "Name", "Icon", "LocalizedCompleteText" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientOutpostTemplate), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientOutpostTemplate.Parser, new[]{ "Id", "Interior", "Exterior" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapIngredient), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapIngredient.Parser, new[]{ "Id", "Prefab", "HideAtCapacity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapAbility), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapAbility.Parser, new[]{ "Id", "Name", "Icon", "Description", "EffectSprite", "StatusIcon", "Slot", "EffectPrefab", "Rule" }, null, new[]{ typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapAbility.Types.AdditionalSelectionRule) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientHaptic), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientHaptic.Parser, new[]{ "Id", "IoswaitTimings", "IoshapticTypes", "AndroidWaitTimings", "AndroidAmplitudes", "AndroidDurations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEvent), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEvent.Parser, new[]{ "Id", "IsUserFacing", "TitleText", "DescriptionText", "Image", "EncounterIcon", "EncounterHudTooltipText", "EncounterStartText", "QuestUiFrameColor", "QuestUiBackgroundColor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounterType), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounterType.Parser, new[]{ "Id", "ShowInLookIn", "LookInDescription", "LookInIcon", "ConditionalTagStatDesc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Parser, new[]{ "Id", "EncounterSearchingTimeline", "EncounterSearchingIdleTimelines", "EncounterFleeTimeline", "EncounterTarget", "Stages", "EncounterTargetLayout", "SearchTargetLayout", "EncounterAssets", "EncounterMapSprite", "EncounterMusicParams", "Name", "EncounterMapSpriteFrame", "MapHealthBarColor", "HudHealthBarColor" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Parser, new[]{ "Swish", "Combat", "Portkey", "Picture", "DisappearDelay", "IntroText", "StageSetupSequence", "StageCompletionSequence", "SpellAimLayout", "IdleLoopTimelines", "RngIntroTimeline", "RngLoopTimeline", "SpellFailedTimeline", "CombatSpellList" }, new[]{ "Type" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientSequenceData), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientSequenceData.Parser, new[]{ "SequenceType", "Obstacle", "ObstacleAlias", "EncounterTarget", "TimelineFile", "SequenceDelayTime", "SequenceLayoutNode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageSwish), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageSwish.Parser, new[]{ "TraceSucceedsFanfare", "TraceFailsFanfare" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePortkey), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePortkey.Parser, new[]{ "SceneId", "PortalId", "ObjectPlacementId", "PortalPlacementId", "PortkeyAsset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePicture), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePicture.Parser, new[]{ "Id", "SpawnScale", "MinScale", "MaxScale", "SimpleArPosOffset" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePicture.Types.Vector3), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePicture.Types.Vector3.Parser, new[]{ "X", "Y", "Z" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Parser, new[]{ "StateGraphNodes", "EnemyTraits", "EnemyRankTags", "EnemyFlavorText" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Parser, new[]{ "PossibleMoves" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Parser, new[]{ "PlayerAttack", "PlayerDefend", "PlayerAutoAdvance", "EnemyActionTimeline", "PlayerSucceedTimeline", "PlayerFailedTimeline" }, new[]{ "CombatMove" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerDefend), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerDefend.Parser, new[]{ "PatternList" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerDefend.Types.ClientCombatPlayerDefendPattern), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerDefend.Types.ClientCombatPlayerDefendPattern.Parser, new[]{ "Weight", "ProtegoPattern" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerAutoAdvance), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerAutoAdvance.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerAttack), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerAttack.Parser, new[]{ "EnemyBoneName", "UiTargetRadius", "ReticleTimeToFill" }, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatEnemyTrait), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatEnemyTrait.Parser, new[]{ "Id", "Name", "Icon", "Description" }, null, null, null)})})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientDailyRewardMonthlySchedule), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientDailyRewardMonthlySchedule.Parser, new[]{ "Id", "DailyRewards" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientDailyRewardMonthlySchedule.Types.ClientDailyReward), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientDailyRewardMonthlySchedule.Types.ClientDailyReward.Parser, new[]{ "HideAsCrate", "MakeSparkly" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionPage), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionPage.Parser, new[]{ "Id", "Name", "PagePrefab", "IconBg", "ShowInUi", "VisibilityRequirements" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionItem), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionItem.Parser, new[]{ "Id", "Name", "ReturnLocation", "Description", "IconReturned", "ShowInUi", "MysteryData", "StickerPlacedStoryboardId" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionItem.Types.MysteryItemInfo), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionItem.Types.MysteryItemInfo.Parser, new[]{ "Name", "Description", "Icon", "PlacedStoryboardId" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientChamberTemplate), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientChamberTemplate.Parser, new[]{ "Id", "Name", "ChallengeLeavingWarningRadius", "ArenaScene", "BaseDifficulty", "RunestoneDifficulties", "ParkmodeBgs" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientChallengeBonus), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientChallengeBonus.Parser, new[]{ "Id", "DisplayText", "Icon" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Parser, new[]{ "Id", "RewardBonusLocKey", "RewardBonusIcon", "StatusIcon", "DisplayName", "ConditionalModifiers" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Types.ClientConditionalModifiers), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Types.ClientConditionalModifiers.Parser, new[]{ "Desc", "Modifiers" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Types.ClientConditionalModifiers.Types.ClientConditionalModifier), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Types.ClientConditionalModifiers.Types.ClientConditionalModifier.Parser, new[]{ "Desc" }, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreSubcategory), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreSubcategory.Parser, new[]{ "Id", "Priority" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientVaultCategory), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientVaultCategory.Parser, new[]{ "Id", "Name", "Description", "Icon", "ShowInVault", "WarningThreshold", "CategoryDisplayOrder", "IncreaseCapacityStorePackProtoId", "IncreaseCapacityStorePackProtoIds", "StoreItemName", "StoreItemIcon" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientWalkboxTemplate), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientWalkboxTemplate.Parser, new[]{ "Id", "Name", "Icon", "UnlockedIcon" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMasterNote), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMasterNote.Parser, new[]{ "Id", "Name", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBonusCategory), global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBonusCategory.Parser, new[]{ "Id", "Color", "NameLocKey", "BackgroundImage" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientGmTemplate : pb::IMessage<ClientGmTemplate> {
    private static readonly pb::MessageParser<ClientGmTemplate> _parser = new pb::MessageParser<ClientGmTemplate>(() => new ClientGmTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientGmTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.Client.ClientGmTemplateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientGmTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientGmTemplate(ClientGmTemplate other) : this() {
      switch (other.MessageTypeCase) {
        case MessageTypeOneofCase.CollectionFamily:
          CollectionFamily = other.CollectionFamily.Clone();
          break;
        case MessageTypeOneofCase.CollectionItem:
          CollectionItem = other.CollectionItem.Clone();
          break;
        case MessageTypeOneofCase.WalkboxTemplate:
          WalkboxTemplate = other.WalkboxTemplate.Clone();
          break;
        case MessageTypeOneofCase.Encounter:
          Encounter = other.Encounter.Clone();
          break;
        case MessageTypeOneofCase.Portkey:
          Portkey = other.Portkey.Clone();
          break;
        case MessageTypeOneofCase.VaultItem:
          VaultItem = other.VaultItem.Clone();
          break;
        case MessageTypeOneofCase.GameConfig:
          GameConfig = other.GameConfig.Clone();
          break;
        case MessageTypeOneofCase.StorePack:
          StorePack = other.StorePack.Clone();
          break;
        case MessageTypeOneofCase.Spell:
          Spell = other.Spell.Clone();
          break;
        case MessageTypeOneofCase.ProtegoPattern:
          ProtegoPattern = other.ProtegoPattern.Clone();
          break;
        case MessageTypeOneofCase.ChamberTemplate:
          ChamberTemplate = other.ChamberTemplate.Clone();
          break;
        case MessageTypeOneofCase.CollectionPage:
          CollectionPage = other.CollectionPage.Clone();
          break;
        case MessageTypeOneofCase.TeamControl:
          TeamControl = other.TeamControl.Clone();
          break;
        case MessageTypeOneofCase.StoreConfig:
          StoreConfig = other.StoreConfig.Clone();
          break;
        case MessageTypeOneofCase.StoreSubcategory:
          StoreSubcategory = other.StoreSubcategory.Clone();
          break;
        case MessageTypeOneofCase.Haptic:
          Haptic = other.Haptic.Clone();
          break;
        case MessageTypeOneofCase.Profession:
          Profession = other.Profession.Clone();
          break;
        case MessageTypeOneofCase.BonusCategory:
          BonusCategory = other.BonusCategory.Clone();
          break;
        case MessageTypeOneofCase.VaultCategory:
          VaultCategory = other.VaultCategory.Clone();
          break;
        case MessageTypeOneofCase.ProfileConfig:
          ProfileConfig = other.ProfileConfig.Clone();
          break;
        case MessageTypeOneofCase.MapIngredient:
          MapIngredient = other.MapIngredient.Clone();
          break;
        case MessageTypeOneofCase.MapAbility:
          MapAbility = other.MapAbility.Clone();
          break;
        case MessageTypeOneofCase.Storyboard:
          Storyboard = other.Storyboard.Clone();
          break;
        case MessageTypeOneofCase.Rpgstat:
          Rpgstat = other.Rpgstat.Clone();
          break;
        case MessageTypeOneofCase.RpgstatsBlock:
          RpgstatsBlock = other.RpgstatsBlock.Clone();
          break;
        case MessageTypeOneofCase.SelfieAvatarAsset:
          SelfieAvatarAsset = other.SelfieAvatarAsset.Clone();
          break;
        case MessageTypeOneofCase.Buff:
          Buff = other.Buff.Clone();
          break;
        case MessageTypeOneofCase.OutpostTemplate:
          OutpostTemplate = other.OutpostTemplate.Clone();
          break;
        case MessageTypeOneofCase.ChallengeBonus:
          ChallengeBonus = other.ChallengeBonus.Clone();
          break;
        case MessageTypeOneofCase.Recipe:
          Recipe = other.Recipe.Clone();
          break;
        case MessageTypeOneofCase.MasterNote:
          MasterNote = other.MasterNote.Clone();
          break;
        case MessageTypeOneofCase.Quest:
          Quest = other.Quest.Clone();
          break;
        case MessageTypeOneofCase.DailyRewardMonthlySchedule:
          DailyRewardMonthlySchedule = other.DailyRewardMonthlySchedule.Clone();
          break;
        case MessageTypeOneofCase.EncounterType:
          EncounterType = other.EncounterType.Clone();
          break;
        case MessageTypeOneofCase.Event:
          Event = other.Event.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientGmTemplate Clone() {
      return new ClientGmTemplate(this);
    }

    /// <summary>Field number for the "collection_family" field.</summary>
    public const int CollectionFamilyFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionFamily CollectionFamily {
      get { return messageTypeCase_ == MessageTypeOneofCase.CollectionFamily ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionFamily) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.CollectionFamily;
      }
    }

    /// <summary>Field number for the "collection_item" field.</summary>
    public const int CollectionItemFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionItem CollectionItem {
      get { return messageTypeCase_ == MessageTypeOneofCase.CollectionItem ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionItem) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.CollectionItem;
      }
    }

    /// <summary>Field number for the "walkbox_template" field.</summary>
    public const int WalkboxTemplateFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientWalkboxTemplate WalkboxTemplate {
      get { return messageTypeCase_ == MessageTypeOneofCase.WalkboxTemplate ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientWalkboxTemplate) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.WalkboxTemplate;
      }
    }

    /// <summary>Field number for the "encounter" field.</summary>
    public const int EncounterFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter Encounter {
      get { return messageTypeCase_ == MessageTypeOneofCase.Encounter ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.Encounter;
      }
    }

    /// <summary>Field number for the "portkey" field.</summary>
    public const int PortkeyFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientPortkey Portkey {
      get { return messageTypeCase_ == MessageTypeOneofCase.Portkey ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientPortkey) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.Portkey;
      }
    }

    /// <summary>Field number for the "vault_item" field.</summary>
    public const int VaultItemFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientVaultItem VaultItem {
      get { return messageTypeCase_ == MessageTypeOneofCase.VaultItem ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientVaultItem) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.VaultItem;
      }
    }

    /// <summary>Field number for the "game_config" field.</summary>
    public const int GameConfigFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig GameConfig {
      get { return messageTypeCase_ == MessageTypeOneofCase.GameConfig ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.GameConfig;
      }
    }

    /// <summary>Field number for the "store_pack" field.</summary>
    public const int StorePackFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack StorePack {
      get { return messageTypeCase_ == MessageTypeOneofCase.StorePack ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.StorePack;
      }
    }

    /// <summary>Field number for the "spell" field.</summary>
    public const int SpellFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSpell Spell {
      get { return messageTypeCase_ == MessageTypeOneofCase.Spell ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSpell) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.Spell;
      }
    }

    /// <summary>Field number for the "protego_pattern" field.</summary>
    public const int ProtegoPatternFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern ProtegoPattern {
      get { return messageTypeCase_ == MessageTypeOneofCase.ProtegoPattern ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.ProtegoPattern;
      }
    }

    /// <summary>Field number for the "chamber_template" field.</summary>
    public const int ChamberTemplateFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientChamberTemplate ChamberTemplate {
      get { return messageTypeCase_ == MessageTypeOneofCase.ChamberTemplate ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientChamberTemplate) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.ChamberTemplate;
      }
    }

    /// <summary>Field number for the "collection_page" field.</summary>
    public const int CollectionPageFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionPage CollectionPage {
      get { return messageTypeCase_ == MessageTypeOneofCase.CollectionPage ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionPage) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.CollectionPage;
      }
    }

    /// <summary>Field number for the "team_control" field.</summary>
    public const int TeamControlFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientTeamControl TeamControl {
      get { return messageTypeCase_ == MessageTypeOneofCase.TeamControl ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientTeamControl) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.TeamControl;
      }
    }

    /// <summary>Field number for the "store_config" field.</summary>
    public const int StoreConfigFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig StoreConfig {
      get { return messageTypeCase_ == MessageTypeOneofCase.StoreConfig ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.StoreConfig;
      }
    }

    /// <summary>Field number for the "store_subcategory" field.</summary>
    public const int StoreSubcategoryFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreSubcategory StoreSubcategory {
      get { return messageTypeCase_ == MessageTypeOneofCase.StoreSubcategory ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreSubcategory) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.StoreSubcategory;
      }
    }

    /// <summary>Field number for the "haptic" field.</summary>
    public const int HapticFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientHaptic Haptic {
      get { return messageTypeCase_ == MessageTypeOneofCase.Haptic ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientHaptic) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.Haptic;
      }
    }

    /// <summary>Field number for the "profession" field.</summary>
    public const int ProfessionFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfession Profession {
      get { return messageTypeCase_ == MessageTypeOneofCase.Profession ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfession) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.Profession;
      }
    }

    /// <summary>Field number for the "bonus_category" field.</summary>
    public const int BonusCategoryFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBonusCategory BonusCategory {
      get { return messageTypeCase_ == MessageTypeOneofCase.BonusCategory ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBonusCategory) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.BonusCategory;
      }
    }

    /// <summary>Field number for the "vault_category" field.</summary>
    public const int VaultCategoryFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientVaultCategory VaultCategory {
      get { return messageTypeCase_ == MessageTypeOneofCase.VaultCategory ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientVaultCategory) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.VaultCategory;
      }
    }

    /// <summary>Field number for the "profile_config" field.</summary>
    public const int ProfileConfigFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientProfileConfig ProfileConfig {
      get { return messageTypeCase_ == MessageTypeOneofCase.ProfileConfig ? (global::WUProtos.Data.Client.ClientProfileConfig) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.ProfileConfig;
      }
    }

    /// <summary>Field number for the "map_ingredient" field.</summary>
    public const int MapIngredientFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapIngredient MapIngredient {
      get { return messageTypeCase_ == MessageTypeOneofCase.MapIngredient ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapIngredient) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.MapIngredient;
      }
    }

    /// <summary>Field number for the "map_ability" field.</summary>
    public const int MapAbilityFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapAbility MapAbility {
      get { return messageTypeCase_ == MessageTypeOneofCase.MapAbility ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapAbility) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.MapAbility;
      }
    }

    /// <summary>Field number for the "storyboard" field.</summary>
    public const int StoryboardFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard Storyboard {
      get { return messageTypeCase_ == MessageTypeOneofCase.Storyboard ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.Storyboard;
      }
    }

    /// <summary>Field number for the "rpgstat" field.</summary>
    public const int RpgstatFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRpgstat Rpgstat {
      get { return messageTypeCase_ == MessageTypeOneofCase.Rpgstat ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRpgstat) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.Rpgstat;
      }
    }

    /// <summary>Field number for the "rpgstats_block" field.</summary>
    public const int RpgstatsBlockFieldNumber = 25;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRpgstatsBlock RpgstatsBlock {
      get { return messageTypeCase_ == MessageTypeOneofCase.RpgstatsBlock ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRpgstatsBlock) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.RpgstatsBlock;
      }
    }

    /// <summary>Field number for the "selfie_avatar_asset" field.</summary>
    public const int SelfieAvatarAssetFieldNumber = 26;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset SelfieAvatarAsset {
      get { return messageTypeCase_ == MessageTypeOneofCase.SelfieAvatarAsset ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.SelfieAvatarAsset;
      }
    }

    /// <summary>Field number for the "buff" field.</summary>
    public const int BuffFieldNumber = 27;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff Buff {
      get { return messageTypeCase_ == MessageTypeOneofCase.Buff ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.Buff;
      }
    }

    /// <summary>Field number for the "outpost_template" field.</summary>
    public const int OutpostTemplateFieldNumber = 29;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientOutpostTemplate OutpostTemplate {
      get { return messageTypeCase_ == MessageTypeOneofCase.OutpostTemplate ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientOutpostTemplate) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.OutpostTemplate;
      }
    }

    /// <summary>Field number for the "challenge_bonus" field.</summary>
    public const int ChallengeBonusFieldNumber = 30;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientChallengeBonus ChallengeBonus {
      get { return messageTypeCase_ == MessageTypeOneofCase.ChallengeBonus ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientChallengeBonus) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.ChallengeBonus;
      }
    }

    /// <summary>Field number for the "recipe" field.</summary>
    public const int RecipeFieldNumber = 31;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRecipe Recipe {
      get { return messageTypeCase_ == MessageTypeOneofCase.Recipe ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRecipe) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.Recipe;
      }
    }

    /// <summary>Field number for the "master_note" field.</summary>
    public const int MasterNoteFieldNumber = 32;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMasterNote MasterNote {
      get { return messageTypeCase_ == MessageTypeOneofCase.MasterNote ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMasterNote) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.MasterNote;
      }
    }

    /// <summary>Field number for the "quest" field.</summary>
    public const int QuestFieldNumber = 33;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientQuest Quest {
      get { return messageTypeCase_ == MessageTypeOneofCase.Quest ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientQuest) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.Quest;
      }
    }

    /// <summary>Field number for the "daily_reward_monthly_schedule" field.</summary>
    public const int DailyRewardMonthlyScheduleFieldNumber = 34;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientDailyRewardMonthlySchedule DailyRewardMonthlySchedule {
      get { return messageTypeCase_ == MessageTypeOneofCase.DailyRewardMonthlySchedule ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientDailyRewardMonthlySchedule) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.DailyRewardMonthlySchedule;
      }
    }

    /// <summary>Field number for the "encounter_type" field.</summary>
    public const int EncounterTypeFieldNumber = 35;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounterType EncounterType {
      get { return messageTypeCase_ == MessageTypeOneofCase.EncounterType ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounterType) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.EncounterType;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 36;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEvent Event {
      get { return messageTypeCase_ == MessageTypeOneofCase.Event ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEvent) messageType_ : null; }
      set {
        messageType_ = value;
        messageTypeCase_ = value == null ? MessageTypeOneofCase.None : MessageTypeOneofCase.Event;
      }
    }

    private object messageType_;
    /// <summary>Enum of possible cases for the "MessageType" oneof.</summary>
    public enum MessageTypeOneofCase {
      None = 0,
      CollectionFamily = 1,
      CollectionItem = 2,
      WalkboxTemplate = 3,
      Encounter = 4,
      Portkey = 5,
      VaultItem = 6,
      GameConfig = 7,
      StorePack = 8,
      Spell = 9,
      ProtegoPattern = 10,
      ChamberTemplate = 11,
      CollectionPage = 12,
      TeamControl = 13,
      StoreConfig = 14,
      StoreSubcategory = 15,
      Haptic = 16,
      Profession = 17,
      BonusCategory = 18,
      VaultCategory = 19,
      ProfileConfig = 20,
      MapIngredient = 21,
      MapAbility = 22,
      Storyboard = 23,
      Rpgstat = 24,
      RpgstatsBlock = 25,
      SelfieAvatarAsset = 26,
      Buff = 27,
      OutpostTemplate = 29,
      ChallengeBonus = 30,
      Recipe = 31,
      MasterNote = 32,
      Quest = 33,
      DailyRewardMonthlySchedule = 34,
      EncounterType = 35,
      Event = 36,
    }
    private MessageTypeOneofCase messageTypeCase_ = MessageTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageTypeOneofCase MessageTypeCase {
      get { return messageTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageType() {
      messageTypeCase_ = MessageTypeOneofCase.None;
      messageType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientGmTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientGmTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CollectionFamily, other.CollectionFamily)) return false;
      if (!object.Equals(CollectionItem, other.CollectionItem)) return false;
      if (!object.Equals(WalkboxTemplate, other.WalkboxTemplate)) return false;
      if (!object.Equals(Encounter, other.Encounter)) return false;
      if (!object.Equals(Portkey, other.Portkey)) return false;
      if (!object.Equals(VaultItem, other.VaultItem)) return false;
      if (!object.Equals(GameConfig, other.GameConfig)) return false;
      if (!object.Equals(StorePack, other.StorePack)) return false;
      if (!object.Equals(Spell, other.Spell)) return false;
      if (!object.Equals(ProtegoPattern, other.ProtegoPattern)) return false;
      if (!object.Equals(ChamberTemplate, other.ChamberTemplate)) return false;
      if (!object.Equals(CollectionPage, other.CollectionPage)) return false;
      if (!object.Equals(TeamControl, other.TeamControl)) return false;
      if (!object.Equals(StoreConfig, other.StoreConfig)) return false;
      if (!object.Equals(StoreSubcategory, other.StoreSubcategory)) return false;
      if (!object.Equals(Haptic, other.Haptic)) return false;
      if (!object.Equals(Profession, other.Profession)) return false;
      if (!object.Equals(BonusCategory, other.BonusCategory)) return false;
      if (!object.Equals(VaultCategory, other.VaultCategory)) return false;
      if (!object.Equals(ProfileConfig, other.ProfileConfig)) return false;
      if (!object.Equals(MapIngredient, other.MapIngredient)) return false;
      if (!object.Equals(MapAbility, other.MapAbility)) return false;
      if (!object.Equals(Storyboard, other.Storyboard)) return false;
      if (!object.Equals(Rpgstat, other.Rpgstat)) return false;
      if (!object.Equals(RpgstatsBlock, other.RpgstatsBlock)) return false;
      if (!object.Equals(SelfieAvatarAsset, other.SelfieAvatarAsset)) return false;
      if (!object.Equals(Buff, other.Buff)) return false;
      if (!object.Equals(OutpostTemplate, other.OutpostTemplate)) return false;
      if (!object.Equals(ChallengeBonus, other.ChallengeBonus)) return false;
      if (!object.Equals(Recipe, other.Recipe)) return false;
      if (!object.Equals(MasterNote, other.MasterNote)) return false;
      if (!object.Equals(Quest, other.Quest)) return false;
      if (!object.Equals(DailyRewardMonthlySchedule, other.DailyRewardMonthlySchedule)) return false;
      if (!object.Equals(EncounterType, other.EncounterType)) return false;
      if (!object.Equals(Event, other.Event)) return false;
      if (MessageTypeCase != other.MessageTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (messageTypeCase_ == MessageTypeOneofCase.CollectionFamily) hash ^= CollectionFamily.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.CollectionItem) hash ^= CollectionItem.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.WalkboxTemplate) hash ^= WalkboxTemplate.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.Encounter) hash ^= Encounter.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.Portkey) hash ^= Portkey.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.VaultItem) hash ^= VaultItem.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.GameConfig) hash ^= GameConfig.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.StorePack) hash ^= StorePack.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.Spell) hash ^= Spell.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.ProtegoPattern) hash ^= ProtegoPattern.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.ChamberTemplate) hash ^= ChamberTemplate.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.CollectionPage) hash ^= CollectionPage.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.TeamControl) hash ^= TeamControl.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.StoreConfig) hash ^= StoreConfig.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.StoreSubcategory) hash ^= StoreSubcategory.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.Haptic) hash ^= Haptic.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.Profession) hash ^= Profession.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.BonusCategory) hash ^= BonusCategory.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.VaultCategory) hash ^= VaultCategory.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.ProfileConfig) hash ^= ProfileConfig.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.MapIngredient) hash ^= MapIngredient.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.MapAbility) hash ^= MapAbility.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.Storyboard) hash ^= Storyboard.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.Rpgstat) hash ^= Rpgstat.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.RpgstatsBlock) hash ^= RpgstatsBlock.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.SelfieAvatarAsset) hash ^= SelfieAvatarAsset.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.Buff) hash ^= Buff.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.OutpostTemplate) hash ^= OutpostTemplate.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.ChallengeBonus) hash ^= ChallengeBonus.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.Recipe) hash ^= Recipe.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.MasterNote) hash ^= MasterNote.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.Quest) hash ^= Quest.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.DailyRewardMonthlySchedule) hash ^= DailyRewardMonthlySchedule.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.EncounterType) hash ^= EncounterType.GetHashCode();
      if (messageTypeCase_ == MessageTypeOneofCase.Event) hash ^= Event.GetHashCode();
      hash ^= (int) messageTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (messageTypeCase_ == MessageTypeOneofCase.CollectionFamily) {
        output.WriteRawTag(10);
        output.WriteMessage(CollectionFamily);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.CollectionItem) {
        output.WriteRawTag(18);
        output.WriteMessage(CollectionItem);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.WalkboxTemplate) {
        output.WriteRawTag(26);
        output.WriteMessage(WalkboxTemplate);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Encounter) {
        output.WriteRawTag(34);
        output.WriteMessage(Encounter);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Portkey) {
        output.WriteRawTag(42);
        output.WriteMessage(Portkey);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.VaultItem) {
        output.WriteRawTag(50);
        output.WriteMessage(VaultItem);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.GameConfig) {
        output.WriteRawTag(58);
        output.WriteMessage(GameConfig);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.StorePack) {
        output.WriteRawTag(66);
        output.WriteMessage(StorePack);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Spell) {
        output.WriteRawTag(74);
        output.WriteMessage(Spell);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.ProtegoPattern) {
        output.WriteRawTag(82);
        output.WriteMessage(ProtegoPattern);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.ChamberTemplate) {
        output.WriteRawTag(90);
        output.WriteMessage(ChamberTemplate);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.CollectionPage) {
        output.WriteRawTag(98);
        output.WriteMessage(CollectionPage);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.TeamControl) {
        output.WriteRawTag(106);
        output.WriteMessage(TeamControl);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.StoreConfig) {
        output.WriteRawTag(114);
        output.WriteMessage(StoreConfig);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.StoreSubcategory) {
        output.WriteRawTag(122);
        output.WriteMessage(StoreSubcategory);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Haptic) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Haptic);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Profession) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Profession);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.BonusCategory) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(BonusCategory);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.VaultCategory) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(VaultCategory);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.ProfileConfig) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(ProfileConfig);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.MapIngredient) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(MapIngredient);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.MapAbility) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(MapAbility);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Storyboard) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(Storyboard);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Rpgstat) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Rpgstat);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.RpgstatsBlock) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(RpgstatsBlock);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.SelfieAvatarAsset) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(SelfieAvatarAsset);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Buff) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(Buff);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.OutpostTemplate) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(OutpostTemplate);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.ChallengeBonus) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(ChallengeBonus);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Recipe) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(Recipe);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.MasterNote) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(MasterNote);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Quest) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(Quest);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.DailyRewardMonthlySchedule) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(DailyRewardMonthlySchedule);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.EncounterType) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(EncounterType);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Event) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(Event);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (messageTypeCase_ == MessageTypeOneofCase.CollectionFamily) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CollectionFamily);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.CollectionItem) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CollectionItem);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.WalkboxTemplate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WalkboxTemplate);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Encounter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Encounter);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Portkey) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Portkey);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.VaultItem) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VaultItem);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.GameConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameConfig);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.StorePack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StorePack);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Spell) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spell);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.ProtegoPattern) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProtegoPattern);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.ChamberTemplate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChamberTemplate);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.CollectionPage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CollectionPage);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.TeamControl) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TeamControl);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.StoreConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StoreConfig);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.StoreSubcategory) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StoreSubcategory);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Haptic) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Haptic);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Profession) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Profession);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.BonusCategory) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BonusCategory);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.VaultCategory) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VaultCategory);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.ProfileConfig) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ProfileConfig);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.MapIngredient) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MapIngredient);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.MapAbility) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MapAbility);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Storyboard) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Storyboard);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Rpgstat) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Rpgstat);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.RpgstatsBlock) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RpgstatsBlock);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.SelfieAvatarAsset) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SelfieAvatarAsset);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Buff) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Buff);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.OutpostTemplate) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OutpostTemplate);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.ChallengeBonus) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ChallengeBonus);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Recipe) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Recipe);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.MasterNote) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MasterNote);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Quest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Quest);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.DailyRewardMonthlySchedule) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DailyRewardMonthlySchedule);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.EncounterType) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EncounterType);
      }
      if (messageTypeCase_ == MessageTypeOneofCase.Event) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Event);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientGmTemplate other) {
      if (other == null) {
        return;
      }
      switch (other.MessageTypeCase) {
        case MessageTypeOneofCase.CollectionFamily:
          if (CollectionFamily == null) {
            CollectionFamily = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionFamily();
          }
          CollectionFamily.MergeFrom(other.CollectionFamily);
          break;
        case MessageTypeOneofCase.CollectionItem:
          if (CollectionItem == null) {
            CollectionItem = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionItem();
          }
          CollectionItem.MergeFrom(other.CollectionItem);
          break;
        case MessageTypeOneofCase.WalkboxTemplate:
          if (WalkboxTemplate == null) {
            WalkboxTemplate = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientWalkboxTemplate();
          }
          WalkboxTemplate.MergeFrom(other.WalkboxTemplate);
          break;
        case MessageTypeOneofCase.Encounter:
          if (Encounter == null) {
            Encounter = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter();
          }
          Encounter.MergeFrom(other.Encounter);
          break;
        case MessageTypeOneofCase.Portkey:
          if (Portkey == null) {
            Portkey = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientPortkey();
          }
          Portkey.MergeFrom(other.Portkey);
          break;
        case MessageTypeOneofCase.VaultItem:
          if (VaultItem == null) {
            VaultItem = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientVaultItem();
          }
          VaultItem.MergeFrom(other.VaultItem);
          break;
        case MessageTypeOneofCase.GameConfig:
          if (GameConfig == null) {
            GameConfig = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig();
          }
          GameConfig.MergeFrom(other.GameConfig);
          break;
        case MessageTypeOneofCase.StorePack:
          if (StorePack == null) {
            StorePack = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack();
          }
          StorePack.MergeFrom(other.StorePack);
          break;
        case MessageTypeOneofCase.Spell:
          if (Spell == null) {
            Spell = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSpell();
          }
          Spell.MergeFrom(other.Spell);
          break;
        case MessageTypeOneofCase.ProtegoPattern:
          if (ProtegoPattern == null) {
            ProtegoPattern = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern();
          }
          ProtegoPattern.MergeFrom(other.ProtegoPattern);
          break;
        case MessageTypeOneofCase.ChamberTemplate:
          if (ChamberTemplate == null) {
            ChamberTemplate = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientChamberTemplate();
          }
          ChamberTemplate.MergeFrom(other.ChamberTemplate);
          break;
        case MessageTypeOneofCase.CollectionPage:
          if (CollectionPage == null) {
            CollectionPage = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionPage();
          }
          CollectionPage.MergeFrom(other.CollectionPage);
          break;
        case MessageTypeOneofCase.TeamControl:
          if (TeamControl == null) {
            TeamControl = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientTeamControl();
          }
          TeamControl.MergeFrom(other.TeamControl);
          break;
        case MessageTypeOneofCase.StoreConfig:
          if (StoreConfig == null) {
            StoreConfig = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig();
          }
          StoreConfig.MergeFrom(other.StoreConfig);
          break;
        case MessageTypeOneofCase.StoreSubcategory:
          if (StoreSubcategory == null) {
            StoreSubcategory = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreSubcategory();
          }
          StoreSubcategory.MergeFrom(other.StoreSubcategory);
          break;
        case MessageTypeOneofCase.Haptic:
          if (Haptic == null) {
            Haptic = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientHaptic();
          }
          Haptic.MergeFrom(other.Haptic);
          break;
        case MessageTypeOneofCase.Profession:
          if (Profession == null) {
            Profession = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfession();
          }
          Profession.MergeFrom(other.Profession);
          break;
        case MessageTypeOneofCase.BonusCategory:
          if (BonusCategory == null) {
            BonusCategory = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBonusCategory();
          }
          BonusCategory.MergeFrom(other.BonusCategory);
          break;
        case MessageTypeOneofCase.VaultCategory:
          if (VaultCategory == null) {
            VaultCategory = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientVaultCategory();
          }
          VaultCategory.MergeFrom(other.VaultCategory);
          break;
        case MessageTypeOneofCase.ProfileConfig:
          if (ProfileConfig == null) {
            ProfileConfig = new global::WUProtos.Data.Client.ClientProfileConfig();
          }
          ProfileConfig.MergeFrom(other.ProfileConfig);
          break;
        case MessageTypeOneofCase.MapIngredient:
          if (MapIngredient == null) {
            MapIngredient = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapIngredient();
          }
          MapIngredient.MergeFrom(other.MapIngredient);
          break;
        case MessageTypeOneofCase.MapAbility:
          if (MapAbility == null) {
            MapAbility = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapAbility();
          }
          MapAbility.MergeFrom(other.MapAbility);
          break;
        case MessageTypeOneofCase.Storyboard:
          if (Storyboard == null) {
            Storyboard = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard();
          }
          Storyboard.MergeFrom(other.Storyboard);
          break;
        case MessageTypeOneofCase.Rpgstat:
          if (Rpgstat == null) {
            Rpgstat = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRpgstat();
          }
          Rpgstat.MergeFrom(other.Rpgstat);
          break;
        case MessageTypeOneofCase.RpgstatsBlock:
          if (RpgstatsBlock == null) {
            RpgstatsBlock = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRpgstatsBlock();
          }
          RpgstatsBlock.MergeFrom(other.RpgstatsBlock);
          break;
        case MessageTypeOneofCase.SelfieAvatarAsset:
          if (SelfieAvatarAsset == null) {
            SelfieAvatarAsset = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset();
          }
          SelfieAvatarAsset.MergeFrom(other.SelfieAvatarAsset);
          break;
        case MessageTypeOneofCase.Buff:
          if (Buff == null) {
            Buff = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff();
          }
          Buff.MergeFrom(other.Buff);
          break;
        case MessageTypeOneofCase.OutpostTemplate:
          if (OutpostTemplate == null) {
            OutpostTemplate = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientOutpostTemplate();
          }
          OutpostTemplate.MergeFrom(other.OutpostTemplate);
          break;
        case MessageTypeOneofCase.ChallengeBonus:
          if (ChallengeBonus == null) {
            ChallengeBonus = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientChallengeBonus();
          }
          ChallengeBonus.MergeFrom(other.ChallengeBonus);
          break;
        case MessageTypeOneofCase.Recipe:
          if (Recipe == null) {
            Recipe = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRecipe();
          }
          Recipe.MergeFrom(other.Recipe);
          break;
        case MessageTypeOneofCase.MasterNote:
          if (MasterNote == null) {
            MasterNote = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMasterNote();
          }
          MasterNote.MergeFrom(other.MasterNote);
          break;
        case MessageTypeOneofCase.Quest:
          if (Quest == null) {
            Quest = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientQuest();
          }
          Quest.MergeFrom(other.Quest);
          break;
        case MessageTypeOneofCase.DailyRewardMonthlySchedule:
          if (DailyRewardMonthlySchedule == null) {
            DailyRewardMonthlySchedule = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientDailyRewardMonthlySchedule();
          }
          DailyRewardMonthlySchedule.MergeFrom(other.DailyRewardMonthlySchedule);
          break;
        case MessageTypeOneofCase.EncounterType:
          if (EncounterType == null) {
            EncounterType = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounterType();
          }
          EncounterType.MergeFrom(other.EncounterType);
          break;
        case MessageTypeOneofCase.Event:
          if (Event == null) {
            Event = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEvent();
          }
          Event.MergeFrom(other.Event);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionFamily subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionFamily();
            if (messageTypeCase_ == MessageTypeOneofCase.CollectionFamily) {
              subBuilder.MergeFrom(CollectionFamily);
            }
            input.ReadMessage(subBuilder);
            CollectionFamily = subBuilder;
            break;
          }
          case 18: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionItem subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionItem();
            if (messageTypeCase_ == MessageTypeOneofCase.CollectionItem) {
              subBuilder.MergeFrom(CollectionItem);
            }
            input.ReadMessage(subBuilder);
            CollectionItem = subBuilder;
            break;
          }
          case 26: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientWalkboxTemplate subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientWalkboxTemplate();
            if (messageTypeCase_ == MessageTypeOneofCase.WalkboxTemplate) {
              subBuilder.MergeFrom(WalkboxTemplate);
            }
            input.ReadMessage(subBuilder);
            WalkboxTemplate = subBuilder;
            break;
          }
          case 34: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter();
            if (messageTypeCase_ == MessageTypeOneofCase.Encounter) {
              subBuilder.MergeFrom(Encounter);
            }
            input.ReadMessage(subBuilder);
            Encounter = subBuilder;
            break;
          }
          case 42: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientPortkey subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientPortkey();
            if (messageTypeCase_ == MessageTypeOneofCase.Portkey) {
              subBuilder.MergeFrom(Portkey);
            }
            input.ReadMessage(subBuilder);
            Portkey = subBuilder;
            break;
          }
          case 50: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientVaultItem subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientVaultItem();
            if (messageTypeCase_ == MessageTypeOneofCase.VaultItem) {
              subBuilder.MergeFrom(VaultItem);
            }
            input.ReadMessage(subBuilder);
            VaultItem = subBuilder;
            break;
          }
          case 58: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig();
            if (messageTypeCase_ == MessageTypeOneofCase.GameConfig) {
              subBuilder.MergeFrom(GameConfig);
            }
            input.ReadMessage(subBuilder);
            GameConfig = subBuilder;
            break;
          }
          case 66: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack();
            if (messageTypeCase_ == MessageTypeOneofCase.StorePack) {
              subBuilder.MergeFrom(StorePack);
            }
            input.ReadMessage(subBuilder);
            StorePack = subBuilder;
            break;
          }
          case 74: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSpell subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSpell();
            if (messageTypeCase_ == MessageTypeOneofCase.Spell) {
              subBuilder.MergeFrom(Spell);
            }
            input.ReadMessage(subBuilder);
            Spell = subBuilder;
            break;
          }
          case 82: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern();
            if (messageTypeCase_ == MessageTypeOneofCase.ProtegoPattern) {
              subBuilder.MergeFrom(ProtegoPattern);
            }
            input.ReadMessage(subBuilder);
            ProtegoPattern = subBuilder;
            break;
          }
          case 90: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientChamberTemplate subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientChamberTemplate();
            if (messageTypeCase_ == MessageTypeOneofCase.ChamberTemplate) {
              subBuilder.MergeFrom(ChamberTemplate);
            }
            input.ReadMessage(subBuilder);
            ChamberTemplate = subBuilder;
            break;
          }
          case 98: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionPage subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionPage();
            if (messageTypeCase_ == MessageTypeOneofCase.CollectionPage) {
              subBuilder.MergeFrom(CollectionPage);
            }
            input.ReadMessage(subBuilder);
            CollectionPage = subBuilder;
            break;
          }
          case 106: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientTeamControl subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientTeamControl();
            if (messageTypeCase_ == MessageTypeOneofCase.TeamControl) {
              subBuilder.MergeFrom(TeamControl);
            }
            input.ReadMessage(subBuilder);
            TeamControl = subBuilder;
            break;
          }
          case 114: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig();
            if (messageTypeCase_ == MessageTypeOneofCase.StoreConfig) {
              subBuilder.MergeFrom(StoreConfig);
            }
            input.ReadMessage(subBuilder);
            StoreConfig = subBuilder;
            break;
          }
          case 122: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreSubcategory subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreSubcategory();
            if (messageTypeCase_ == MessageTypeOneofCase.StoreSubcategory) {
              subBuilder.MergeFrom(StoreSubcategory);
            }
            input.ReadMessage(subBuilder);
            StoreSubcategory = subBuilder;
            break;
          }
          case 130: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientHaptic subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientHaptic();
            if (messageTypeCase_ == MessageTypeOneofCase.Haptic) {
              subBuilder.MergeFrom(Haptic);
            }
            input.ReadMessage(subBuilder);
            Haptic = subBuilder;
            break;
          }
          case 138: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfession subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfession();
            if (messageTypeCase_ == MessageTypeOneofCase.Profession) {
              subBuilder.MergeFrom(Profession);
            }
            input.ReadMessage(subBuilder);
            Profession = subBuilder;
            break;
          }
          case 146: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBonusCategory subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBonusCategory();
            if (messageTypeCase_ == MessageTypeOneofCase.BonusCategory) {
              subBuilder.MergeFrom(BonusCategory);
            }
            input.ReadMessage(subBuilder);
            BonusCategory = subBuilder;
            break;
          }
          case 154: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientVaultCategory subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientVaultCategory();
            if (messageTypeCase_ == MessageTypeOneofCase.VaultCategory) {
              subBuilder.MergeFrom(VaultCategory);
            }
            input.ReadMessage(subBuilder);
            VaultCategory = subBuilder;
            break;
          }
          case 162: {
            global::WUProtos.Data.Client.ClientProfileConfig subBuilder = new global::WUProtos.Data.Client.ClientProfileConfig();
            if (messageTypeCase_ == MessageTypeOneofCase.ProfileConfig) {
              subBuilder.MergeFrom(ProfileConfig);
            }
            input.ReadMessage(subBuilder);
            ProfileConfig = subBuilder;
            break;
          }
          case 170: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapIngredient subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapIngredient();
            if (messageTypeCase_ == MessageTypeOneofCase.MapIngredient) {
              subBuilder.MergeFrom(MapIngredient);
            }
            input.ReadMessage(subBuilder);
            MapIngredient = subBuilder;
            break;
          }
          case 178: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapAbility subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapAbility();
            if (messageTypeCase_ == MessageTypeOneofCase.MapAbility) {
              subBuilder.MergeFrom(MapAbility);
            }
            input.ReadMessage(subBuilder);
            MapAbility = subBuilder;
            break;
          }
          case 186: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard();
            if (messageTypeCase_ == MessageTypeOneofCase.Storyboard) {
              subBuilder.MergeFrom(Storyboard);
            }
            input.ReadMessage(subBuilder);
            Storyboard = subBuilder;
            break;
          }
          case 194: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRpgstat subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRpgstat();
            if (messageTypeCase_ == MessageTypeOneofCase.Rpgstat) {
              subBuilder.MergeFrom(Rpgstat);
            }
            input.ReadMessage(subBuilder);
            Rpgstat = subBuilder;
            break;
          }
          case 202: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRpgstatsBlock subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRpgstatsBlock();
            if (messageTypeCase_ == MessageTypeOneofCase.RpgstatsBlock) {
              subBuilder.MergeFrom(RpgstatsBlock);
            }
            input.ReadMessage(subBuilder);
            RpgstatsBlock = subBuilder;
            break;
          }
          case 210: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset();
            if (messageTypeCase_ == MessageTypeOneofCase.SelfieAvatarAsset) {
              subBuilder.MergeFrom(SelfieAvatarAsset);
            }
            input.ReadMessage(subBuilder);
            SelfieAvatarAsset = subBuilder;
            break;
          }
          case 218: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff();
            if (messageTypeCase_ == MessageTypeOneofCase.Buff) {
              subBuilder.MergeFrom(Buff);
            }
            input.ReadMessage(subBuilder);
            Buff = subBuilder;
            break;
          }
          case 234: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientOutpostTemplate subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientOutpostTemplate();
            if (messageTypeCase_ == MessageTypeOneofCase.OutpostTemplate) {
              subBuilder.MergeFrom(OutpostTemplate);
            }
            input.ReadMessage(subBuilder);
            OutpostTemplate = subBuilder;
            break;
          }
          case 242: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientChallengeBonus subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientChallengeBonus();
            if (messageTypeCase_ == MessageTypeOneofCase.ChallengeBonus) {
              subBuilder.MergeFrom(ChallengeBonus);
            }
            input.ReadMessage(subBuilder);
            ChallengeBonus = subBuilder;
            break;
          }
          case 250: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRecipe subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientRecipe();
            if (messageTypeCase_ == MessageTypeOneofCase.Recipe) {
              subBuilder.MergeFrom(Recipe);
            }
            input.ReadMessage(subBuilder);
            Recipe = subBuilder;
            break;
          }
          case 258: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMasterNote subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMasterNote();
            if (messageTypeCase_ == MessageTypeOneofCase.MasterNote) {
              subBuilder.MergeFrom(MasterNote);
            }
            input.ReadMessage(subBuilder);
            MasterNote = subBuilder;
            break;
          }
          case 266: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientQuest subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientQuest();
            if (messageTypeCase_ == MessageTypeOneofCase.Quest) {
              subBuilder.MergeFrom(Quest);
            }
            input.ReadMessage(subBuilder);
            Quest = subBuilder;
            break;
          }
          case 274: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientDailyRewardMonthlySchedule subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientDailyRewardMonthlySchedule();
            if (messageTypeCase_ == MessageTypeOneofCase.DailyRewardMonthlySchedule) {
              subBuilder.MergeFrom(DailyRewardMonthlySchedule);
            }
            input.ReadMessage(subBuilder);
            DailyRewardMonthlySchedule = subBuilder;
            break;
          }
          case 282: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounterType subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounterType();
            if (messageTypeCase_ == MessageTypeOneofCase.EncounterType) {
              subBuilder.MergeFrom(EncounterType);
            }
            input.ReadMessage(subBuilder);
            EncounterType = subBuilder;
            break;
          }
          case 290: {
            global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEvent subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEvent();
            if (messageTypeCase_ == MessageTypeOneofCase.Event) {
              subBuilder.MergeFrom(Event);
            }
            input.ReadMessage(subBuilder);
            Event = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ClientGmTemplate message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ClientGameConfig : pb::IMessage<ClientGameConfig> {
        private static readonly pb::MessageParser<ClientGameConfig> _parser = new pb::MessageParser<ClientGameConfig>(() => new ClientGameConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientGameConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientGameConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientGameConfig(ClientGameConfig other) : this() {
          id_ = other.id_;
          targetGlyphColor_ = other.targetGlyphColor_ != null ? other.targetGlyphColor_.Clone() : null;
          reticleGlyphColor_ = other.reticleGlyphColor_ != null ? other.reticleGlyphColor_.Clone() : null;
          alignedGlyphColor_ = other.alignedGlyphColor_ != null ? other.alignedGlyphColor_.Clone() : null;
          encounterAngleOfSpawn_ = other.encounterAngleOfSpawn_;
          timeBeforeArHintDisplay_ = other.timeBeforeArHintDisplay_;
          maxLockDistanceFromOrigin_ = other.maxLockDistanceFromOrigin_;
          distanceBehindCameraToSpawnMarker_ = other.distanceBehindCameraToSpawnMarker_;
          timeBeforeSwitchToArSimple_ = other.timeBeforeSwitchToArSimple_;
          tutorialEncounterId_ = other.tutorialEncounterId_;
          encounterResetGforce_ = other.encounterResetGforce_;
          localMapUpdateIntervalSeconds_ = other.localMapUpdateIntervalSeconds_;
          flooNetworkConfig_ = other.flooNetworkConfig_ != null ? other.flooNetworkConfig_.Clone() : null;
          flooContributionButtonValues_ = other.flooContributionButtonValues_.Clone();
          appBackgroundMap_ = other.appBackgroundMap_;
          appBackgroundFull_ = other.appBackgroundFull_;
          triggerableCooldown_ = other.triggerableCooldown_;
          levelUpTriggerPriority_ = other.levelUpTriggerPriority_;
          walkboxTriggerPriority_ = other.walkboxTriggerPriority_;
          permissionsConfig_ = other.permissionsConfig_ != null ? other.permissionsConfig_.Clone() : null;
          swishGameScoringThresholds_ = other.swishGameScoringThresholds_.Clone();
          swishGameScoringBonuses_ = other.swishGameScoringBonuses_.Clone();
          audioConfig_ = other.audioConfig_ != null ? other.audioConfig_.Clone() : null;
          audioInitialBanks_ = other.audioInitialBanks_.Clone();
          subfeaturePrestigeLevels_ = other.subfeaturePrestigeLevels_.Clone();
          bonusConfig_ = other.bonusConfig_ != null ? other.bonusConfig_.Clone() : null;
          portkeyWrackspurtCollectionHapticKey_ = other.portkeyWrackspurtCollectionHapticKey_;
          parkmodeBgs_ = other.parkmodeBgs_.Clone();
          potionMasternoteUnlockTreshold_ = other.potionMasternoteUnlockTreshold_;
          subfeatureFamilyOrders_ = other.subfeatureFamilyOrders_.Clone();
          batterySaverProfiles_ = other.batterySaverProfiles_.Clone();
          rateAppMinPlayerLevel_ = other.rateAppMinPlayerLevel_;
          rateAppCooldownDays_ = other.rateAppCooldownDays_;
          tooFastCooldown_ = other.tooFastCooldown_;
          encounterBanks_ = other.encounterBanks_.Clone();
          dailyRewardPopupTriggerPriority_ = other.dailyRewardPopupTriggerPriority_;
          rateAppTriggerPriority_ = other.rateAppTriggerPriority_;
          ftueVideo_ = other.ftueVideo_ != null ? other.ftueVideo_.Clone() : null;
          tutorialPotionBrew_ = other.tutorialPotionBrew_;
          genericTraceSpellFailSfx_ = other.genericTraceSpellFailSfx_;
          tracingSpellGlyphSfx_ = other.tracingSpellGlyphSfx_;
          tracingCompleteSfx_ = other.tracingCompleteSfx_;
          spellBarIncreasingSfx_ = other.spellBarIncreasingSfx_;
          badSpellCastSfx_ = other.badSpellCastSfx_;
          goodSpellCastSfx_ = other.goodSpellCastSfx_;
          greatSpellCastSfx_ = other.greatSpellCastSfx_;
          perfectSpellCastSfx_ = other.perfectSpellCastSfx_;
          registryStickerPlacedHapticKey_ = other.registryStickerPlacedHapticKey_;
          rewardsVesselByRarity_ = other.rewardsVesselByRarity_.Clone();
          rewardsSoundBanks_ = other.rewardsSoundBanks_.Clone();
          firstStickerStoryboardId_ = other.firstStickerStoryboardId_;
          firstStickerCollectionId_ = other.firstStickerCollectionId_;
          avatarDefaultColor_ = other.avatarDefaultColor_ != null ? other.avatarDefaultColor_.Clone() : null;
          lockOnCompletionSfx_ = other.lockOnCompletionSfx_ != null ? other.lockOnCompletionSfx_.Clone() : null;
          lockOnTimeUpSfx_ = other.lockOnTimeUpSfx_ != null ? other.lockOnTimeUpSfx_.Clone() : null;
          protegoCastSfx_ = other.protegoCastSfx_ != null ? other.protegoCastSfx_.Clone() : null;
          protegoTimeUpSfx_ = other.protegoTimeUpSfx_ != null ? other.protegoTimeUpSfx_.Clone() : null;
          msBeforeFinalIntensity_ = other.msBeforeFinalIntensity_;
          msBeforeSecondaryIntensity_ = other.msBeforeSecondaryIntensity_;
          challengeThirtySecondsLeftStinger_ = other.challengeThirtySecondsLeftStinger_.Clone();
          challengeEncounterPlayerVictoriousStinger_ = other.challengeEncounterPlayerVictoriousStinger_.Clone();
          challengeEncounterPlayerDefeatedStinger_ = other.challengeEncounterPlayerDefeatedStinger_.Clone();
          challengeBeginStinger_ = other.challengeBeginStinger_.Clone();
          challengeFinishVictory_ = other.challengeFinishVictory_.Clone();
          challengeFinishDefeat_ = other.challengeFinishDefeat_.Clone();
          challengeEliteMobSpawnsStinger_ = other.challengeEliteMobSpawnsStinger_.Clone();
          internetReachabilityCheckUrl_ = other.internetReachabilityCheckUrl_;
          rateAppMaxPrompts_ = other.rateAppMaxPrompts_;
          rateAppVersion_ = other.rateAppVersion_;
          rateAppTriggerWizardingChallenge_ = other.rateAppTriggerWizardingChallenge_;
          rateAppTriggerStickerPageComplete_ = other.rateAppTriggerStickerPageComplete_;
          rateAppTriggerEventQuestLineComplete_ = other.rateAppTriggerEventQuestLineComplete_;
          checksUntilGpsPrompt_ = other.checksUntilGpsPrompt_;
          fortressSoundBanks_ = other.fortressSoundBanks_.Clone();
          tenSecondsLeftInChallengeSfx_ = other.tenSecondsLeftInChallengeSfx_ != null ? other.tenSecondsLeftInChallengeSfx_.Clone() : null;
          longSecondLeftInChallengeSfx_ = other.longSecondLeftInChallengeSfx_ != null ? other.longSecondLeftInChallengeSfx_.Clone() : null;
          shortHalfSecondLeftInChallengeSfx_ = other.shortHalfSecondLeftInChallengeSfx_ != null ? other.shortHalfSecondLeftInChallengeSfx_.Clone() : null;
          oneMinuteWarningSfx_ = other.oneMinuteWarningSfx_ != null ? other.oneMinuteWarningSfx_.Clone() : null;
          rateAppTriggerMapEnter_ = other.rateAppTriggerMapEnter_;
          professionsAffinityAdvantageIcon_ = other.professionsAffinityAdvantageIcon_;
          professionsAffinityNeutralIcon_ = other.professionsAffinityNeutralIcon_;
          professionsAffinityDisadvantageIcon_ = other.professionsAffinityDisadvantageIcon_;
          internetOutageBackoffTime_ = other.internetOutageBackoffTime_;
          arCoreStoryboardTrigger_ = other.arCoreStoryboardTrigger_;
          voiceOverMappings_ = other.voiceOverMappings_.Clone();
          inAppMessageTriggerPriority_ = other.inAppMessageTriggerPriority_;
          internalFortressInteractRange_ = other.internalFortressInteractRange_;
          lowConnectivityThresholdBytesPerMs_ = other.lowConnectivityThresholdBytesPerMs_;
          gameSizeInKb_ = other.gameSizeInKb_;
          wcMapEnemyMarkerBuffOccupiedImage_ = other.wcMapEnemyMarkerBuffOccupiedImage_;
          wcMapEnemyMarkerBuffVacantImage_ = other.wcMapEnemyMarkerBuffVacantImage_;
          wcEnemyLookInBuffBorderImage_ = other.wcEnemyLookInBuffBorderImage_;
          localizationMappings_ = other.localizationMappings_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientGameConfig Clone() {
          return new ClientGameConfig(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "target_glyph_color" field.</summary>
        public const int TargetGlyphColorFieldNumber = 2;
        private global::WUProtos.Data.Color targetGlyphColor_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color TargetGlyphColor {
          get { return targetGlyphColor_; }
          set {
            targetGlyphColor_ = value;
          }
        }

        /// <summary>Field number for the "reticle_glyph_color" field.</summary>
        public const int ReticleGlyphColorFieldNumber = 3;
        private global::WUProtos.Data.Color reticleGlyphColor_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color ReticleGlyphColor {
          get { return reticleGlyphColor_; }
          set {
            reticleGlyphColor_ = value;
          }
        }

        /// <summary>Field number for the "aligned_glyph_color" field.</summary>
        public const int AlignedGlyphColorFieldNumber = 4;
        private global::WUProtos.Data.Color alignedGlyphColor_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color AlignedGlyphColor {
          get { return alignedGlyphColor_; }
          set {
            alignedGlyphColor_ = value;
          }
        }

        /// <summary>Field number for the "encounter_angle_of_spawn" field.</summary>
        public const int EncounterAngleOfSpawnFieldNumber = 5;
        private float encounterAngleOfSpawn_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float EncounterAngleOfSpawn {
          get { return encounterAngleOfSpawn_; }
          set {
            encounterAngleOfSpawn_ = value;
          }
        }

        /// <summary>Field number for the "time_before_ar_hint_display" field.</summary>
        public const int TimeBeforeArHintDisplayFieldNumber = 6;
        private float timeBeforeArHintDisplay_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float TimeBeforeArHintDisplay {
          get { return timeBeforeArHintDisplay_; }
          set {
            timeBeforeArHintDisplay_ = value;
          }
        }

        /// <summary>Field number for the "max_lock_distance_from_origin" field.</summary>
        public const int MaxLockDistanceFromOriginFieldNumber = 7;
        private float maxLockDistanceFromOrigin_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float MaxLockDistanceFromOrigin {
          get { return maxLockDistanceFromOrigin_; }
          set {
            maxLockDistanceFromOrigin_ = value;
          }
        }

        /// <summary>Field number for the "distance_behind_camera_to_spawn_marker" field.</summary>
        public const int DistanceBehindCameraToSpawnMarkerFieldNumber = 8;
        private float distanceBehindCameraToSpawnMarker_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float DistanceBehindCameraToSpawnMarker {
          get { return distanceBehindCameraToSpawnMarker_; }
          set {
            distanceBehindCameraToSpawnMarker_ = value;
          }
        }

        /// <summary>Field number for the "time_before_switch_to_ar_simple" field.</summary>
        public const int TimeBeforeSwitchToArSimpleFieldNumber = 9;
        private float timeBeforeSwitchToArSimple_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float TimeBeforeSwitchToArSimple {
          get { return timeBeforeSwitchToArSimple_; }
          set {
            timeBeforeSwitchToArSimple_ = value;
          }
        }

        /// <summary>Field number for the "tutorial_encounter_id" field.</summary>
        public const int TutorialEncounterIdFieldNumber = 10;
        private string tutorialEncounterId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TutorialEncounterId {
          get { return tutorialEncounterId_; }
          set {
            tutorialEncounterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "encounter_reset_gforce" field.</summary>
        public const int EncounterResetGforceFieldNumber = 11;
        private float encounterResetGforce_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float EncounterResetGforce {
          get { return encounterResetGforce_; }
          set {
            encounterResetGforce_ = value;
          }
        }

        /// <summary>Field number for the "local_map_update_interval_seconds" field.</summary>
        public const int LocalMapUpdateIntervalSecondsFieldNumber = 12;
        private float localMapUpdateIntervalSeconds_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float LocalMapUpdateIntervalSeconds {
          get { return localMapUpdateIntervalSeconds_; }
          set {
            localMapUpdateIntervalSeconds_ = value;
          }
        }

        /// <summary>Field number for the "floo_network_config" field.</summary>
        public const int FlooNetworkConfigFieldNumber = 13;
        private global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFlooNetworkConfig flooNetworkConfig_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFlooNetworkConfig FlooNetworkConfig {
          get { return flooNetworkConfig_; }
          set {
            flooNetworkConfig_ = value;
          }
        }

        /// <summary>Field number for the "floo_contribution_button_values" field.</summary>
        public const int FlooContributionButtonValuesFieldNumber = 14;
        private static readonly pb::FieldCodec<long> _repeated_flooContributionButtonValues_codec
            = pb::FieldCodec.ForInt64(114);
        private readonly pbc::RepeatedField<long> flooContributionButtonValues_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> FlooContributionButtonValues {
          get { return flooContributionButtonValues_; }
        }

        /// <summary>Field number for the "app_background_map" field.</summary>
        public const int AppBackgroundMapFieldNumber = 15;
        private int appBackgroundMap_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AppBackgroundMap {
          get { return appBackgroundMap_; }
          set {
            appBackgroundMap_ = value;
          }
        }

        /// <summary>Field number for the "app_background_full" field.</summary>
        public const int AppBackgroundFullFieldNumber = 16;
        private int appBackgroundFull_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AppBackgroundFull {
          get { return appBackgroundFull_; }
          set {
            appBackgroundFull_ = value;
          }
        }

        /// <summary>Field number for the "triggerable_cooldown" field.</summary>
        public const int TriggerableCooldownFieldNumber = 17;
        private float triggerableCooldown_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float TriggerableCooldown {
          get { return triggerableCooldown_; }
          set {
            triggerableCooldown_ = value;
          }
        }

        /// <summary>Field number for the "level_up_trigger_priority" field.</summary>
        public const int LevelUpTriggerPriorityFieldNumber = 18;
        private int levelUpTriggerPriority_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int LevelUpTriggerPriority {
          get { return levelUpTriggerPriority_; }
          set {
            levelUpTriggerPriority_ = value;
          }
        }

        /// <summary>Field number for the "walkbox_trigger_priority" field.</summary>
        public const int WalkboxTriggerPriorityFieldNumber = 19;
        private int walkboxTriggerPriority_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int WalkboxTriggerPriority {
          get { return walkboxTriggerPriority_; }
          set {
            walkboxTriggerPriority_ = value;
          }
        }

        /// <summary>Field number for the "permissions_config" field.</summary>
        public const int PermissionsConfigFieldNumber = 20;
        private global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.PermissionsConfigStaticList permissionsConfig_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.PermissionsConfigStaticList PermissionsConfig {
          get { return permissionsConfig_; }
          set {
            permissionsConfig_ = value;
          }
        }

        /// <summary>Field number for the "swish_game_scoring_thresholds" field.</summary>
        public const int SwishGameScoringThresholdsFieldNumber = 22;
        private static readonly pb::FieldCodec<float> _repeated_swishGameScoringThresholds_codec
            = pb::FieldCodec.ForFloat(178);
        private readonly pbc::RepeatedField<float> swishGameScoringThresholds_ = new pbc::RepeatedField<float>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<float> SwishGameScoringThresholds {
          get { return swishGameScoringThresholds_; }
        }

        /// <summary>Field number for the "swish_game_scoring_bonuses" field.</summary>
        public const int SwishGameScoringBonusesFieldNumber = 23;
        private static readonly pb::FieldCodec<float> _repeated_swishGameScoringBonuses_codec
            = pb::FieldCodec.ForFloat(186);
        private readonly pbc::RepeatedField<float> swishGameScoringBonuses_ = new pbc::RepeatedField<float>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<float> SwishGameScoringBonuses {
          get { return swishGameScoringBonuses_; }
        }

        /// <summary>Field number for the "audio_config" field.</summary>
        public const int AudioConfigFieldNumber = 24;
        private global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.AudioConfig audioConfig_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.AudioConfig AudioConfig {
          get { return audioConfig_; }
          set {
            audioConfig_ = value;
          }
        }

        /// <summary>Field number for the "audio_initial_banks" field.</summary>
        public const int AudioInitialBanksFieldNumber = 25;
        private static readonly pb::FieldCodec<string> _repeated_audioInitialBanks_codec
            = pb::FieldCodec.ForString(202);
        private readonly pbc::RepeatedField<string> audioInitialBanks_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> AudioInitialBanks {
          get { return audioInitialBanks_; }
        }

        /// <summary>Field number for the "subfeature_prestige_levels" field.</summary>
        public const int SubfeaturePrestigeLevelsFieldNumber = 26;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.CollectionSubfeaturePrestigeLevels> _repeated_subfeaturePrestigeLevels_codec
            = pb::FieldCodec.ForMessage(210, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.CollectionSubfeaturePrestigeLevels.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.CollectionSubfeaturePrestigeLevels> subfeaturePrestigeLevels_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.CollectionSubfeaturePrestigeLevels>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.CollectionSubfeaturePrestigeLevels> SubfeaturePrestigeLevels {
          get { return subfeaturePrestigeLevels_; }
        }

        /// <summary>Field number for the "bonus_config" field.</summary>
        public const int BonusConfigFieldNumber = 27;
        private global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientBonusConfig bonusConfig_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientBonusConfig BonusConfig {
          get { return bonusConfig_; }
          set {
            bonusConfig_ = value;
          }
        }

        /// <summary>Field number for the "portkey_wrackspurt_collection_haptic_key" field.</summary>
        public const int PortkeyWrackspurtCollectionHapticKeyFieldNumber = 28;
        private string portkeyWrackspurtCollectionHapticKey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PortkeyWrackspurtCollectionHapticKey {
          get { return portkeyWrackspurtCollectionHapticKey_; }
          set {
            portkeyWrackspurtCollectionHapticKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "parkmode_bgs" field.</summary>
        public const int ParkmodeBgsFieldNumber = 29;
        private static readonly pbc::MapField<string, string>.Codec _map_parkmodeBgs_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 234);
        private readonly pbc::MapField<string, string> parkmodeBgs_ = new pbc::MapField<string, string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, string> ParkmodeBgs {
          get { return parkmodeBgs_; }
        }

        /// <summary>Field number for the "potion_masternote_unlock_treshold" field.</summary>
        public const int PotionMasternoteUnlockTresholdFieldNumber = 30;
        private int potionMasternoteUnlockTreshold_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PotionMasternoteUnlockTreshold {
          get { return potionMasternoteUnlockTreshold_; }
          set {
            potionMasternoteUnlockTreshold_ = value;
          }
        }

        /// <summary>Field number for the "subfeature_family_orders" field.</summary>
        public const int SubfeatureFamilyOrdersFieldNumber = 31;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.CollectionSubfeatureFamilyOrders> _repeated_subfeatureFamilyOrders_codec
            = pb::FieldCodec.ForMessage(250, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.CollectionSubfeatureFamilyOrders.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.CollectionSubfeatureFamilyOrders> subfeatureFamilyOrders_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.CollectionSubfeatureFamilyOrders>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.CollectionSubfeatureFamilyOrders> SubfeatureFamilyOrders {
          get { return subfeatureFamilyOrders_; }
        }

        /// <summary>Field number for the "battery_saver_profiles" field.</summary>
        public const int BatterySaverProfilesFieldNumber = 32;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.BatterySaverProfile> _repeated_batterySaverProfiles_codec
            = pb::FieldCodec.ForMessage(258, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.BatterySaverProfile.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.BatterySaverProfile> batterySaverProfiles_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.BatterySaverProfile>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.BatterySaverProfile> BatterySaverProfiles {
          get { return batterySaverProfiles_; }
        }

        /// <summary>Field number for the "rate_app_min_player_level" field.</summary>
        public const int RateAppMinPlayerLevelFieldNumber = 33;
        private int rateAppMinPlayerLevel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int RateAppMinPlayerLevel {
          get { return rateAppMinPlayerLevel_; }
          set {
            rateAppMinPlayerLevel_ = value;
          }
        }

        /// <summary>Field number for the "rate_app_cooldown_days" field.</summary>
        public const int RateAppCooldownDaysFieldNumber = 34;
        private int rateAppCooldownDays_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int RateAppCooldownDays {
          get { return rateAppCooldownDays_; }
          set {
            rateAppCooldownDays_ = value;
          }
        }

        /// <summary>Field number for the "too_fast_cooldown" field.</summary>
        public const int TooFastCooldownFieldNumber = 35;
        private int tooFastCooldown_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int TooFastCooldown {
          get { return tooFastCooldown_; }
          set {
            tooFastCooldown_ = value;
          }
        }

        /// <summary>Field number for the "encounter_banks" field.</summary>
        public const int EncounterBanksFieldNumber = 36;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.EncounterSoundBanks> _repeated_encounterBanks_codec
            = pb::FieldCodec.ForMessage(290, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.EncounterSoundBanks.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.EncounterSoundBanks> encounterBanks_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.EncounterSoundBanks>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.EncounterSoundBanks> EncounterBanks {
          get { return encounterBanks_; }
        }

        /// <summary>Field number for the "daily_reward_popup_trigger_priority" field.</summary>
        public const int DailyRewardPopupTriggerPriorityFieldNumber = 37;
        private int dailyRewardPopupTriggerPriority_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int DailyRewardPopupTriggerPriority {
          get { return dailyRewardPopupTriggerPriority_; }
          set {
            dailyRewardPopupTriggerPriority_ = value;
          }
        }

        /// <summary>Field number for the "rate_app_trigger_priority" field.</summary>
        public const int RateAppTriggerPriorityFieldNumber = 38;
        private int rateAppTriggerPriority_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int RateAppTriggerPriority {
          get { return rateAppTriggerPriority_; }
          set {
            rateAppTriggerPriority_ = value;
          }
        }

        /// <summary>Field number for the "ftue_video" field.</summary>
        public const int FtueVideoFieldNumber = 43;
        private global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig ftueVideo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig FtueVideo {
          get { return ftueVideo_; }
          set {
            ftueVideo_ = value;
          }
        }

        /// <summary>Field number for the "tutorial_potion_brew" field.</summary>
        public const int TutorialPotionBrewFieldNumber = 44;
        private string tutorialPotionBrew_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TutorialPotionBrew {
          get { return tutorialPotionBrew_; }
          set {
            tutorialPotionBrew_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "generic_trace_spell_fail_sfx" field.</summary>
        public const int GenericTraceSpellFailSfxFieldNumber = 45;
        private string genericTraceSpellFailSfx_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string GenericTraceSpellFailSfx {
          get { return genericTraceSpellFailSfx_; }
          set {
            genericTraceSpellFailSfx_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "tracing_spell_glyph_sfx" field.</summary>
        public const int TracingSpellGlyphSfxFieldNumber = 46;
        private string tracingSpellGlyphSfx_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TracingSpellGlyphSfx {
          get { return tracingSpellGlyphSfx_; }
          set {
            tracingSpellGlyphSfx_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "tracing_complete_sfx" field.</summary>
        public const int TracingCompleteSfxFieldNumber = 47;
        private string tracingCompleteSfx_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TracingCompleteSfx {
          get { return tracingCompleteSfx_; }
          set {
            tracingCompleteSfx_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "spell_bar_increasing_sfx" field.</summary>
        public const int SpellBarIncreasingSfxFieldNumber = 48;
        private string spellBarIncreasingSfx_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SpellBarIncreasingSfx {
          get { return spellBarIncreasingSfx_; }
          set {
            spellBarIncreasingSfx_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "bad_spell_cast_sfx" field.</summary>
        public const int BadSpellCastSfxFieldNumber = 49;
        private string badSpellCastSfx_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BadSpellCastSfx {
          get { return badSpellCastSfx_; }
          set {
            badSpellCastSfx_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "good_spell_cast_sfx" field.</summary>
        public const int GoodSpellCastSfxFieldNumber = 50;
        private string goodSpellCastSfx_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string GoodSpellCastSfx {
          get { return goodSpellCastSfx_; }
          set {
            goodSpellCastSfx_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "great_spell_cast_sfx" field.</summary>
        public const int GreatSpellCastSfxFieldNumber = 51;
        private string greatSpellCastSfx_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string GreatSpellCastSfx {
          get { return greatSpellCastSfx_; }
          set {
            greatSpellCastSfx_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "perfect_spell_cast_sfx" field.</summary>
        public const int PerfectSpellCastSfxFieldNumber = 52;
        private string perfectSpellCastSfx_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PerfectSpellCastSfx {
          get { return perfectSpellCastSfx_; }
          set {
            perfectSpellCastSfx_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "registry_sticker_placed_haptic_key" field.</summary>
        public const int RegistryStickerPlacedHapticKeyFieldNumber = 53;
        private string registryStickerPlacedHapticKey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RegistryStickerPlacedHapticKey {
          get { return registryStickerPlacedHapticKey_; }
          set {
            registryStickerPlacedHapticKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "rewards_vessel_by_rarity" field.</summary>
        public const int RewardsVesselByRarityFieldNumber = 54;
        private static readonly pb::FieldCodec<string> _repeated_rewardsVesselByRarity_codec
            = pb::FieldCodec.ForString(434);
        private readonly pbc::RepeatedField<string> rewardsVesselByRarity_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> RewardsVesselByRarity {
          get { return rewardsVesselByRarity_; }
        }

        /// <summary>Field number for the "rewards_sound_banks" field.</summary>
        public const int RewardsSoundBanksFieldNumber = 55;
        private static readonly pb::FieldCodec<string> _repeated_rewardsSoundBanks_codec
            = pb::FieldCodec.ForString(442);
        private readonly pbc::RepeatedField<string> rewardsSoundBanks_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> RewardsSoundBanks {
          get { return rewardsSoundBanks_; }
        }

        /// <summary>Field number for the "first_sticker_storyboard_id" field.</summary>
        public const int FirstStickerStoryboardIdFieldNumber = 56;
        private string firstStickerStoryboardId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FirstStickerStoryboardId {
          get { return firstStickerStoryboardId_; }
          set {
            firstStickerStoryboardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "first_sticker_collection_id" field.</summary>
        public const int FirstStickerCollectionIdFieldNumber = 57;
        private string firstStickerCollectionId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FirstStickerCollectionId {
          get { return firstStickerCollectionId_; }
          set {
            firstStickerCollectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "avatar_default_color" field.</summary>
        public const int AvatarDefaultColorFieldNumber = 58;
        private global::WUProtos.Data.Color avatarDefaultColor_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color AvatarDefaultColor {
          get { return avatarDefaultColor_; }
          set {
            avatarDefaultColor_ = value;
          }
        }

        /// <summary>Field number for the "lock_on_completion_sfx" field.</summary>
        public const int LockOnCompletionSfxFieldNumber = 59;
        private global::WUProtos.Data.SoundConfig lockOnCompletionSfx_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.SoundConfig LockOnCompletionSfx {
          get { return lockOnCompletionSfx_; }
          set {
            lockOnCompletionSfx_ = value;
          }
        }

        /// <summary>Field number for the "lock_on_time_up_sfx" field.</summary>
        public const int LockOnTimeUpSfxFieldNumber = 60;
        private global::WUProtos.Data.SoundConfig lockOnTimeUpSfx_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.SoundConfig LockOnTimeUpSfx {
          get { return lockOnTimeUpSfx_; }
          set {
            lockOnTimeUpSfx_ = value;
          }
        }

        /// <summary>Field number for the "protego_cast_sfx" field.</summary>
        public const int ProtegoCastSfxFieldNumber = 61;
        private global::WUProtos.Data.SoundConfig protegoCastSfx_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.SoundConfig ProtegoCastSfx {
          get { return protegoCastSfx_; }
          set {
            protegoCastSfx_ = value;
          }
        }

        /// <summary>Field number for the "protego_time_up_sfx" field.</summary>
        public const int ProtegoTimeUpSfxFieldNumber = 62;
        private global::WUProtos.Data.SoundConfig protegoTimeUpSfx_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.SoundConfig ProtegoTimeUpSfx {
          get { return protegoTimeUpSfx_; }
          set {
            protegoTimeUpSfx_ = value;
          }
        }

        /// <summary>Field number for the "ms_before_final_intensity" field.</summary>
        public const int MsBeforeFinalIntensityFieldNumber = 63;
        private int msBeforeFinalIntensity_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int MsBeforeFinalIntensity {
          get { return msBeforeFinalIntensity_; }
          set {
            msBeforeFinalIntensity_ = value;
          }
        }

        /// <summary>Field number for the "ms_before_secondary_intensity" field.</summary>
        public const int MsBeforeSecondaryIntensityFieldNumber = 64;
        private int msBeforeSecondaryIntensity_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int MsBeforeSecondaryIntensity {
          get { return msBeforeSecondaryIntensity_; }
          set {
            msBeforeSecondaryIntensity_ = value;
          }
        }

        /// <summary>Field number for the "challenge_thirty_seconds_left_stinger" field.</summary>
        public const int ChallengeThirtySecondsLeftStingerFieldNumber = 65;
        private static readonly pb::FieldCodec<global::WUProtos.Data.AudioParameter> _repeated_challengeThirtySecondsLeftStinger_codec
            = pb::FieldCodec.ForMessage(522, global::WUProtos.Data.AudioParameter.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.AudioParameter> challengeThirtySecondsLeftStinger_ = new pbc::RepeatedField<global::WUProtos.Data.AudioParameter>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.AudioParameter> ChallengeThirtySecondsLeftStinger {
          get { return challengeThirtySecondsLeftStinger_; }
        }

        /// <summary>Field number for the "challenge_encounter_player_victorious_stinger" field.</summary>
        public const int ChallengeEncounterPlayerVictoriousStingerFieldNumber = 66;
        private static readonly pb::FieldCodec<global::WUProtos.Data.AudioParameter> _repeated_challengeEncounterPlayerVictoriousStinger_codec
            = pb::FieldCodec.ForMessage(530, global::WUProtos.Data.AudioParameter.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.AudioParameter> challengeEncounterPlayerVictoriousStinger_ = new pbc::RepeatedField<global::WUProtos.Data.AudioParameter>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.AudioParameter> ChallengeEncounterPlayerVictoriousStinger {
          get { return challengeEncounterPlayerVictoriousStinger_; }
        }

        /// <summary>Field number for the "challenge_encounter_player_defeated_stinger" field.</summary>
        public const int ChallengeEncounterPlayerDefeatedStingerFieldNumber = 67;
        private static readonly pb::FieldCodec<global::WUProtos.Data.AudioParameter> _repeated_challengeEncounterPlayerDefeatedStinger_codec
            = pb::FieldCodec.ForMessage(538, global::WUProtos.Data.AudioParameter.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.AudioParameter> challengeEncounterPlayerDefeatedStinger_ = new pbc::RepeatedField<global::WUProtos.Data.AudioParameter>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.AudioParameter> ChallengeEncounterPlayerDefeatedStinger {
          get { return challengeEncounterPlayerDefeatedStinger_; }
        }

        /// <summary>Field number for the "challenge_begin_stinger" field.</summary>
        public const int ChallengeBeginStingerFieldNumber = 68;
        private static readonly pb::FieldCodec<global::WUProtos.Data.AudioParameter> _repeated_challengeBeginStinger_codec
            = pb::FieldCodec.ForMessage(546, global::WUProtos.Data.AudioParameter.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.AudioParameter> challengeBeginStinger_ = new pbc::RepeatedField<global::WUProtos.Data.AudioParameter>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.AudioParameter> ChallengeBeginStinger {
          get { return challengeBeginStinger_; }
        }

        /// <summary>Field number for the "challenge_finish_victory" field.</summary>
        public const int ChallengeFinishVictoryFieldNumber = 69;
        private static readonly pb::FieldCodec<global::WUProtos.Data.AudioParameter> _repeated_challengeFinishVictory_codec
            = pb::FieldCodec.ForMessage(554, global::WUProtos.Data.AudioParameter.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.AudioParameter> challengeFinishVictory_ = new pbc::RepeatedField<global::WUProtos.Data.AudioParameter>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.AudioParameter> ChallengeFinishVictory {
          get { return challengeFinishVictory_; }
        }

        /// <summary>Field number for the "challenge_finish_defeat" field.</summary>
        public const int ChallengeFinishDefeatFieldNumber = 70;
        private static readonly pb::FieldCodec<global::WUProtos.Data.AudioParameter> _repeated_challengeFinishDefeat_codec
            = pb::FieldCodec.ForMessage(562, global::WUProtos.Data.AudioParameter.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.AudioParameter> challengeFinishDefeat_ = new pbc::RepeatedField<global::WUProtos.Data.AudioParameter>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.AudioParameter> ChallengeFinishDefeat {
          get { return challengeFinishDefeat_; }
        }

        /// <summary>Field number for the "challenge_elite_mob_spawns_stinger" field.</summary>
        public const int ChallengeEliteMobSpawnsStingerFieldNumber = 71;
        private static readonly pb::FieldCodec<global::WUProtos.Data.AudioParameter> _repeated_challengeEliteMobSpawnsStinger_codec
            = pb::FieldCodec.ForMessage(570, global::WUProtos.Data.AudioParameter.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.AudioParameter> challengeEliteMobSpawnsStinger_ = new pbc::RepeatedField<global::WUProtos.Data.AudioParameter>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.AudioParameter> ChallengeEliteMobSpawnsStinger {
          get { return challengeEliteMobSpawnsStinger_; }
        }

        /// <summary>Field number for the "internet_reachability_check_url" field.</summary>
        public const int InternetReachabilityCheckUrlFieldNumber = 72;
        private string internetReachabilityCheckUrl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string InternetReachabilityCheckUrl {
          get { return internetReachabilityCheckUrl_; }
          set {
            internetReachabilityCheckUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "rate_app_max_prompts" field.</summary>
        public const int RateAppMaxPromptsFieldNumber = 73;
        private int rateAppMaxPrompts_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int RateAppMaxPrompts {
          get { return rateAppMaxPrompts_; }
          set {
            rateAppMaxPrompts_ = value;
          }
        }

        /// <summary>Field number for the "rate_app_version" field.</summary>
        public const int RateAppVersionFieldNumber = 74;
        private int rateAppVersion_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int RateAppVersion {
          get { return rateAppVersion_; }
          set {
            rateAppVersion_ = value;
          }
        }

        /// <summary>Field number for the "rate_app_trigger_wizarding_challenge" field.</summary>
        public const int RateAppTriggerWizardingChallengeFieldNumber = 75;
        private int rateAppTriggerWizardingChallenge_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int RateAppTriggerWizardingChallenge {
          get { return rateAppTriggerWizardingChallenge_; }
          set {
            rateAppTriggerWizardingChallenge_ = value;
          }
        }

        /// <summary>Field number for the "rate_app_trigger_sticker_page_complete" field.</summary>
        public const int RateAppTriggerStickerPageCompleteFieldNumber = 76;
        private int rateAppTriggerStickerPageComplete_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int RateAppTriggerStickerPageComplete {
          get { return rateAppTriggerStickerPageComplete_; }
          set {
            rateAppTriggerStickerPageComplete_ = value;
          }
        }

        /// <summary>Field number for the "rate_app_trigger_event_quest_line_complete" field.</summary>
        public const int RateAppTriggerEventQuestLineCompleteFieldNumber = 77;
        private int rateAppTriggerEventQuestLineComplete_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int RateAppTriggerEventQuestLineComplete {
          get { return rateAppTriggerEventQuestLineComplete_; }
          set {
            rateAppTriggerEventQuestLineComplete_ = value;
          }
        }

        /// <summary>Field number for the "checks_until_gps_prompt" field.</summary>
        public const int ChecksUntilGpsPromptFieldNumber = 78;
        private int checksUntilGpsPrompt_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ChecksUntilGpsPrompt {
          get { return checksUntilGpsPrompt_; }
          set {
            checksUntilGpsPrompt_ = value;
          }
        }

        /// <summary>Field number for the "fortress_sound_banks" field.</summary>
        public const int FortressSoundBanksFieldNumber = 79;
        private static readonly pb::FieldCodec<string> _repeated_fortressSoundBanks_codec
            = pb::FieldCodec.ForString(634);
        private readonly pbc::RepeatedField<string> fortressSoundBanks_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> FortressSoundBanks {
          get { return fortressSoundBanks_; }
        }

        /// <summary>Field number for the "ten_seconds_left_in_challenge_sfx" field.</summary>
        public const int TenSecondsLeftInChallengeSfxFieldNumber = 80;
        private global::WUProtos.Data.SoundConfig tenSecondsLeftInChallengeSfx_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.SoundConfig TenSecondsLeftInChallengeSfx {
          get { return tenSecondsLeftInChallengeSfx_; }
          set {
            tenSecondsLeftInChallengeSfx_ = value;
          }
        }

        /// <summary>Field number for the "long_second_left_in_challenge_sfx" field.</summary>
        public const int LongSecondLeftInChallengeSfxFieldNumber = 81;
        private global::WUProtos.Data.SoundConfig longSecondLeftInChallengeSfx_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.SoundConfig LongSecondLeftInChallengeSfx {
          get { return longSecondLeftInChallengeSfx_; }
          set {
            longSecondLeftInChallengeSfx_ = value;
          }
        }

        /// <summary>Field number for the "short_half_second_left_in_challenge_sfx" field.</summary>
        public const int ShortHalfSecondLeftInChallengeSfxFieldNumber = 82;
        private global::WUProtos.Data.SoundConfig shortHalfSecondLeftInChallengeSfx_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.SoundConfig ShortHalfSecondLeftInChallengeSfx {
          get { return shortHalfSecondLeftInChallengeSfx_; }
          set {
            shortHalfSecondLeftInChallengeSfx_ = value;
          }
        }

        /// <summary>Field number for the "one_minute_warning_sfx" field.</summary>
        public const int OneMinuteWarningSfxFieldNumber = 83;
        private global::WUProtos.Data.SoundConfig oneMinuteWarningSfx_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.SoundConfig OneMinuteWarningSfx {
          get { return oneMinuteWarningSfx_; }
          set {
            oneMinuteWarningSfx_ = value;
          }
        }

        /// <summary>Field number for the "rate_app_trigger_map_enter" field.</summary>
        public const int RateAppTriggerMapEnterFieldNumber = 84;
        private bool rateAppTriggerMapEnter_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool RateAppTriggerMapEnter {
          get { return rateAppTriggerMapEnter_; }
          set {
            rateAppTriggerMapEnter_ = value;
          }
        }

        /// <summary>Field number for the "professions_affinity_advantage_icon" field.</summary>
        public const int ProfessionsAffinityAdvantageIconFieldNumber = 85;
        private string professionsAffinityAdvantageIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ProfessionsAffinityAdvantageIcon {
          get { return professionsAffinityAdvantageIcon_; }
          set {
            professionsAffinityAdvantageIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "professions_affinity_neutral_icon" field.</summary>
        public const int ProfessionsAffinityNeutralIconFieldNumber = 86;
        private string professionsAffinityNeutralIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ProfessionsAffinityNeutralIcon {
          get { return professionsAffinityNeutralIcon_; }
          set {
            professionsAffinityNeutralIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "professions_affinity_disadvantage_icon" field.</summary>
        public const int ProfessionsAffinityDisadvantageIconFieldNumber = 87;
        private string professionsAffinityDisadvantageIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ProfessionsAffinityDisadvantageIcon {
          get { return professionsAffinityDisadvantageIcon_; }
          set {
            professionsAffinityDisadvantageIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "internet_outage_backoff_time" field.</summary>
        public const int InternetOutageBackoffTimeFieldNumber = 88;
        private int internetOutageBackoffTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int InternetOutageBackoffTime {
          get { return internetOutageBackoffTime_; }
          set {
            internetOutageBackoffTime_ = value;
          }
        }

        /// <summary>Field number for the "ar_core_storyboard_trigger" field.</summary>
        public const int ArCoreStoryboardTriggerFieldNumber = 89;
        private string arCoreStoryboardTrigger_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ArCoreStoryboardTrigger {
          get { return arCoreStoryboardTrigger_; }
          set {
            arCoreStoryboardTrigger_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "voice_over_mappings" field.</summary>
        public const int VoiceOverMappingsFieldNumber = 90;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.VoiceOverLanguageMapping> _repeated_voiceOverMappings_codec
            = pb::FieldCodec.ForMessage(722, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.VoiceOverLanguageMapping.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.VoiceOverLanguageMapping> voiceOverMappings_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.VoiceOverLanguageMapping>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.VoiceOverLanguageMapping> VoiceOverMappings {
          get { return voiceOverMappings_; }
        }

        /// <summary>Field number for the "in_app_message_trigger_priority" field.</summary>
        public const int InAppMessageTriggerPriorityFieldNumber = 91;
        private int inAppMessageTriggerPriority_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int InAppMessageTriggerPriority {
          get { return inAppMessageTriggerPriority_; }
          set {
            inAppMessageTriggerPriority_ = value;
          }
        }

        /// <summary>Field number for the "internal_fortress_interact_range" field.</summary>
        public const int InternalFortressInteractRangeFieldNumber = 92;
        private float internalFortressInteractRange_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float InternalFortressInteractRange {
          get { return internalFortressInteractRange_; }
          set {
            internalFortressInteractRange_ = value;
          }
        }

        /// <summary>Field number for the "low_connectivity_threshold_bytes_per_ms" field.</summary>
        public const int LowConnectivityThresholdBytesPerMsFieldNumber = 93;
        private float lowConnectivityThresholdBytesPerMs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float LowConnectivityThresholdBytesPerMs {
          get { return lowConnectivityThresholdBytesPerMs_; }
          set {
            lowConnectivityThresholdBytesPerMs_ = value;
          }
        }

        /// <summary>Field number for the "game_size_in_kb" field.</summary>
        public const int GameSizeInKbFieldNumber = 94;
        private int gameSizeInKb_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int GameSizeInKb {
          get { return gameSizeInKb_; }
          set {
            gameSizeInKb_ = value;
          }
        }

        /// <summary>Field number for the "wc_map_enemy_marker_buff_occupied_image" field.</summary>
        public const int WcMapEnemyMarkerBuffOccupiedImageFieldNumber = 95;
        private string wcMapEnemyMarkerBuffOccupiedImage_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string WcMapEnemyMarkerBuffOccupiedImage {
          get { return wcMapEnemyMarkerBuffOccupiedImage_; }
          set {
            wcMapEnemyMarkerBuffOccupiedImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "wc_map_enemy_marker_buff_vacant_image" field.</summary>
        public const int WcMapEnemyMarkerBuffVacantImageFieldNumber = 96;
        private string wcMapEnemyMarkerBuffVacantImage_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string WcMapEnemyMarkerBuffVacantImage {
          get { return wcMapEnemyMarkerBuffVacantImage_; }
          set {
            wcMapEnemyMarkerBuffVacantImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "wc_enemy_look_in_buff_border_image" field.</summary>
        public const int WcEnemyLookInBuffBorderImageFieldNumber = 97;
        private string wcEnemyLookInBuffBorderImage_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string WcEnemyLookInBuffBorderImage {
          get { return wcEnemyLookInBuffBorderImage_; }
          set {
            wcEnemyLookInBuffBorderImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "localization_mappings" field.</summary>
        public const int LocalizationMappingsFieldNumber = 98;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.LocalizationMapping> _repeated_localizationMappings_codec
            = pb::FieldCodec.ForMessage(786, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.LocalizationMapping.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.LocalizationMapping> localizationMappings_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.LocalizationMapping>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.LocalizationMapping> LocalizationMappings {
          get { return localizationMappings_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientGameConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientGameConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (!object.Equals(TargetGlyphColor, other.TargetGlyphColor)) return false;
          if (!object.Equals(ReticleGlyphColor, other.ReticleGlyphColor)) return false;
          if (!object.Equals(AlignedGlyphColor, other.AlignedGlyphColor)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EncounterAngleOfSpawn, other.EncounterAngleOfSpawn)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TimeBeforeArHintDisplay, other.TimeBeforeArHintDisplay)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxLockDistanceFromOrigin, other.MaxLockDistanceFromOrigin)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DistanceBehindCameraToSpawnMarker, other.DistanceBehindCameraToSpawnMarker)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TimeBeforeSwitchToArSimple, other.TimeBeforeSwitchToArSimple)) return false;
          if (TutorialEncounterId != other.TutorialEncounterId) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EncounterResetGforce, other.EncounterResetGforce)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LocalMapUpdateIntervalSeconds, other.LocalMapUpdateIntervalSeconds)) return false;
          if (!object.Equals(FlooNetworkConfig, other.FlooNetworkConfig)) return false;
          if(!flooContributionButtonValues_.Equals(other.flooContributionButtonValues_)) return false;
          if (AppBackgroundMap != other.AppBackgroundMap) return false;
          if (AppBackgroundFull != other.AppBackgroundFull) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TriggerableCooldown, other.TriggerableCooldown)) return false;
          if (LevelUpTriggerPriority != other.LevelUpTriggerPriority) return false;
          if (WalkboxTriggerPriority != other.WalkboxTriggerPriority) return false;
          if (!object.Equals(PermissionsConfig, other.PermissionsConfig)) return false;
          if(!swishGameScoringThresholds_.Equals(other.swishGameScoringThresholds_)) return false;
          if(!swishGameScoringBonuses_.Equals(other.swishGameScoringBonuses_)) return false;
          if (!object.Equals(AudioConfig, other.AudioConfig)) return false;
          if(!audioInitialBanks_.Equals(other.audioInitialBanks_)) return false;
          if(!subfeaturePrestigeLevels_.Equals(other.subfeaturePrestigeLevels_)) return false;
          if (!object.Equals(BonusConfig, other.BonusConfig)) return false;
          if (PortkeyWrackspurtCollectionHapticKey != other.PortkeyWrackspurtCollectionHapticKey) return false;
          if (!ParkmodeBgs.Equals(other.ParkmodeBgs)) return false;
          if (PotionMasternoteUnlockTreshold != other.PotionMasternoteUnlockTreshold) return false;
          if(!subfeatureFamilyOrders_.Equals(other.subfeatureFamilyOrders_)) return false;
          if(!batterySaverProfiles_.Equals(other.batterySaverProfiles_)) return false;
          if (RateAppMinPlayerLevel != other.RateAppMinPlayerLevel) return false;
          if (RateAppCooldownDays != other.RateAppCooldownDays) return false;
          if (TooFastCooldown != other.TooFastCooldown) return false;
          if(!encounterBanks_.Equals(other.encounterBanks_)) return false;
          if (DailyRewardPopupTriggerPriority != other.DailyRewardPopupTriggerPriority) return false;
          if (RateAppTriggerPriority != other.RateAppTriggerPriority) return false;
          if (!object.Equals(FtueVideo, other.FtueVideo)) return false;
          if (TutorialPotionBrew != other.TutorialPotionBrew) return false;
          if (GenericTraceSpellFailSfx != other.GenericTraceSpellFailSfx) return false;
          if (TracingSpellGlyphSfx != other.TracingSpellGlyphSfx) return false;
          if (TracingCompleteSfx != other.TracingCompleteSfx) return false;
          if (SpellBarIncreasingSfx != other.SpellBarIncreasingSfx) return false;
          if (BadSpellCastSfx != other.BadSpellCastSfx) return false;
          if (GoodSpellCastSfx != other.GoodSpellCastSfx) return false;
          if (GreatSpellCastSfx != other.GreatSpellCastSfx) return false;
          if (PerfectSpellCastSfx != other.PerfectSpellCastSfx) return false;
          if (RegistryStickerPlacedHapticKey != other.RegistryStickerPlacedHapticKey) return false;
          if(!rewardsVesselByRarity_.Equals(other.rewardsVesselByRarity_)) return false;
          if(!rewardsSoundBanks_.Equals(other.rewardsSoundBanks_)) return false;
          if (FirstStickerStoryboardId != other.FirstStickerStoryboardId) return false;
          if (FirstStickerCollectionId != other.FirstStickerCollectionId) return false;
          if (!object.Equals(AvatarDefaultColor, other.AvatarDefaultColor)) return false;
          if (!object.Equals(LockOnCompletionSfx, other.LockOnCompletionSfx)) return false;
          if (!object.Equals(LockOnTimeUpSfx, other.LockOnTimeUpSfx)) return false;
          if (!object.Equals(ProtegoCastSfx, other.ProtegoCastSfx)) return false;
          if (!object.Equals(ProtegoTimeUpSfx, other.ProtegoTimeUpSfx)) return false;
          if (MsBeforeFinalIntensity != other.MsBeforeFinalIntensity) return false;
          if (MsBeforeSecondaryIntensity != other.MsBeforeSecondaryIntensity) return false;
          if(!challengeThirtySecondsLeftStinger_.Equals(other.challengeThirtySecondsLeftStinger_)) return false;
          if(!challengeEncounterPlayerVictoriousStinger_.Equals(other.challengeEncounterPlayerVictoriousStinger_)) return false;
          if(!challengeEncounterPlayerDefeatedStinger_.Equals(other.challengeEncounterPlayerDefeatedStinger_)) return false;
          if(!challengeBeginStinger_.Equals(other.challengeBeginStinger_)) return false;
          if(!challengeFinishVictory_.Equals(other.challengeFinishVictory_)) return false;
          if(!challengeFinishDefeat_.Equals(other.challengeFinishDefeat_)) return false;
          if(!challengeEliteMobSpawnsStinger_.Equals(other.challengeEliteMobSpawnsStinger_)) return false;
          if (InternetReachabilityCheckUrl != other.InternetReachabilityCheckUrl) return false;
          if (RateAppMaxPrompts != other.RateAppMaxPrompts) return false;
          if (RateAppVersion != other.RateAppVersion) return false;
          if (RateAppTriggerWizardingChallenge != other.RateAppTriggerWizardingChallenge) return false;
          if (RateAppTriggerStickerPageComplete != other.RateAppTriggerStickerPageComplete) return false;
          if (RateAppTriggerEventQuestLineComplete != other.RateAppTriggerEventQuestLineComplete) return false;
          if (ChecksUntilGpsPrompt != other.ChecksUntilGpsPrompt) return false;
          if(!fortressSoundBanks_.Equals(other.fortressSoundBanks_)) return false;
          if (!object.Equals(TenSecondsLeftInChallengeSfx, other.TenSecondsLeftInChallengeSfx)) return false;
          if (!object.Equals(LongSecondLeftInChallengeSfx, other.LongSecondLeftInChallengeSfx)) return false;
          if (!object.Equals(ShortHalfSecondLeftInChallengeSfx, other.ShortHalfSecondLeftInChallengeSfx)) return false;
          if (!object.Equals(OneMinuteWarningSfx, other.OneMinuteWarningSfx)) return false;
          if (RateAppTriggerMapEnter != other.RateAppTriggerMapEnter) return false;
          if (ProfessionsAffinityAdvantageIcon != other.ProfessionsAffinityAdvantageIcon) return false;
          if (ProfessionsAffinityNeutralIcon != other.ProfessionsAffinityNeutralIcon) return false;
          if (ProfessionsAffinityDisadvantageIcon != other.ProfessionsAffinityDisadvantageIcon) return false;
          if (InternetOutageBackoffTime != other.InternetOutageBackoffTime) return false;
          if (ArCoreStoryboardTrigger != other.ArCoreStoryboardTrigger) return false;
          if(!voiceOverMappings_.Equals(other.voiceOverMappings_)) return false;
          if (InAppMessageTriggerPriority != other.InAppMessageTriggerPriority) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(InternalFortressInteractRange, other.InternalFortressInteractRange)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LowConnectivityThresholdBytesPerMs, other.LowConnectivityThresholdBytesPerMs)) return false;
          if (GameSizeInKb != other.GameSizeInKb) return false;
          if (WcMapEnemyMarkerBuffOccupiedImage != other.WcMapEnemyMarkerBuffOccupiedImage) return false;
          if (WcMapEnemyMarkerBuffVacantImage != other.WcMapEnemyMarkerBuffVacantImage) return false;
          if (WcEnemyLookInBuffBorderImage != other.WcEnemyLookInBuffBorderImage) return false;
          if(!localizationMappings_.Equals(other.localizationMappings_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (targetGlyphColor_ != null) hash ^= TargetGlyphColor.GetHashCode();
          if (reticleGlyphColor_ != null) hash ^= ReticleGlyphColor.GetHashCode();
          if (alignedGlyphColor_ != null) hash ^= AlignedGlyphColor.GetHashCode();
          if (EncounterAngleOfSpawn != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EncounterAngleOfSpawn);
          if (TimeBeforeArHintDisplay != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TimeBeforeArHintDisplay);
          if (MaxLockDistanceFromOrigin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxLockDistanceFromOrigin);
          if (DistanceBehindCameraToSpawnMarker != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DistanceBehindCameraToSpawnMarker);
          if (TimeBeforeSwitchToArSimple != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TimeBeforeSwitchToArSimple);
          if (TutorialEncounterId.Length != 0) hash ^= TutorialEncounterId.GetHashCode();
          if (EncounterResetGforce != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EncounterResetGforce);
          if (LocalMapUpdateIntervalSeconds != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LocalMapUpdateIntervalSeconds);
          if (flooNetworkConfig_ != null) hash ^= FlooNetworkConfig.GetHashCode();
          hash ^= flooContributionButtonValues_.GetHashCode();
          if (AppBackgroundMap != 0) hash ^= AppBackgroundMap.GetHashCode();
          if (AppBackgroundFull != 0) hash ^= AppBackgroundFull.GetHashCode();
          if (TriggerableCooldown != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TriggerableCooldown);
          if (LevelUpTriggerPriority != 0) hash ^= LevelUpTriggerPriority.GetHashCode();
          if (WalkboxTriggerPriority != 0) hash ^= WalkboxTriggerPriority.GetHashCode();
          if (permissionsConfig_ != null) hash ^= PermissionsConfig.GetHashCode();
          hash ^= swishGameScoringThresholds_.GetHashCode();
          hash ^= swishGameScoringBonuses_.GetHashCode();
          if (audioConfig_ != null) hash ^= AudioConfig.GetHashCode();
          hash ^= audioInitialBanks_.GetHashCode();
          hash ^= subfeaturePrestigeLevels_.GetHashCode();
          if (bonusConfig_ != null) hash ^= BonusConfig.GetHashCode();
          if (PortkeyWrackspurtCollectionHapticKey.Length != 0) hash ^= PortkeyWrackspurtCollectionHapticKey.GetHashCode();
          hash ^= ParkmodeBgs.GetHashCode();
          if (PotionMasternoteUnlockTreshold != 0) hash ^= PotionMasternoteUnlockTreshold.GetHashCode();
          hash ^= subfeatureFamilyOrders_.GetHashCode();
          hash ^= batterySaverProfiles_.GetHashCode();
          if (RateAppMinPlayerLevel != 0) hash ^= RateAppMinPlayerLevel.GetHashCode();
          if (RateAppCooldownDays != 0) hash ^= RateAppCooldownDays.GetHashCode();
          if (TooFastCooldown != 0) hash ^= TooFastCooldown.GetHashCode();
          hash ^= encounterBanks_.GetHashCode();
          if (DailyRewardPopupTriggerPriority != 0) hash ^= DailyRewardPopupTriggerPriority.GetHashCode();
          if (RateAppTriggerPriority != 0) hash ^= RateAppTriggerPriority.GetHashCode();
          if (ftueVideo_ != null) hash ^= FtueVideo.GetHashCode();
          if (TutorialPotionBrew.Length != 0) hash ^= TutorialPotionBrew.GetHashCode();
          if (GenericTraceSpellFailSfx.Length != 0) hash ^= GenericTraceSpellFailSfx.GetHashCode();
          if (TracingSpellGlyphSfx.Length != 0) hash ^= TracingSpellGlyphSfx.GetHashCode();
          if (TracingCompleteSfx.Length != 0) hash ^= TracingCompleteSfx.GetHashCode();
          if (SpellBarIncreasingSfx.Length != 0) hash ^= SpellBarIncreasingSfx.GetHashCode();
          if (BadSpellCastSfx.Length != 0) hash ^= BadSpellCastSfx.GetHashCode();
          if (GoodSpellCastSfx.Length != 0) hash ^= GoodSpellCastSfx.GetHashCode();
          if (GreatSpellCastSfx.Length != 0) hash ^= GreatSpellCastSfx.GetHashCode();
          if (PerfectSpellCastSfx.Length != 0) hash ^= PerfectSpellCastSfx.GetHashCode();
          if (RegistryStickerPlacedHapticKey.Length != 0) hash ^= RegistryStickerPlacedHapticKey.GetHashCode();
          hash ^= rewardsVesselByRarity_.GetHashCode();
          hash ^= rewardsSoundBanks_.GetHashCode();
          if (FirstStickerStoryboardId.Length != 0) hash ^= FirstStickerStoryboardId.GetHashCode();
          if (FirstStickerCollectionId.Length != 0) hash ^= FirstStickerCollectionId.GetHashCode();
          if (avatarDefaultColor_ != null) hash ^= AvatarDefaultColor.GetHashCode();
          if (lockOnCompletionSfx_ != null) hash ^= LockOnCompletionSfx.GetHashCode();
          if (lockOnTimeUpSfx_ != null) hash ^= LockOnTimeUpSfx.GetHashCode();
          if (protegoCastSfx_ != null) hash ^= ProtegoCastSfx.GetHashCode();
          if (protegoTimeUpSfx_ != null) hash ^= ProtegoTimeUpSfx.GetHashCode();
          if (MsBeforeFinalIntensity != 0) hash ^= MsBeforeFinalIntensity.GetHashCode();
          if (MsBeforeSecondaryIntensity != 0) hash ^= MsBeforeSecondaryIntensity.GetHashCode();
          hash ^= challengeThirtySecondsLeftStinger_.GetHashCode();
          hash ^= challengeEncounterPlayerVictoriousStinger_.GetHashCode();
          hash ^= challengeEncounterPlayerDefeatedStinger_.GetHashCode();
          hash ^= challengeBeginStinger_.GetHashCode();
          hash ^= challengeFinishVictory_.GetHashCode();
          hash ^= challengeFinishDefeat_.GetHashCode();
          hash ^= challengeEliteMobSpawnsStinger_.GetHashCode();
          if (InternetReachabilityCheckUrl.Length != 0) hash ^= InternetReachabilityCheckUrl.GetHashCode();
          if (RateAppMaxPrompts != 0) hash ^= RateAppMaxPrompts.GetHashCode();
          if (RateAppVersion != 0) hash ^= RateAppVersion.GetHashCode();
          if (RateAppTriggerWizardingChallenge != 0) hash ^= RateAppTriggerWizardingChallenge.GetHashCode();
          if (RateAppTriggerStickerPageComplete != 0) hash ^= RateAppTriggerStickerPageComplete.GetHashCode();
          if (RateAppTriggerEventQuestLineComplete != 0) hash ^= RateAppTriggerEventQuestLineComplete.GetHashCode();
          if (ChecksUntilGpsPrompt != 0) hash ^= ChecksUntilGpsPrompt.GetHashCode();
          hash ^= fortressSoundBanks_.GetHashCode();
          if (tenSecondsLeftInChallengeSfx_ != null) hash ^= TenSecondsLeftInChallengeSfx.GetHashCode();
          if (longSecondLeftInChallengeSfx_ != null) hash ^= LongSecondLeftInChallengeSfx.GetHashCode();
          if (shortHalfSecondLeftInChallengeSfx_ != null) hash ^= ShortHalfSecondLeftInChallengeSfx.GetHashCode();
          if (oneMinuteWarningSfx_ != null) hash ^= OneMinuteWarningSfx.GetHashCode();
          if (RateAppTriggerMapEnter != false) hash ^= RateAppTriggerMapEnter.GetHashCode();
          if (ProfessionsAffinityAdvantageIcon.Length != 0) hash ^= ProfessionsAffinityAdvantageIcon.GetHashCode();
          if (ProfessionsAffinityNeutralIcon.Length != 0) hash ^= ProfessionsAffinityNeutralIcon.GetHashCode();
          if (ProfessionsAffinityDisadvantageIcon.Length != 0) hash ^= ProfessionsAffinityDisadvantageIcon.GetHashCode();
          if (InternetOutageBackoffTime != 0) hash ^= InternetOutageBackoffTime.GetHashCode();
          if (ArCoreStoryboardTrigger.Length != 0) hash ^= ArCoreStoryboardTrigger.GetHashCode();
          hash ^= voiceOverMappings_.GetHashCode();
          if (InAppMessageTriggerPriority != 0) hash ^= InAppMessageTriggerPriority.GetHashCode();
          if (InternalFortressInteractRange != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(InternalFortressInteractRange);
          if (LowConnectivityThresholdBytesPerMs != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LowConnectivityThresholdBytesPerMs);
          if (GameSizeInKb != 0) hash ^= GameSizeInKb.GetHashCode();
          if (WcMapEnemyMarkerBuffOccupiedImage.Length != 0) hash ^= WcMapEnemyMarkerBuffOccupiedImage.GetHashCode();
          if (WcMapEnemyMarkerBuffVacantImage.Length != 0) hash ^= WcMapEnemyMarkerBuffVacantImage.GetHashCode();
          if (WcEnemyLookInBuffBorderImage.Length != 0) hash ^= WcEnemyLookInBuffBorderImage.GetHashCode();
          hash ^= localizationMappings_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (targetGlyphColor_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(TargetGlyphColor);
          }
          if (reticleGlyphColor_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(ReticleGlyphColor);
          }
          if (alignedGlyphColor_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(AlignedGlyphColor);
          }
          if (EncounterAngleOfSpawn != 0F) {
            output.WriteRawTag(45);
            output.WriteFloat(EncounterAngleOfSpawn);
          }
          if (TimeBeforeArHintDisplay != 0F) {
            output.WriteRawTag(53);
            output.WriteFloat(TimeBeforeArHintDisplay);
          }
          if (MaxLockDistanceFromOrigin != 0F) {
            output.WriteRawTag(61);
            output.WriteFloat(MaxLockDistanceFromOrigin);
          }
          if (DistanceBehindCameraToSpawnMarker != 0F) {
            output.WriteRawTag(69);
            output.WriteFloat(DistanceBehindCameraToSpawnMarker);
          }
          if (TimeBeforeSwitchToArSimple != 0F) {
            output.WriteRawTag(77);
            output.WriteFloat(TimeBeforeSwitchToArSimple);
          }
          if (TutorialEncounterId.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(TutorialEncounterId);
          }
          if (EncounterResetGforce != 0F) {
            output.WriteRawTag(93);
            output.WriteFloat(EncounterResetGforce);
          }
          if (LocalMapUpdateIntervalSeconds != 0F) {
            output.WriteRawTag(101);
            output.WriteFloat(LocalMapUpdateIntervalSeconds);
          }
          if (flooNetworkConfig_ != null) {
            output.WriteRawTag(106);
            output.WriteMessage(FlooNetworkConfig);
          }
          flooContributionButtonValues_.WriteTo(output, _repeated_flooContributionButtonValues_codec);
          if (AppBackgroundMap != 0) {
            output.WriteRawTag(120);
            output.WriteInt32(AppBackgroundMap);
          }
          if (AppBackgroundFull != 0) {
            output.WriteRawTag(128, 1);
            output.WriteInt32(AppBackgroundFull);
          }
          if (TriggerableCooldown != 0F) {
            output.WriteRawTag(141, 1);
            output.WriteFloat(TriggerableCooldown);
          }
          if (LevelUpTriggerPriority != 0) {
            output.WriteRawTag(144, 1);
            output.WriteInt32(LevelUpTriggerPriority);
          }
          if (WalkboxTriggerPriority != 0) {
            output.WriteRawTag(152, 1);
            output.WriteInt32(WalkboxTriggerPriority);
          }
          if (permissionsConfig_ != null) {
            output.WriteRawTag(162, 1);
            output.WriteMessage(PermissionsConfig);
          }
          swishGameScoringThresholds_.WriteTo(output, _repeated_swishGameScoringThresholds_codec);
          swishGameScoringBonuses_.WriteTo(output, _repeated_swishGameScoringBonuses_codec);
          if (audioConfig_ != null) {
            output.WriteRawTag(194, 1);
            output.WriteMessage(AudioConfig);
          }
          audioInitialBanks_.WriteTo(output, _repeated_audioInitialBanks_codec);
          subfeaturePrestigeLevels_.WriteTo(output, _repeated_subfeaturePrestigeLevels_codec);
          if (bonusConfig_ != null) {
            output.WriteRawTag(218, 1);
            output.WriteMessage(BonusConfig);
          }
          if (PortkeyWrackspurtCollectionHapticKey.Length != 0) {
            output.WriteRawTag(226, 1);
            output.WriteString(PortkeyWrackspurtCollectionHapticKey);
          }
          parkmodeBgs_.WriteTo(output, _map_parkmodeBgs_codec);
          if (PotionMasternoteUnlockTreshold != 0) {
            output.WriteRawTag(240, 1);
            output.WriteInt32(PotionMasternoteUnlockTreshold);
          }
          subfeatureFamilyOrders_.WriteTo(output, _repeated_subfeatureFamilyOrders_codec);
          batterySaverProfiles_.WriteTo(output, _repeated_batterySaverProfiles_codec);
          if (RateAppMinPlayerLevel != 0) {
            output.WriteRawTag(136, 2);
            output.WriteInt32(RateAppMinPlayerLevel);
          }
          if (RateAppCooldownDays != 0) {
            output.WriteRawTag(144, 2);
            output.WriteInt32(RateAppCooldownDays);
          }
          if (TooFastCooldown != 0) {
            output.WriteRawTag(152, 2);
            output.WriteInt32(TooFastCooldown);
          }
          encounterBanks_.WriteTo(output, _repeated_encounterBanks_codec);
          if (DailyRewardPopupTriggerPriority != 0) {
            output.WriteRawTag(168, 2);
            output.WriteInt32(DailyRewardPopupTriggerPriority);
          }
          if (RateAppTriggerPriority != 0) {
            output.WriteRawTag(176, 2);
            output.WriteInt32(RateAppTriggerPriority);
          }
          if (ftueVideo_ != null) {
            output.WriteRawTag(218, 2);
            output.WriteMessage(FtueVideo);
          }
          if (TutorialPotionBrew.Length != 0) {
            output.WriteRawTag(226, 2);
            output.WriteString(TutorialPotionBrew);
          }
          if (GenericTraceSpellFailSfx.Length != 0) {
            output.WriteRawTag(234, 2);
            output.WriteString(GenericTraceSpellFailSfx);
          }
          if (TracingSpellGlyphSfx.Length != 0) {
            output.WriteRawTag(242, 2);
            output.WriteString(TracingSpellGlyphSfx);
          }
          if (TracingCompleteSfx.Length != 0) {
            output.WriteRawTag(250, 2);
            output.WriteString(TracingCompleteSfx);
          }
          if (SpellBarIncreasingSfx.Length != 0) {
            output.WriteRawTag(130, 3);
            output.WriteString(SpellBarIncreasingSfx);
          }
          if (BadSpellCastSfx.Length != 0) {
            output.WriteRawTag(138, 3);
            output.WriteString(BadSpellCastSfx);
          }
          if (GoodSpellCastSfx.Length != 0) {
            output.WriteRawTag(146, 3);
            output.WriteString(GoodSpellCastSfx);
          }
          if (GreatSpellCastSfx.Length != 0) {
            output.WriteRawTag(154, 3);
            output.WriteString(GreatSpellCastSfx);
          }
          if (PerfectSpellCastSfx.Length != 0) {
            output.WriteRawTag(162, 3);
            output.WriteString(PerfectSpellCastSfx);
          }
          if (RegistryStickerPlacedHapticKey.Length != 0) {
            output.WriteRawTag(170, 3);
            output.WriteString(RegistryStickerPlacedHapticKey);
          }
          rewardsVesselByRarity_.WriteTo(output, _repeated_rewardsVesselByRarity_codec);
          rewardsSoundBanks_.WriteTo(output, _repeated_rewardsSoundBanks_codec);
          if (FirstStickerStoryboardId.Length != 0) {
            output.WriteRawTag(194, 3);
            output.WriteString(FirstStickerStoryboardId);
          }
          if (FirstStickerCollectionId.Length != 0) {
            output.WriteRawTag(202, 3);
            output.WriteString(FirstStickerCollectionId);
          }
          if (avatarDefaultColor_ != null) {
            output.WriteRawTag(210, 3);
            output.WriteMessage(AvatarDefaultColor);
          }
          if (lockOnCompletionSfx_ != null) {
            output.WriteRawTag(218, 3);
            output.WriteMessage(LockOnCompletionSfx);
          }
          if (lockOnTimeUpSfx_ != null) {
            output.WriteRawTag(226, 3);
            output.WriteMessage(LockOnTimeUpSfx);
          }
          if (protegoCastSfx_ != null) {
            output.WriteRawTag(234, 3);
            output.WriteMessage(ProtegoCastSfx);
          }
          if (protegoTimeUpSfx_ != null) {
            output.WriteRawTag(242, 3);
            output.WriteMessage(ProtegoTimeUpSfx);
          }
          if (MsBeforeFinalIntensity != 0) {
            output.WriteRawTag(248, 3);
            output.WriteInt32(MsBeforeFinalIntensity);
          }
          if (MsBeforeSecondaryIntensity != 0) {
            output.WriteRawTag(128, 4);
            output.WriteInt32(MsBeforeSecondaryIntensity);
          }
          challengeThirtySecondsLeftStinger_.WriteTo(output, _repeated_challengeThirtySecondsLeftStinger_codec);
          challengeEncounterPlayerVictoriousStinger_.WriteTo(output, _repeated_challengeEncounterPlayerVictoriousStinger_codec);
          challengeEncounterPlayerDefeatedStinger_.WriteTo(output, _repeated_challengeEncounterPlayerDefeatedStinger_codec);
          challengeBeginStinger_.WriteTo(output, _repeated_challengeBeginStinger_codec);
          challengeFinishVictory_.WriteTo(output, _repeated_challengeFinishVictory_codec);
          challengeFinishDefeat_.WriteTo(output, _repeated_challengeFinishDefeat_codec);
          challengeEliteMobSpawnsStinger_.WriteTo(output, _repeated_challengeEliteMobSpawnsStinger_codec);
          if (InternetReachabilityCheckUrl.Length != 0) {
            output.WriteRawTag(194, 4);
            output.WriteString(InternetReachabilityCheckUrl);
          }
          if (RateAppMaxPrompts != 0) {
            output.WriteRawTag(200, 4);
            output.WriteInt32(RateAppMaxPrompts);
          }
          if (RateAppVersion != 0) {
            output.WriteRawTag(208, 4);
            output.WriteInt32(RateAppVersion);
          }
          if (RateAppTriggerWizardingChallenge != 0) {
            output.WriteRawTag(216, 4);
            output.WriteInt32(RateAppTriggerWizardingChallenge);
          }
          if (RateAppTriggerStickerPageComplete != 0) {
            output.WriteRawTag(224, 4);
            output.WriteInt32(RateAppTriggerStickerPageComplete);
          }
          if (RateAppTriggerEventQuestLineComplete != 0) {
            output.WriteRawTag(232, 4);
            output.WriteInt32(RateAppTriggerEventQuestLineComplete);
          }
          if (ChecksUntilGpsPrompt != 0) {
            output.WriteRawTag(240, 4);
            output.WriteInt32(ChecksUntilGpsPrompt);
          }
          fortressSoundBanks_.WriteTo(output, _repeated_fortressSoundBanks_codec);
          if (tenSecondsLeftInChallengeSfx_ != null) {
            output.WriteRawTag(130, 5);
            output.WriteMessage(TenSecondsLeftInChallengeSfx);
          }
          if (longSecondLeftInChallengeSfx_ != null) {
            output.WriteRawTag(138, 5);
            output.WriteMessage(LongSecondLeftInChallengeSfx);
          }
          if (shortHalfSecondLeftInChallengeSfx_ != null) {
            output.WriteRawTag(146, 5);
            output.WriteMessage(ShortHalfSecondLeftInChallengeSfx);
          }
          if (oneMinuteWarningSfx_ != null) {
            output.WriteRawTag(154, 5);
            output.WriteMessage(OneMinuteWarningSfx);
          }
          if (RateAppTriggerMapEnter != false) {
            output.WriteRawTag(160, 5);
            output.WriteBool(RateAppTriggerMapEnter);
          }
          if (ProfessionsAffinityAdvantageIcon.Length != 0) {
            output.WriteRawTag(170, 5);
            output.WriteString(ProfessionsAffinityAdvantageIcon);
          }
          if (ProfessionsAffinityNeutralIcon.Length != 0) {
            output.WriteRawTag(178, 5);
            output.WriteString(ProfessionsAffinityNeutralIcon);
          }
          if (ProfessionsAffinityDisadvantageIcon.Length != 0) {
            output.WriteRawTag(186, 5);
            output.WriteString(ProfessionsAffinityDisadvantageIcon);
          }
          if (InternetOutageBackoffTime != 0) {
            output.WriteRawTag(192, 5);
            output.WriteInt32(InternetOutageBackoffTime);
          }
          if (ArCoreStoryboardTrigger.Length != 0) {
            output.WriteRawTag(202, 5);
            output.WriteString(ArCoreStoryboardTrigger);
          }
          voiceOverMappings_.WriteTo(output, _repeated_voiceOverMappings_codec);
          if (InAppMessageTriggerPriority != 0) {
            output.WriteRawTag(216, 5);
            output.WriteInt32(InAppMessageTriggerPriority);
          }
          if (InternalFortressInteractRange != 0F) {
            output.WriteRawTag(229, 5);
            output.WriteFloat(InternalFortressInteractRange);
          }
          if (LowConnectivityThresholdBytesPerMs != 0F) {
            output.WriteRawTag(237, 5);
            output.WriteFloat(LowConnectivityThresholdBytesPerMs);
          }
          if (GameSizeInKb != 0) {
            output.WriteRawTag(240, 5);
            output.WriteInt32(GameSizeInKb);
          }
          if (WcMapEnemyMarkerBuffOccupiedImage.Length != 0) {
            output.WriteRawTag(250, 5);
            output.WriteString(WcMapEnemyMarkerBuffOccupiedImage);
          }
          if (WcMapEnemyMarkerBuffVacantImage.Length != 0) {
            output.WriteRawTag(130, 6);
            output.WriteString(WcMapEnemyMarkerBuffVacantImage);
          }
          if (WcEnemyLookInBuffBorderImage.Length != 0) {
            output.WriteRawTag(138, 6);
            output.WriteString(WcEnemyLookInBuffBorderImage);
          }
          localizationMappings_.WriteTo(output, _repeated_localizationMappings_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (targetGlyphColor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetGlyphColor);
          }
          if (reticleGlyphColor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReticleGlyphColor);
          }
          if (alignedGlyphColor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AlignedGlyphColor);
          }
          if (EncounterAngleOfSpawn != 0F) {
            size += 1 + 4;
          }
          if (TimeBeforeArHintDisplay != 0F) {
            size += 1 + 4;
          }
          if (MaxLockDistanceFromOrigin != 0F) {
            size += 1 + 4;
          }
          if (DistanceBehindCameraToSpawnMarker != 0F) {
            size += 1 + 4;
          }
          if (TimeBeforeSwitchToArSimple != 0F) {
            size += 1 + 4;
          }
          if (TutorialEncounterId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TutorialEncounterId);
          }
          if (EncounterResetGforce != 0F) {
            size += 1 + 4;
          }
          if (LocalMapUpdateIntervalSeconds != 0F) {
            size += 1 + 4;
          }
          if (flooNetworkConfig_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FlooNetworkConfig);
          }
          size += flooContributionButtonValues_.CalculateSize(_repeated_flooContributionButtonValues_codec);
          if (AppBackgroundMap != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppBackgroundMap);
          }
          if (AppBackgroundFull != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(AppBackgroundFull);
          }
          if (TriggerableCooldown != 0F) {
            size += 2 + 4;
          }
          if (LevelUpTriggerPriority != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LevelUpTriggerPriority);
          }
          if (WalkboxTriggerPriority != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(WalkboxTriggerPriority);
          }
          if (permissionsConfig_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(PermissionsConfig);
          }
          size += swishGameScoringThresholds_.CalculateSize(_repeated_swishGameScoringThresholds_codec);
          size += swishGameScoringBonuses_.CalculateSize(_repeated_swishGameScoringBonuses_codec);
          if (audioConfig_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(AudioConfig);
          }
          size += audioInitialBanks_.CalculateSize(_repeated_audioInitialBanks_codec);
          size += subfeaturePrestigeLevels_.CalculateSize(_repeated_subfeaturePrestigeLevels_codec);
          if (bonusConfig_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(BonusConfig);
          }
          if (PortkeyWrackspurtCollectionHapticKey.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(PortkeyWrackspurtCollectionHapticKey);
          }
          size += parkmodeBgs_.CalculateSize(_map_parkmodeBgs_codec);
          if (PotionMasternoteUnlockTreshold != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(PotionMasternoteUnlockTreshold);
          }
          size += subfeatureFamilyOrders_.CalculateSize(_repeated_subfeatureFamilyOrders_codec);
          size += batterySaverProfiles_.CalculateSize(_repeated_batterySaverProfiles_codec);
          if (RateAppMinPlayerLevel != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(RateAppMinPlayerLevel);
          }
          if (RateAppCooldownDays != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(RateAppCooldownDays);
          }
          if (TooFastCooldown != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(TooFastCooldown);
          }
          size += encounterBanks_.CalculateSize(_repeated_encounterBanks_codec);
          if (DailyRewardPopupTriggerPriority != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(DailyRewardPopupTriggerPriority);
          }
          if (RateAppTriggerPriority != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(RateAppTriggerPriority);
          }
          if (ftueVideo_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(FtueVideo);
          }
          if (TutorialPotionBrew.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(TutorialPotionBrew);
          }
          if (GenericTraceSpellFailSfx.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(GenericTraceSpellFailSfx);
          }
          if (TracingSpellGlyphSfx.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(TracingSpellGlyphSfx);
          }
          if (TracingCompleteSfx.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(TracingCompleteSfx);
          }
          if (SpellBarIncreasingSfx.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(SpellBarIncreasingSfx);
          }
          if (BadSpellCastSfx.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(BadSpellCastSfx);
          }
          if (GoodSpellCastSfx.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(GoodSpellCastSfx);
          }
          if (GreatSpellCastSfx.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(GreatSpellCastSfx);
          }
          if (PerfectSpellCastSfx.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(PerfectSpellCastSfx);
          }
          if (RegistryStickerPlacedHapticKey.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(RegistryStickerPlacedHapticKey);
          }
          size += rewardsVesselByRarity_.CalculateSize(_repeated_rewardsVesselByRarity_codec);
          size += rewardsSoundBanks_.CalculateSize(_repeated_rewardsSoundBanks_codec);
          if (FirstStickerStoryboardId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(FirstStickerStoryboardId);
          }
          if (FirstStickerCollectionId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(FirstStickerCollectionId);
          }
          if (avatarDefaultColor_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(AvatarDefaultColor);
          }
          if (lockOnCompletionSfx_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(LockOnCompletionSfx);
          }
          if (lockOnTimeUpSfx_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(LockOnTimeUpSfx);
          }
          if (protegoCastSfx_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(ProtegoCastSfx);
          }
          if (protegoTimeUpSfx_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(ProtegoTimeUpSfx);
          }
          if (MsBeforeFinalIntensity != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(MsBeforeFinalIntensity);
          }
          if (MsBeforeSecondaryIntensity != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(MsBeforeSecondaryIntensity);
          }
          size += challengeThirtySecondsLeftStinger_.CalculateSize(_repeated_challengeThirtySecondsLeftStinger_codec);
          size += challengeEncounterPlayerVictoriousStinger_.CalculateSize(_repeated_challengeEncounterPlayerVictoriousStinger_codec);
          size += challengeEncounterPlayerDefeatedStinger_.CalculateSize(_repeated_challengeEncounterPlayerDefeatedStinger_codec);
          size += challengeBeginStinger_.CalculateSize(_repeated_challengeBeginStinger_codec);
          size += challengeFinishVictory_.CalculateSize(_repeated_challengeFinishVictory_codec);
          size += challengeFinishDefeat_.CalculateSize(_repeated_challengeFinishDefeat_codec);
          size += challengeEliteMobSpawnsStinger_.CalculateSize(_repeated_challengeEliteMobSpawnsStinger_codec);
          if (InternetReachabilityCheckUrl.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(InternetReachabilityCheckUrl);
          }
          if (RateAppMaxPrompts != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(RateAppMaxPrompts);
          }
          if (RateAppVersion != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(RateAppVersion);
          }
          if (RateAppTriggerWizardingChallenge != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(RateAppTriggerWizardingChallenge);
          }
          if (RateAppTriggerStickerPageComplete != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(RateAppTriggerStickerPageComplete);
          }
          if (RateAppTriggerEventQuestLineComplete != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(RateAppTriggerEventQuestLineComplete);
          }
          if (ChecksUntilGpsPrompt != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(ChecksUntilGpsPrompt);
          }
          size += fortressSoundBanks_.CalculateSize(_repeated_fortressSoundBanks_codec);
          if (tenSecondsLeftInChallengeSfx_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(TenSecondsLeftInChallengeSfx);
          }
          if (longSecondLeftInChallengeSfx_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(LongSecondLeftInChallengeSfx);
          }
          if (shortHalfSecondLeftInChallengeSfx_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(ShortHalfSecondLeftInChallengeSfx);
          }
          if (oneMinuteWarningSfx_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(OneMinuteWarningSfx);
          }
          if (RateAppTriggerMapEnter != false) {
            size += 2 + 1;
          }
          if (ProfessionsAffinityAdvantageIcon.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ProfessionsAffinityAdvantageIcon);
          }
          if (ProfessionsAffinityNeutralIcon.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ProfessionsAffinityNeutralIcon);
          }
          if (ProfessionsAffinityDisadvantageIcon.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ProfessionsAffinityDisadvantageIcon);
          }
          if (InternetOutageBackoffTime != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(InternetOutageBackoffTime);
          }
          if (ArCoreStoryboardTrigger.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ArCoreStoryboardTrigger);
          }
          size += voiceOverMappings_.CalculateSize(_repeated_voiceOverMappings_codec);
          if (InAppMessageTriggerPriority != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(InAppMessageTriggerPriority);
          }
          if (InternalFortressInteractRange != 0F) {
            size += 2 + 4;
          }
          if (LowConnectivityThresholdBytesPerMs != 0F) {
            size += 2 + 4;
          }
          if (GameSizeInKb != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(GameSizeInKb);
          }
          if (WcMapEnemyMarkerBuffOccupiedImage.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(WcMapEnemyMarkerBuffOccupiedImage);
          }
          if (WcMapEnemyMarkerBuffVacantImage.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(WcMapEnemyMarkerBuffVacantImage);
          }
          if (WcEnemyLookInBuffBorderImage.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(WcEnemyLookInBuffBorderImage);
          }
          size += localizationMappings_.CalculateSize(_repeated_localizationMappings_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientGameConfig other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.targetGlyphColor_ != null) {
            if (targetGlyphColor_ == null) {
              TargetGlyphColor = new global::WUProtos.Data.Color();
            }
            TargetGlyphColor.MergeFrom(other.TargetGlyphColor);
          }
          if (other.reticleGlyphColor_ != null) {
            if (reticleGlyphColor_ == null) {
              ReticleGlyphColor = new global::WUProtos.Data.Color();
            }
            ReticleGlyphColor.MergeFrom(other.ReticleGlyphColor);
          }
          if (other.alignedGlyphColor_ != null) {
            if (alignedGlyphColor_ == null) {
              AlignedGlyphColor = new global::WUProtos.Data.Color();
            }
            AlignedGlyphColor.MergeFrom(other.AlignedGlyphColor);
          }
          if (other.EncounterAngleOfSpawn != 0F) {
            EncounterAngleOfSpawn = other.EncounterAngleOfSpawn;
          }
          if (other.TimeBeforeArHintDisplay != 0F) {
            TimeBeforeArHintDisplay = other.TimeBeforeArHintDisplay;
          }
          if (other.MaxLockDistanceFromOrigin != 0F) {
            MaxLockDistanceFromOrigin = other.MaxLockDistanceFromOrigin;
          }
          if (other.DistanceBehindCameraToSpawnMarker != 0F) {
            DistanceBehindCameraToSpawnMarker = other.DistanceBehindCameraToSpawnMarker;
          }
          if (other.TimeBeforeSwitchToArSimple != 0F) {
            TimeBeforeSwitchToArSimple = other.TimeBeforeSwitchToArSimple;
          }
          if (other.TutorialEncounterId.Length != 0) {
            TutorialEncounterId = other.TutorialEncounterId;
          }
          if (other.EncounterResetGforce != 0F) {
            EncounterResetGforce = other.EncounterResetGforce;
          }
          if (other.LocalMapUpdateIntervalSeconds != 0F) {
            LocalMapUpdateIntervalSeconds = other.LocalMapUpdateIntervalSeconds;
          }
          if (other.flooNetworkConfig_ != null) {
            if (flooNetworkConfig_ == null) {
              FlooNetworkConfig = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFlooNetworkConfig();
            }
            FlooNetworkConfig.MergeFrom(other.FlooNetworkConfig);
          }
          flooContributionButtonValues_.Add(other.flooContributionButtonValues_);
          if (other.AppBackgroundMap != 0) {
            AppBackgroundMap = other.AppBackgroundMap;
          }
          if (other.AppBackgroundFull != 0) {
            AppBackgroundFull = other.AppBackgroundFull;
          }
          if (other.TriggerableCooldown != 0F) {
            TriggerableCooldown = other.TriggerableCooldown;
          }
          if (other.LevelUpTriggerPriority != 0) {
            LevelUpTriggerPriority = other.LevelUpTriggerPriority;
          }
          if (other.WalkboxTriggerPriority != 0) {
            WalkboxTriggerPriority = other.WalkboxTriggerPriority;
          }
          if (other.permissionsConfig_ != null) {
            if (permissionsConfig_ == null) {
              PermissionsConfig = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.PermissionsConfigStaticList();
            }
            PermissionsConfig.MergeFrom(other.PermissionsConfig);
          }
          swishGameScoringThresholds_.Add(other.swishGameScoringThresholds_);
          swishGameScoringBonuses_.Add(other.swishGameScoringBonuses_);
          if (other.audioConfig_ != null) {
            if (audioConfig_ == null) {
              AudioConfig = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.AudioConfig();
            }
            AudioConfig.MergeFrom(other.AudioConfig);
          }
          audioInitialBanks_.Add(other.audioInitialBanks_);
          subfeaturePrestigeLevels_.Add(other.subfeaturePrestigeLevels_);
          if (other.bonusConfig_ != null) {
            if (bonusConfig_ == null) {
              BonusConfig = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientBonusConfig();
            }
            BonusConfig.MergeFrom(other.BonusConfig);
          }
          if (other.PortkeyWrackspurtCollectionHapticKey.Length != 0) {
            PortkeyWrackspurtCollectionHapticKey = other.PortkeyWrackspurtCollectionHapticKey;
          }
          parkmodeBgs_.Add(other.parkmodeBgs_);
          if (other.PotionMasternoteUnlockTreshold != 0) {
            PotionMasternoteUnlockTreshold = other.PotionMasternoteUnlockTreshold;
          }
          subfeatureFamilyOrders_.Add(other.subfeatureFamilyOrders_);
          batterySaverProfiles_.Add(other.batterySaverProfiles_);
          if (other.RateAppMinPlayerLevel != 0) {
            RateAppMinPlayerLevel = other.RateAppMinPlayerLevel;
          }
          if (other.RateAppCooldownDays != 0) {
            RateAppCooldownDays = other.RateAppCooldownDays;
          }
          if (other.TooFastCooldown != 0) {
            TooFastCooldown = other.TooFastCooldown;
          }
          encounterBanks_.Add(other.encounterBanks_);
          if (other.DailyRewardPopupTriggerPriority != 0) {
            DailyRewardPopupTriggerPriority = other.DailyRewardPopupTriggerPriority;
          }
          if (other.RateAppTriggerPriority != 0) {
            RateAppTriggerPriority = other.RateAppTriggerPriority;
          }
          if (other.ftueVideo_ != null) {
            if (ftueVideo_ == null) {
              FtueVideo = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig();
            }
            FtueVideo.MergeFrom(other.FtueVideo);
          }
          if (other.TutorialPotionBrew.Length != 0) {
            TutorialPotionBrew = other.TutorialPotionBrew;
          }
          if (other.GenericTraceSpellFailSfx.Length != 0) {
            GenericTraceSpellFailSfx = other.GenericTraceSpellFailSfx;
          }
          if (other.TracingSpellGlyphSfx.Length != 0) {
            TracingSpellGlyphSfx = other.TracingSpellGlyphSfx;
          }
          if (other.TracingCompleteSfx.Length != 0) {
            TracingCompleteSfx = other.TracingCompleteSfx;
          }
          if (other.SpellBarIncreasingSfx.Length != 0) {
            SpellBarIncreasingSfx = other.SpellBarIncreasingSfx;
          }
          if (other.BadSpellCastSfx.Length != 0) {
            BadSpellCastSfx = other.BadSpellCastSfx;
          }
          if (other.GoodSpellCastSfx.Length != 0) {
            GoodSpellCastSfx = other.GoodSpellCastSfx;
          }
          if (other.GreatSpellCastSfx.Length != 0) {
            GreatSpellCastSfx = other.GreatSpellCastSfx;
          }
          if (other.PerfectSpellCastSfx.Length != 0) {
            PerfectSpellCastSfx = other.PerfectSpellCastSfx;
          }
          if (other.RegistryStickerPlacedHapticKey.Length != 0) {
            RegistryStickerPlacedHapticKey = other.RegistryStickerPlacedHapticKey;
          }
          rewardsVesselByRarity_.Add(other.rewardsVesselByRarity_);
          rewardsSoundBanks_.Add(other.rewardsSoundBanks_);
          if (other.FirstStickerStoryboardId.Length != 0) {
            FirstStickerStoryboardId = other.FirstStickerStoryboardId;
          }
          if (other.FirstStickerCollectionId.Length != 0) {
            FirstStickerCollectionId = other.FirstStickerCollectionId;
          }
          if (other.avatarDefaultColor_ != null) {
            if (avatarDefaultColor_ == null) {
              AvatarDefaultColor = new global::WUProtos.Data.Color();
            }
            AvatarDefaultColor.MergeFrom(other.AvatarDefaultColor);
          }
          if (other.lockOnCompletionSfx_ != null) {
            if (lockOnCompletionSfx_ == null) {
              LockOnCompletionSfx = new global::WUProtos.Data.SoundConfig();
            }
            LockOnCompletionSfx.MergeFrom(other.LockOnCompletionSfx);
          }
          if (other.lockOnTimeUpSfx_ != null) {
            if (lockOnTimeUpSfx_ == null) {
              LockOnTimeUpSfx = new global::WUProtos.Data.SoundConfig();
            }
            LockOnTimeUpSfx.MergeFrom(other.LockOnTimeUpSfx);
          }
          if (other.protegoCastSfx_ != null) {
            if (protegoCastSfx_ == null) {
              ProtegoCastSfx = new global::WUProtos.Data.SoundConfig();
            }
            ProtegoCastSfx.MergeFrom(other.ProtegoCastSfx);
          }
          if (other.protegoTimeUpSfx_ != null) {
            if (protegoTimeUpSfx_ == null) {
              ProtegoTimeUpSfx = new global::WUProtos.Data.SoundConfig();
            }
            ProtegoTimeUpSfx.MergeFrom(other.ProtegoTimeUpSfx);
          }
          if (other.MsBeforeFinalIntensity != 0) {
            MsBeforeFinalIntensity = other.MsBeforeFinalIntensity;
          }
          if (other.MsBeforeSecondaryIntensity != 0) {
            MsBeforeSecondaryIntensity = other.MsBeforeSecondaryIntensity;
          }
          challengeThirtySecondsLeftStinger_.Add(other.challengeThirtySecondsLeftStinger_);
          challengeEncounterPlayerVictoriousStinger_.Add(other.challengeEncounterPlayerVictoriousStinger_);
          challengeEncounterPlayerDefeatedStinger_.Add(other.challengeEncounterPlayerDefeatedStinger_);
          challengeBeginStinger_.Add(other.challengeBeginStinger_);
          challengeFinishVictory_.Add(other.challengeFinishVictory_);
          challengeFinishDefeat_.Add(other.challengeFinishDefeat_);
          challengeEliteMobSpawnsStinger_.Add(other.challengeEliteMobSpawnsStinger_);
          if (other.InternetReachabilityCheckUrl.Length != 0) {
            InternetReachabilityCheckUrl = other.InternetReachabilityCheckUrl;
          }
          if (other.RateAppMaxPrompts != 0) {
            RateAppMaxPrompts = other.RateAppMaxPrompts;
          }
          if (other.RateAppVersion != 0) {
            RateAppVersion = other.RateAppVersion;
          }
          if (other.RateAppTriggerWizardingChallenge != 0) {
            RateAppTriggerWizardingChallenge = other.RateAppTriggerWizardingChallenge;
          }
          if (other.RateAppTriggerStickerPageComplete != 0) {
            RateAppTriggerStickerPageComplete = other.RateAppTriggerStickerPageComplete;
          }
          if (other.RateAppTriggerEventQuestLineComplete != 0) {
            RateAppTriggerEventQuestLineComplete = other.RateAppTriggerEventQuestLineComplete;
          }
          if (other.ChecksUntilGpsPrompt != 0) {
            ChecksUntilGpsPrompt = other.ChecksUntilGpsPrompt;
          }
          fortressSoundBanks_.Add(other.fortressSoundBanks_);
          if (other.tenSecondsLeftInChallengeSfx_ != null) {
            if (tenSecondsLeftInChallengeSfx_ == null) {
              TenSecondsLeftInChallengeSfx = new global::WUProtos.Data.SoundConfig();
            }
            TenSecondsLeftInChallengeSfx.MergeFrom(other.TenSecondsLeftInChallengeSfx);
          }
          if (other.longSecondLeftInChallengeSfx_ != null) {
            if (longSecondLeftInChallengeSfx_ == null) {
              LongSecondLeftInChallengeSfx = new global::WUProtos.Data.SoundConfig();
            }
            LongSecondLeftInChallengeSfx.MergeFrom(other.LongSecondLeftInChallengeSfx);
          }
          if (other.shortHalfSecondLeftInChallengeSfx_ != null) {
            if (shortHalfSecondLeftInChallengeSfx_ == null) {
              ShortHalfSecondLeftInChallengeSfx = new global::WUProtos.Data.SoundConfig();
            }
            ShortHalfSecondLeftInChallengeSfx.MergeFrom(other.ShortHalfSecondLeftInChallengeSfx);
          }
          if (other.oneMinuteWarningSfx_ != null) {
            if (oneMinuteWarningSfx_ == null) {
              OneMinuteWarningSfx = new global::WUProtos.Data.SoundConfig();
            }
            OneMinuteWarningSfx.MergeFrom(other.OneMinuteWarningSfx);
          }
          if (other.RateAppTriggerMapEnter != false) {
            RateAppTriggerMapEnter = other.RateAppTriggerMapEnter;
          }
          if (other.ProfessionsAffinityAdvantageIcon.Length != 0) {
            ProfessionsAffinityAdvantageIcon = other.ProfessionsAffinityAdvantageIcon;
          }
          if (other.ProfessionsAffinityNeutralIcon.Length != 0) {
            ProfessionsAffinityNeutralIcon = other.ProfessionsAffinityNeutralIcon;
          }
          if (other.ProfessionsAffinityDisadvantageIcon.Length != 0) {
            ProfessionsAffinityDisadvantageIcon = other.ProfessionsAffinityDisadvantageIcon;
          }
          if (other.InternetOutageBackoffTime != 0) {
            InternetOutageBackoffTime = other.InternetOutageBackoffTime;
          }
          if (other.ArCoreStoryboardTrigger.Length != 0) {
            ArCoreStoryboardTrigger = other.ArCoreStoryboardTrigger;
          }
          voiceOverMappings_.Add(other.voiceOverMappings_);
          if (other.InAppMessageTriggerPriority != 0) {
            InAppMessageTriggerPriority = other.InAppMessageTriggerPriority;
          }
          if (other.InternalFortressInteractRange != 0F) {
            InternalFortressInteractRange = other.InternalFortressInteractRange;
          }
          if (other.LowConnectivityThresholdBytesPerMs != 0F) {
            LowConnectivityThresholdBytesPerMs = other.LowConnectivityThresholdBytesPerMs;
          }
          if (other.GameSizeInKb != 0) {
            GameSizeInKb = other.GameSizeInKb;
          }
          if (other.WcMapEnemyMarkerBuffOccupiedImage.Length != 0) {
            WcMapEnemyMarkerBuffOccupiedImage = other.WcMapEnemyMarkerBuffOccupiedImage;
          }
          if (other.WcMapEnemyMarkerBuffVacantImage.Length != 0) {
            WcMapEnemyMarkerBuffVacantImage = other.WcMapEnemyMarkerBuffVacantImage;
          }
          if (other.WcEnemyLookInBuffBorderImage.Length != 0) {
            WcEnemyLookInBuffBorderImage = other.WcEnemyLookInBuffBorderImage;
          }
          localizationMappings_.Add(other.localizationMappings_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                if (targetGlyphColor_ == null) {
                  TargetGlyphColor = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(TargetGlyphColor);
                break;
              }
              case 26: {
                if (reticleGlyphColor_ == null) {
                  ReticleGlyphColor = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(ReticleGlyphColor);
                break;
              }
              case 34: {
                if (alignedGlyphColor_ == null) {
                  AlignedGlyphColor = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(AlignedGlyphColor);
                break;
              }
              case 45: {
                EncounterAngleOfSpawn = input.ReadFloat();
                break;
              }
              case 53: {
                TimeBeforeArHintDisplay = input.ReadFloat();
                break;
              }
              case 61: {
                MaxLockDistanceFromOrigin = input.ReadFloat();
                break;
              }
              case 69: {
                DistanceBehindCameraToSpawnMarker = input.ReadFloat();
                break;
              }
              case 77: {
                TimeBeforeSwitchToArSimple = input.ReadFloat();
                break;
              }
              case 82: {
                TutorialEncounterId = input.ReadString();
                break;
              }
              case 93: {
                EncounterResetGforce = input.ReadFloat();
                break;
              }
              case 101: {
                LocalMapUpdateIntervalSeconds = input.ReadFloat();
                break;
              }
              case 106: {
                if (flooNetworkConfig_ == null) {
                  FlooNetworkConfig = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFlooNetworkConfig();
                }
                input.ReadMessage(FlooNetworkConfig);
                break;
              }
              case 114:
              case 112: {
                flooContributionButtonValues_.AddEntriesFrom(input, _repeated_flooContributionButtonValues_codec);
                break;
              }
              case 120: {
                AppBackgroundMap = input.ReadInt32();
                break;
              }
              case 128: {
                AppBackgroundFull = input.ReadInt32();
                break;
              }
              case 141: {
                TriggerableCooldown = input.ReadFloat();
                break;
              }
              case 144: {
                LevelUpTriggerPriority = input.ReadInt32();
                break;
              }
              case 152: {
                WalkboxTriggerPriority = input.ReadInt32();
                break;
              }
              case 162: {
                if (permissionsConfig_ == null) {
                  PermissionsConfig = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.PermissionsConfigStaticList();
                }
                input.ReadMessage(PermissionsConfig);
                break;
              }
              case 178:
              case 181: {
                swishGameScoringThresholds_.AddEntriesFrom(input, _repeated_swishGameScoringThresholds_codec);
                break;
              }
              case 186:
              case 189: {
                swishGameScoringBonuses_.AddEntriesFrom(input, _repeated_swishGameScoringBonuses_codec);
                break;
              }
              case 194: {
                if (audioConfig_ == null) {
                  AudioConfig = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.AudioConfig();
                }
                input.ReadMessage(AudioConfig);
                break;
              }
              case 202: {
                audioInitialBanks_.AddEntriesFrom(input, _repeated_audioInitialBanks_codec);
                break;
              }
              case 210: {
                subfeaturePrestigeLevels_.AddEntriesFrom(input, _repeated_subfeaturePrestigeLevels_codec);
                break;
              }
              case 218: {
                if (bonusConfig_ == null) {
                  BonusConfig = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientBonusConfig();
                }
                input.ReadMessage(BonusConfig);
                break;
              }
              case 226: {
                PortkeyWrackspurtCollectionHapticKey = input.ReadString();
                break;
              }
              case 234: {
                parkmodeBgs_.AddEntriesFrom(input, _map_parkmodeBgs_codec);
                break;
              }
              case 240: {
                PotionMasternoteUnlockTreshold = input.ReadInt32();
                break;
              }
              case 250: {
                subfeatureFamilyOrders_.AddEntriesFrom(input, _repeated_subfeatureFamilyOrders_codec);
                break;
              }
              case 258: {
                batterySaverProfiles_.AddEntriesFrom(input, _repeated_batterySaverProfiles_codec);
                break;
              }
              case 264: {
                RateAppMinPlayerLevel = input.ReadInt32();
                break;
              }
              case 272: {
                RateAppCooldownDays = input.ReadInt32();
                break;
              }
              case 280: {
                TooFastCooldown = input.ReadInt32();
                break;
              }
              case 290: {
                encounterBanks_.AddEntriesFrom(input, _repeated_encounterBanks_codec);
                break;
              }
              case 296: {
                DailyRewardPopupTriggerPriority = input.ReadInt32();
                break;
              }
              case 304: {
                RateAppTriggerPriority = input.ReadInt32();
                break;
              }
              case 346: {
                if (ftueVideo_ == null) {
                  FtueVideo = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig();
                }
                input.ReadMessage(FtueVideo);
                break;
              }
              case 354: {
                TutorialPotionBrew = input.ReadString();
                break;
              }
              case 362: {
                GenericTraceSpellFailSfx = input.ReadString();
                break;
              }
              case 370: {
                TracingSpellGlyphSfx = input.ReadString();
                break;
              }
              case 378: {
                TracingCompleteSfx = input.ReadString();
                break;
              }
              case 386: {
                SpellBarIncreasingSfx = input.ReadString();
                break;
              }
              case 394: {
                BadSpellCastSfx = input.ReadString();
                break;
              }
              case 402: {
                GoodSpellCastSfx = input.ReadString();
                break;
              }
              case 410: {
                GreatSpellCastSfx = input.ReadString();
                break;
              }
              case 418: {
                PerfectSpellCastSfx = input.ReadString();
                break;
              }
              case 426: {
                RegistryStickerPlacedHapticKey = input.ReadString();
                break;
              }
              case 434: {
                rewardsVesselByRarity_.AddEntriesFrom(input, _repeated_rewardsVesselByRarity_codec);
                break;
              }
              case 442: {
                rewardsSoundBanks_.AddEntriesFrom(input, _repeated_rewardsSoundBanks_codec);
                break;
              }
              case 450: {
                FirstStickerStoryboardId = input.ReadString();
                break;
              }
              case 458: {
                FirstStickerCollectionId = input.ReadString();
                break;
              }
              case 466: {
                if (avatarDefaultColor_ == null) {
                  AvatarDefaultColor = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(AvatarDefaultColor);
                break;
              }
              case 474: {
                if (lockOnCompletionSfx_ == null) {
                  LockOnCompletionSfx = new global::WUProtos.Data.SoundConfig();
                }
                input.ReadMessage(LockOnCompletionSfx);
                break;
              }
              case 482: {
                if (lockOnTimeUpSfx_ == null) {
                  LockOnTimeUpSfx = new global::WUProtos.Data.SoundConfig();
                }
                input.ReadMessage(LockOnTimeUpSfx);
                break;
              }
              case 490: {
                if (protegoCastSfx_ == null) {
                  ProtegoCastSfx = new global::WUProtos.Data.SoundConfig();
                }
                input.ReadMessage(ProtegoCastSfx);
                break;
              }
              case 498: {
                if (protegoTimeUpSfx_ == null) {
                  ProtegoTimeUpSfx = new global::WUProtos.Data.SoundConfig();
                }
                input.ReadMessage(ProtegoTimeUpSfx);
                break;
              }
              case 504: {
                MsBeforeFinalIntensity = input.ReadInt32();
                break;
              }
              case 512: {
                MsBeforeSecondaryIntensity = input.ReadInt32();
                break;
              }
              case 522: {
                challengeThirtySecondsLeftStinger_.AddEntriesFrom(input, _repeated_challengeThirtySecondsLeftStinger_codec);
                break;
              }
              case 530: {
                challengeEncounterPlayerVictoriousStinger_.AddEntriesFrom(input, _repeated_challengeEncounterPlayerVictoriousStinger_codec);
                break;
              }
              case 538: {
                challengeEncounterPlayerDefeatedStinger_.AddEntriesFrom(input, _repeated_challengeEncounterPlayerDefeatedStinger_codec);
                break;
              }
              case 546: {
                challengeBeginStinger_.AddEntriesFrom(input, _repeated_challengeBeginStinger_codec);
                break;
              }
              case 554: {
                challengeFinishVictory_.AddEntriesFrom(input, _repeated_challengeFinishVictory_codec);
                break;
              }
              case 562: {
                challengeFinishDefeat_.AddEntriesFrom(input, _repeated_challengeFinishDefeat_codec);
                break;
              }
              case 570: {
                challengeEliteMobSpawnsStinger_.AddEntriesFrom(input, _repeated_challengeEliteMobSpawnsStinger_codec);
                break;
              }
              case 578: {
                InternetReachabilityCheckUrl = input.ReadString();
                break;
              }
              case 584: {
                RateAppMaxPrompts = input.ReadInt32();
                break;
              }
              case 592: {
                RateAppVersion = input.ReadInt32();
                break;
              }
              case 600: {
                RateAppTriggerWizardingChallenge = input.ReadInt32();
                break;
              }
              case 608: {
                RateAppTriggerStickerPageComplete = input.ReadInt32();
                break;
              }
              case 616: {
                RateAppTriggerEventQuestLineComplete = input.ReadInt32();
                break;
              }
              case 624: {
                ChecksUntilGpsPrompt = input.ReadInt32();
                break;
              }
              case 634: {
                fortressSoundBanks_.AddEntriesFrom(input, _repeated_fortressSoundBanks_codec);
                break;
              }
              case 642: {
                if (tenSecondsLeftInChallengeSfx_ == null) {
                  TenSecondsLeftInChallengeSfx = new global::WUProtos.Data.SoundConfig();
                }
                input.ReadMessage(TenSecondsLeftInChallengeSfx);
                break;
              }
              case 650: {
                if (longSecondLeftInChallengeSfx_ == null) {
                  LongSecondLeftInChallengeSfx = new global::WUProtos.Data.SoundConfig();
                }
                input.ReadMessage(LongSecondLeftInChallengeSfx);
                break;
              }
              case 658: {
                if (shortHalfSecondLeftInChallengeSfx_ == null) {
                  ShortHalfSecondLeftInChallengeSfx = new global::WUProtos.Data.SoundConfig();
                }
                input.ReadMessage(ShortHalfSecondLeftInChallengeSfx);
                break;
              }
              case 666: {
                if (oneMinuteWarningSfx_ == null) {
                  OneMinuteWarningSfx = new global::WUProtos.Data.SoundConfig();
                }
                input.ReadMessage(OneMinuteWarningSfx);
                break;
              }
              case 672: {
                RateAppTriggerMapEnter = input.ReadBool();
                break;
              }
              case 682: {
                ProfessionsAffinityAdvantageIcon = input.ReadString();
                break;
              }
              case 690: {
                ProfessionsAffinityNeutralIcon = input.ReadString();
                break;
              }
              case 698: {
                ProfessionsAffinityDisadvantageIcon = input.ReadString();
                break;
              }
              case 704: {
                InternetOutageBackoffTime = input.ReadInt32();
                break;
              }
              case 714: {
                ArCoreStoryboardTrigger = input.ReadString();
                break;
              }
              case 722: {
                voiceOverMappings_.AddEntriesFrom(input, _repeated_voiceOverMappings_codec);
                break;
              }
              case 728: {
                InAppMessageTriggerPriority = input.ReadInt32();
                break;
              }
              case 741: {
                InternalFortressInteractRange = input.ReadFloat();
                break;
              }
              case 749: {
                LowConnectivityThresholdBytesPerMs = input.ReadFloat();
                break;
              }
              case 752: {
                GameSizeInKb = input.ReadInt32();
                break;
              }
              case 762: {
                WcMapEnemyMarkerBuffOccupiedImage = input.ReadString();
                break;
              }
              case 770: {
                WcMapEnemyMarkerBuffVacantImage = input.ReadString();
                break;
              }
              case 778: {
                WcEnemyLookInBuffBorderImage = input.ReadString();
                break;
              }
              case 786: {
                localizationMappings_.AddEntriesFrom(input, _repeated_localizationMappings_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ClientGameConfig message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class ClientFtueVideoConfig : pb::IMessage<ClientFtueVideoConfig> {
            private static readonly pb::MessageParser<ClientFtueVideoConfig> _parser = new pb::MessageParser<ClientFtueVideoConfig>(() => new ClientFtueVideoConfig());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ClientFtueVideoConfig> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientFtueVideoConfig() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientFtueVideoConfig(ClientFtueVideoConfig other) : this() {
              qualityBuckets_ = other.qualityBuckets_.Clone();
              qualityMappings_ = other.qualityMappings_.Clone();
              switch (other.VideoSourceCase) {
                case VideoSourceOneofCase.FromAssets:
                  FromAssets = other.FromAssets.Clone();
                  break;
                case VideoSourceOneofCase.FromUrl:
                  FromUrl = other.FromUrl.Clone();
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientFtueVideoConfig Clone() {
              return new ClientFtueVideoConfig(this);
            }

            /// <summary>Field number for the "from_assets" field.</summary>
            public const int FromAssetsFieldNumber = 1;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoFallbackDefinition FromAssets {
              get { return videoSourceCase_ == VideoSourceOneofCase.FromAssets ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoFallbackDefinition) videoSource_ : null; }
              set {
                videoSource_ = value;
                videoSourceCase_ = value == null ? VideoSourceOneofCase.None : VideoSourceOneofCase.FromAssets;
              }
            }

            /// <summary>Field number for the "from_url" field.</summary>
            public const int FromUrlFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoNameDefinition FromUrl {
              get { return videoSourceCase_ == VideoSourceOneofCase.FromUrl ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoNameDefinition) videoSource_ : null; }
              set {
                videoSource_ = value;
                videoSourceCase_ = value == null ? VideoSourceOneofCase.None : VideoSourceOneofCase.FromUrl;
              }
            }

            /// <summary>Field number for the "quality_buckets" field.</summary>
            public const int QualityBucketsFieldNumber = 3;
            private static readonly pb::FieldCodec<string> _repeated_qualityBuckets_codec
                = pb::FieldCodec.ForString(26);
            private readonly pbc::RepeatedField<string> qualityBuckets_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> QualityBuckets {
              get { return qualityBuckets_; }
            }

            /// <summary>Field number for the "quality_mappings" field.</summary>
            public const int QualityMappingsFieldNumber = 4;
            private static readonly pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoQualityMapping>.Codec _map_qualityMappings_codec
                = new pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoQualityMapping>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoQualityMapping.Parser), 34);
            private readonly pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoQualityMapping> qualityMappings_ = new pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoQualityMapping>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoQualityMapping> QualityMappings {
              get { return qualityMappings_; }
            }

            private object videoSource_;
            /// <summary>Enum of possible cases for the "VideoSource" oneof.</summary>
            public enum VideoSourceOneofCase {
              None = 0,
              FromAssets = 1,
              FromUrl = 2,
            }
            private VideoSourceOneofCase videoSourceCase_ = VideoSourceOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public VideoSourceOneofCase VideoSourceCase {
              get { return videoSourceCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearVideoSource() {
              videoSourceCase_ = VideoSourceOneofCase.None;
              videoSource_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ClientFtueVideoConfig);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ClientFtueVideoConfig other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(FromAssets, other.FromAssets)) return false;
              if (!object.Equals(FromUrl, other.FromUrl)) return false;
              if(!qualityBuckets_.Equals(other.qualityBuckets_)) return false;
              if (!QualityMappings.Equals(other.QualityMappings)) return false;
              if (VideoSourceCase != other.VideoSourceCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (videoSourceCase_ == VideoSourceOneofCase.FromAssets) hash ^= FromAssets.GetHashCode();
              if (videoSourceCase_ == VideoSourceOneofCase.FromUrl) hash ^= FromUrl.GetHashCode();
              hash ^= qualityBuckets_.GetHashCode();
              hash ^= QualityMappings.GetHashCode();
              hash ^= (int) videoSourceCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (videoSourceCase_ == VideoSourceOneofCase.FromAssets) {
                output.WriteRawTag(10);
                output.WriteMessage(FromAssets);
              }
              if (videoSourceCase_ == VideoSourceOneofCase.FromUrl) {
                output.WriteRawTag(18);
                output.WriteMessage(FromUrl);
              }
              qualityBuckets_.WriteTo(output, _repeated_qualityBuckets_codec);
              qualityMappings_.WriteTo(output, _map_qualityMappings_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (videoSourceCase_ == VideoSourceOneofCase.FromAssets) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromAssets);
              }
              if (videoSourceCase_ == VideoSourceOneofCase.FromUrl) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromUrl);
              }
              size += qualityBuckets_.CalculateSize(_repeated_qualityBuckets_codec);
              size += qualityMappings_.CalculateSize(_map_qualityMappings_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ClientFtueVideoConfig other) {
              if (other == null) {
                return;
              }
              qualityBuckets_.Add(other.qualityBuckets_);
              qualityMappings_.Add(other.qualityMappings_);
              switch (other.VideoSourceCase) {
                case VideoSourceOneofCase.FromAssets:
                  if (FromAssets == null) {
                    FromAssets = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoFallbackDefinition();
                  }
                  FromAssets.MergeFrom(other.FromAssets);
                  break;
                case VideoSourceOneofCase.FromUrl:
                  if (FromUrl == null) {
                    FromUrl = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoNameDefinition();
                  }
                  FromUrl.MergeFrom(other.FromUrl);
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoFallbackDefinition subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoFallbackDefinition();
                    if (videoSourceCase_ == VideoSourceOneofCase.FromAssets) {
                      subBuilder.MergeFrom(FromAssets);
                    }
                    input.ReadMessage(subBuilder);
                    FromAssets = subBuilder;
                    break;
                  }
                  case 18: {
                    global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoNameDefinition subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoNameDefinition();
                    if (videoSourceCase_ == VideoSourceOneofCase.FromUrl) {
                      subBuilder.MergeFrom(FromUrl);
                    }
                    input.ReadMessage(subBuilder);
                    FromUrl = subBuilder;
                    break;
                  }
                  case 26: {
                    qualityBuckets_.AddEntriesFrom(input, _repeated_qualityBuckets_codec);
                    break;
                  }
                  case 34: {
                    qualityMappings_.AddEntriesFrom(input, _map_qualityMappings_codec);
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the ClientFtueVideoConfig message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class ClientFtueVideoQualityMapping : pb::IMessage<ClientFtueVideoQualityMapping> {
                private static readonly pb::MessageParser<ClientFtueVideoQualityMapping> _parser = new pb::MessageParser<ClientFtueVideoQualityMapping>(() => new ClientFtueVideoQualityMapping());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ClientFtueVideoQualityMapping> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Descriptor.NestedTypes[1]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientFtueVideoQualityMapping() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientFtueVideoQualityMapping(ClientFtueVideoQualityMapping other) : this() {
                  measure_ = other.measure_;
                  lowerBound_ = other.lowerBound_;
                  upperBound_ = other.upperBound_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientFtueVideoQualityMapping Clone() {
                  return new ClientFtueVideoQualityMapping(this);
                }

                /// <summary>Field number for the "measure" field.</summary>
                public const int MeasureFieldNumber = 1;
                private global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoQualityMapping.Types.Measure measure_ = 0;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoQualityMapping.Types.Measure Measure {
                  get { return measure_; }
                  set {
                    measure_ = value;
                  }
                }

                /// <summary>Field number for the "lower_bound" field.</summary>
                public const int LowerBoundFieldNumber = 2;
                private int lowerBound_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int LowerBound {
                  get { return lowerBound_; }
                  set {
                    lowerBound_ = value;
                  }
                }

                /// <summary>Field number for the "upper_bound" field.</summary>
                public const int UpperBoundFieldNumber = 3;
                private int upperBound_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int UpperBound {
                  get { return upperBound_; }
                  set {
                    upperBound_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ClientFtueVideoQualityMapping);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ClientFtueVideoQualityMapping other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Measure != other.Measure) return false;
                  if (LowerBound != other.LowerBound) return false;
                  if (UpperBound != other.UpperBound) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Measure != 0) hash ^= Measure.GetHashCode();
                  if (LowerBound != 0) hash ^= LowerBound.GetHashCode();
                  if (UpperBound != 0) hash ^= UpperBound.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (Measure != 0) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) Measure);
                  }
                  if (LowerBound != 0) {
                    output.WriteRawTag(16);
                    output.WriteInt32(LowerBound);
                  }
                  if (UpperBound != 0) {
                    output.WriteRawTag(24);
                    output.WriteInt32(UpperBound);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (Measure != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Measure);
                  }
                  if (LowerBound != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(LowerBound);
                  }
                  if (UpperBound != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpperBound);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ClientFtueVideoQualityMapping other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Measure != 0) {
                    Measure = other.Measure;
                  }
                  if (other.LowerBound != 0) {
                    LowerBound = other.LowerBound;
                  }
                  if (other.UpperBound != 0) {
                    UpperBound = other.UpperBound;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        Measure = (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoQualityMapping.Types.Measure) input.ReadEnum();
                        break;
                      }
                      case 16: {
                        LowerBound = input.ReadInt32();
                        break;
                      }
                      case 24: {
                        UpperBound = input.ReadInt32();
                        break;
                      }
                    }
                  }
                }

                #region Nested types
                /// <summary>Container for nested types declared in the ClientFtueVideoQualityMapping message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static partial class Types {
                  public enum Measure {
                    [pbr::OriginalName("camera_pixel_width")] CameraPixelWidth = 0,
                    [pbr::OriginalName("camera_pixel_height")] CameraPixelHeight = 1,
                    [pbr::OriginalName("screen_pixel_width")] ScreenPixelWidth = 2,
                    [pbr::OriginalName("screen_pixel_height")] ScreenPixelHeight = 3,
                  }

                }
                #endregion

              }

              public sealed partial class ClientFtueVideoFallbackDefinition : pb::IMessage<ClientFtueVideoFallbackDefinition> {
                private static readonly pb::MessageParser<ClientFtueVideoFallbackDefinition> _parser = new pb::MessageParser<ClientFtueVideoFallbackDefinition>(() => new ClientFtueVideoFallbackDefinition());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ClientFtueVideoFallbackDefinition> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Descriptor.NestedTypes[2]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientFtueVideoFallbackDefinition() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientFtueVideoFallbackDefinition(ClientFtueVideoFallbackDefinition other) : this() {
                  nameDefinitions_ = other.nameDefinitions_.Clone();
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientFtueVideoFallbackDefinition Clone() {
                  return new ClientFtueVideoFallbackDefinition(this);
                }

                /// <summary>Field number for the "name_definitions" field.</summary>
                public const int NameDefinitionsFieldNumber = 1;
                private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoNameDefinition> _repeated_nameDefinitions_codec
                    = pb::FieldCodec.ForMessage(10, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoNameDefinition.Parser);
                private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoNameDefinition> nameDefinitions_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoNameDefinition>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Types.ClientFtueVideoNameDefinition> NameDefinitions {
                  get { return nameDefinitions_; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ClientFtueVideoFallbackDefinition);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ClientFtueVideoFallbackDefinition other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if(!nameDefinitions_.Equals(other.nameDefinitions_)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  hash ^= nameDefinitions_.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  nameDefinitions_.WriteTo(output, _repeated_nameDefinitions_codec);
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  size += nameDefinitions_.CalculateSize(_repeated_nameDefinitions_codec);
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ClientFtueVideoFallbackDefinition other) {
                  if (other == null) {
                    return;
                  }
                  nameDefinitions_.Add(other.nameDefinitions_);
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        nameDefinitions_.AddEntriesFrom(input, _repeated_nameDefinitions_codec);
                        break;
                      }
                    }
                  }
                }

              }

              public sealed partial class ClientFtueVideoNameDefinition : pb::IMessage<ClientFtueVideoNameDefinition> {
                private static readonly pb::MessageParser<ClientFtueVideoNameDefinition> _parser = new pb::MessageParser<ClientFtueVideoNameDefinition>(() => new ClientFtueVideoNameDefinition());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ClientFtueVideoNameDefinition> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFtueVideoConfig.Descriptor.NestedTypes[3]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientFtueVideoNameDefinition() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientFtueVideoNameDefinition(ClientFtueVideoNameDefinition other) : this() {
                  nameFormat_ = other.nameFormat_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientFtueVideoNameDefinition Clone() {
                  return new ClientFtueVideoNameDefinition(this);
                }

                /// <summary>Field number for the "name_format" field.</summary>
                public const int NameFormatFieldNumber = 1;
                private string nameFormat_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string NameFormat {
                  get { return nameFormat_; }
                  set {
                    nameFormat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ClientFtueVideoNameDefinition);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ClientFtueVideoNameDefinition other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (NameFormat != other.NameFormat) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (NameFormat.Length != 0) hash ^= NameFormat.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (NameFormat.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(NameFormat);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (NameFormat.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(NameFormat);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ClientFtueVideoNameDefinition other) {
                  if (other == null) {
                    return;
                  }
                  if (other.NameFormat.Length != 0) {
                    NameFormat = other.NameFormat;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        NameFormat = input.ReadString();
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

          public sealed partial class ClientFlooNetworkConfig : pb::IMessage<ClientFlooNetworkConfig> {
            private static readonly pb::MessageParser<ClientFlooNetworkConfig> _parser = new pb::MessageParser<ClientFlooNetworkConfig>(() => new ClientFlooNetworkConfig());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ClientFlooNetworkConfig> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientFlooNetworkConfig() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientFlooNetworkConfig(ClientFlooNetworkConfig other) : this() {
              electoralVotesPerFlooPoints_ = other.electoralVotesPerFlooPoints_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientFlooNetworkConfig Clone() {
              return new ClientFlooNetworkConfig(this);
            }

            /// <summary>Field number for the "electoral_votes_per_floo_points" field.</summary>
            public const int ElectoralVotesPerFlooPointsFieldNumber = 1;
            private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFlooNetworkConfig.Types.ElectoralVotesPerFlooPoints> _repeated_electoralVotesPerFlooPoints_codec
                = pb::FieldCodec.ForMessage(10, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFlooNetworkConfig.Types.ElectoralVotesPerFlooPoints.Parser);
            private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFlooNetworkConfig.Types.ElectoralVotesPerFlooPoints> electoralVotesPerFlooPoints_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFlooNetworkConfig.Types.ElectoralVotesPerFlooPoints>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFlooNetworkConfig.Types.ElectoralVotesPerFlooPoints> ElectoralVotesPerFlooPoints {
              get { return electoralVotesPerFlooPoints_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ClientFlooNetworkConfig);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ClientFlooNetworkConfig other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!electoralVotesPerFlooPoints_.Equals(other.electoralVotesPerFlooPoints_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= electoralVotesPerFlooPoints_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              electoralVotesPerFlooPoints_.WriteTo(output, _repeated_electoralVotesPerFlooPoints_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += electoralVotesPerFlooPoints_.CalculateSize(_repeated_electoralVotesPerFlooPoints_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ClientFlooNetworkConfig other) {
              if (other == null) {
                return;
              }
              electoralVotesPerFlooPoints_.Add(other.electoralVotesPerFlooPoints_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    electoralVotesPerFlooPoints_.AddEntriesFrom(input, _repeated_electoralVotesPerFlooPoints_codec);
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the ClientFlooNetworkConfig message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class ElectoralVotesPerFlooPoints : pb::IMessage<ElectoralVotesPerFlooPoints> {
                private static readonly pb::MessageParser<ElectoralVotesPerFlooPoints> _parser = new pb::MessageParser<ElectoralVotesPerFlooPoints>(() => new ElectoralVotesPerFlooPoints());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ElectoralVotesPerFlooPoints> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.ClientFlooNetworkConfig.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ElectoralVotesPerFlooPoints() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ElectoralVotesPerFlooPoints(ElectoralVotesPerFlooPoints other) : this() {
                  fortressPrefabs_ = other.fortressPrefabs_.Clone();
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ElectoralVotesPerFlooPoints Clone() {
                  return new ElectoralVotesPerFlooPoints(this);
                }

                /// <summary>Field number for the "fortress_prefabs" field.</summary>
                public const int FortressPrefabsFieldNumber = 1;
                private static readonly pb::FieldCodec<string> _repeated_fortressPrefabs_codec
                    = pb::FieldCodec.ForString(10);
                private readonly pbc::RepeatedField<string> fortressPrefabs_ = new pbc::RepeatedField<string>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<string> FortressPrefabs {
                  get { return fortressPrefabs_; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ElectoralVotesPerFlooPoints);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ElectoralVotesPerFlooPoints other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if(!fortressPrefabs_.Equals(other.fortressPrefabs_)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  hash ^= fortressPrefabs_.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  fortressPrefabs_.WriteTo(output, _repeated_fortressPrefabs_codec);
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  size += fortressPrefabs_.CalculateSize(_repeated_fortressPrefabs_codec);
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ElectoralVotesPerFlooPoints other) {
                  if (other == null) {
                    return;
                  }
                  fortressPrefabs_.Add(other.fortressPrefabs_);
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        fortressPrefabs_.AddEntriesFrom(input, _repeated_fortressPrefabs_codec);
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

          public sealed partial class ClientBonusConfig : pb::IMessage<ClientBonusConfig> {
            private static readonly pb::MessageParser<ClientBonusConfig> _parser = new pb::MessageParser<ClientBonusConfig>(() => new ClientBonusConfig());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ClientBonusConfig> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Descriptor.NestedTypes[3]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientBonusConfig() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientBonusConfig(ClientBonusConfig other) : this() {
              id_ = other.id_;
              accuracyTier_ = other.accuracyTier_.Clone();
              accuracyTierBonusId_ = other.accuracyTierBonusId_.Clone();
              accuracyTierBonusText_ = other.accuracyTierBonusText_.Clone();
              firstTimeBonusId_ = other.firstTimeBonusId_;
              firstTimeBonusText_ = other.firstTimeBonusText_;
              lifeTimeBonusId_ = other.lifeTimeBonusId_;
              lifeTimeBonusText_ = other.lifeTimeBonusText_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientBonusConfig Clone() {
              return new ClientBonusConfig(this);
            }

            /// <summary>Field number for the "id" field.</summary>
            public const int IdFieldNumber = 1;
            private string id_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Id {
              get { return id_; }
              set {
                id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "accuracy_tier" field.</summary>
            public const int AccuracyTierFieldNumber = 2;
            private static readonly pb::FieldCodec<float> _repeated_accuracyTier_codec
                = pb::FieldCodec.ForFloat(18);
            private readonly pbc::RepeatedField<float> accuracyTier_ = new pbc::RepeatedField<float>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<float> AccuracyTier {
              get { return accuracyTier_; }
            }

            /// <summary>Field number for the "accuracy_tier_bonus_id" field.</summary>
            public const int AccuracyTierBonusIdFieldNumber = 3;
            private static readonly pb::FieldCodec<string> _repeated_accuracyTierBonusId_codec
                = pb::FieldCodec.ForString(26);
            private readonly pbc::RepeatedField<string> accuracyTierBonusId_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> AccuracyTierBonusId {
              get { return accuracyTierBonusId_; }
            }

            /// <summary>Field number for the "accuracy_tier_bonus_text" field.</summary>
            public const int AccuracyTierBonusTextFieldNumber = 4;
            private static readonly pb::FieldCodec<string> _repeated_accuracyTierBonusText_codec
                = pb::FieldCodec.ForString(34);
            private readonly pbc::RepeatedField<string> accuracyTierBonusText_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> AccuracyTierBonusText {
              get { return accuracyTierBonusText_; }
            }

            /// <summary>Field number for the "first_time_bonus_id" field.</summary>
            public const int FirstTimeBonusIdFieldNumber = 5;
            private string firstTimeBonusId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string FirstTimeBonusId {
              get { return firstTimeBonusId_; }
              set {
                firstTimeBonusId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "first_time_bonus_text" field.</summary>
            public const int FirstTimeBonusTextFieldNumber = 6;
            private string firstTimeBonusText_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string FirstTimeBonusText {
              get { return firstTimeBonusText_; }
              set {
                firstTimeBonusText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "life_time_bonus_id" field.</summary>
            public const int LifeTimeBonusIdFieldNumber = 7;
            private string lifeTimeBonusId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string LifeTimeBonusId {
              get { return lifeTimeBonusId_; }
              set {
                lifeTimeBonusId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "life_time_bonus_text" field.</summary>
            public const int LifeTimeBonusTextFieldNumber = 8;
            private string lifeTimeBonusText_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string LifeTimeBonusText {
              get { return lifeTimeBonusText_; }
              set {
                lifeTimeBonusText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ClientBonusConfig);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ClientBonusConfig other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Id != other.Id) return false;
              if(!accuracyTier_.Equals(other.accuracyTier_)) return false;
              if(!accuracyTierBonusId_.Equals(other.accuracyTierBonusId_)) return false;
              if(!accuracyTierBonusText_.Equals(other.accuracyTierBonusText_)) return false;
              if (FirstTimeBonusId != other.FirstTimeBonusId) return false;
              if (FirstTimeBonusText != other.FirstTimeBonusText) return false;
              if (LifeTimeBonusId != other.LifeTimeBonusId) return false;
              if (LifeTimeBonusText != other.LifeTimeBonusText) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Id.Length != 0) hash ^= Id.GetHashCode();
              hash ^= accuracyTier_.GetHashCode();
              hash ^= accuracyTierBonusId_.GetHashCode();
              hash ^= accuracyTierBonusText_.GetHashCode();
              if (FirstTimeBonusId.Length != 0) hash ^= FirstTimeBonusId.GetHashCode();
              if (FirstTimeBonusText.Length != 0) hash ^= FirstTimeBonusText.GetHashCode();
              if (LifeTimeBonusId.Length != 0) hash ^= LifeTimeBonusId.GetHashCode();
              if (LifeTimeBonusText.Length != 0) hash ^= LifeTimeBonusText.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Id.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Id);
              }
              accuracyTier_.WriteTo(output, _repeated_accuracyTier_codec);
              accuracyTierBonusId_.WriteTo(output, _repeated_accuracyTierBonusId_codec);
              accuracyTierBonusText_.WriteTo(output, _repeated_accuracyTierBonusText_codec);
              if (FirstTimeBonusId.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(FirstTimeBonusId);
              }
              if (FirstTimeBonusText.Length != 0) {
                output.WriteRawTag(50);
                output.WriteString(FirstTimeBonusText);
              }
              if (LifeTimeBonusId.Length != 0) {
                output.WriteRawTag(58);
                output.WriteString(LifeTimeBonusId);
              }
              if (LifeTimeBonusText.Length != 0) {
                output.WriteRawTag(66);
                output.WriteString(LifeTimeBonusText);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Id.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
              }
              size += accuracyTier_.CalculateSize(_repeated_accuracyTier_codec);
              size += accuracyTierBonusId_.CalculateSize(_repeated_accuracyTierBonusId_codec);
              size += accuracyTierBonusText_.CalculateSize(_repeated_accuracyTierBonusText_codec);
              if (FirstTimeBonusId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstTimeBonusId);
              }
              if (FirstTimeBonusText.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstTimeBonusText);
              }
              if (LifeTimeBonusId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(LifeTimeBonusId);
              }
              if (LifeTimeBonusText.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(LifeTimeBonusText);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ClientBonusConfig other) {
              if (other == null) {
                return;
              }
              if (other.Id.Length != 0) {
                Id = other.Id;
              }
              accuracyTier_.Add(other.accuracyTier_);
              accuracyTierBonusId_.Add(other.accuracyTierBonusId_);
              accuracyTierBonusText_.Add(other.accuracyTierBonusText_);
              if (other.FirstTimeBonusId.Length != 0) {
                FirstTimeBonusId = other.FirstTimeBonusId;
              }
              if (other.FirstTimeBonusText.Length != 0) {
                FirstTimeBonusText = other.FirstTimeBonusText;
              }
              if (other.LifeTimeBonusId.Length != 0) {
                LifeTimeBonusId = other.LifeTimeBonusId;
              }
              if (other.LifeTimeBonusText.Length != 0) {
                LifeTimeBonusText = other.LifeTimeBonusText;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Id = input.ReadString();
                    break;
                  }
                  case 18:
                  case 21: {
                    accuracyTier_.AddEntriesFrom(input, _repeated_accuracyTier_codec);
                    break;
                  }
                  case 26: {
                    accuracyTierBonusId_.AddEntriesFrom(input, _repeated_accuracyTierBonusId_codec);
                    break;
                  }
                  case 34: {
                    accuracyTierBonusText_.AddEntriesFrom(input, _repeated_accuracyTierBonusText_codec);
                    break;
                  }
                  case 42: {
                    FirstTimeBonusId = input.ReadString();
                    break;
                  }
                  case 50: {
                    FirstTimeBonusText = input.ReadString();
                    break;
                  }
                  case 58: {
                    LifeTimeBonusId = input.ReadString();
                    break;
                  }
                  case 66: {
                    LifeTimeBonusText = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class LocalizationMapping : pb::IMessage<LocalizationMapping> {
            private static readonly pb::MessageParser<LocalizationMapping> _parser = new pb::MessageParser<LocalizationMapping>(() => new LocalizationMapping());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<LocalizationMapping> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Descriptor.NestedTypes[4]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LocalizationMapping() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LocalizationMapping(LocalizationMapping other) : this() {
              languageCode_ = other.languageCode_;
              locString_ = other.locString_;
              isEnabled_ = other.isEnabled_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LocalizationMapping Clone() {
              return new LocalizationMapping(this);
            }

            /// <summary>Field number for the "language_code" field.</summary>
            public const int LanguageCodeFieldNumber = 1;
            private string languageCode_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string LanguageCode {
              get { return languageCode_; }
              set {
                languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "loc_string" field.</summary>
            public const int LocStringFieldNumber = 2;
            private string locString_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string LocString {
              get { return locString_; }
              set {
                locString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "is_enabled" field.</summary>
            public const int IsEnabledFieldNumber = 3;
            private bool isEnabled_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool IsEnabled {
              get { return isEnabled_; }
              set {
                isEnabled_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as LocalizationMapping);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(LocalizationMapping other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (LanguageCode != other.LanguageCode) return false;
              if (LocString != other.LocString) return false;
              if (IsEnabled != other.IsEnabled) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
              if (LocString.Length != 0) hash ^= LocString.GetHashCode();
              if (IsEnabled != false) hash ^= IsEnabled.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (LanguageCode.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(LanguageCode);
              }
              if (LocString.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(LocString);
              }
              if (IsEnabled != false) {
                output.WriteRawTag(24);
                output.WriteBool(IsEnabled);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (LanguageCode.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
              }
              if (LocString.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(LocString);
              }
              if (IsEnabled != false) {
                size += 1 + 1;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(LocalizationMapping other) {
              if (other == null) {
                return;
              }
              if (other.LanguageCode.Length != 0) {
                LanguageCode = other.LanguageCode;
              }
              if (other.LocString.Length != 0) {
                LocString = other.LocString;
              }
              if (other.IsEnabled != false) {
                IsEnabled = other.IsEnabled;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    LanguageCode = input.ReadString();
                    break;
                  }
                  case 18: {
                    LocString = input.ReadString();
                    break;
                  }
                  case 24: {
                    IsEnabled = input.ReadBool();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class PermissionsConfigStaticList : pb::IMessage<PermissionsConfigStaticList> {
            private static readonly pb::MessageParser<PermissionsConfigStaticList> _parser = new pb::MessageParser<PermissionsConfigStaticList>(() => new PermissionsConfigStaticList());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<PermissionsConfigStaticList> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Descriptor.NestedTypes[5]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PermissionsConfigStaticList() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PermissionsConfigStaticList(PermissionsConfigStaticList other) : this() {
              list_ = other.list_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PermissionsConfigStaticList Clone() {
              return new PermissionsConfigStaticList(this);
            }

            /// <summary>Field number for the "list" field.</summary>
            public const int ListFieldNumber = 1;
            private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.PermissionsConfigStaticList.Types.PermissionsConfigStaticData> _repeated_list_codec
                = pb::FieldCodec.ForMessage(10, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.PermissionsConfigStaticList.Types.PermissionsConfigStaticData.Parser);
            private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.PermissionsConfigStaticList.Types.PermissionsConfigStaticData> list_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.PermissionsConfigStaticList.Types.PermissionsConfigStaticData>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.PermissionsConfigStaticList.Types.PermissionsConfigStaticData> List {
              get { return list_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as PermissionsConfigStaticList);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(PermissionsConfigStaticList other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!list_.Equals(other.list_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= list_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              list_.WriteTo(output, _repeated_list_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += list_.CalculateSize(_repeated_list_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(PermissionsConfigStaticList other) {
              if (other == null) {
                return;
              }
              list_.Add(other.list_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    list_.AddEntriesFrom(input, _repeated_list_codec);
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the PermissionsConfigStaticList message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class PermissionsConfigStaticData : pb::IMessage<PermissionsConfigStaticData> {
                private static readonly pb::MessageParser<PermissionsConfigStaticData> _parser = new pb::MessageParser<PermissionsConfigStaticData>(() => new PermissionsConfigStaticData());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<PermissionsConfigStaticData> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.PermissionsConfigStaticList.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public PermissionsConfigStaticData() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public PermissionsConfigStaticData(PermissionsConfigStaticData other) : this() {
                  id_ = other.id_;
                  initialPrompt_ = other.initialPrompt_;
                  denialPrompt_ = other.denialPrompt_;
                  optional_ = other.optional_;
                  title_ = other.title_;
                  beggingEnabled_ = other.beggingEnabled_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public PermissionsConfigStaticData Clone() {
                  return new PermissionsConfigStaticData(this);
                }

                /// <summary>Field number for the "id" field.</summary>
                public const int IdFieldNumber = 1;
                private string id_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Id {
                  get { return id_; }
                  set {
                    id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "initial_prompt" field.</summary>
                public const int InitialPromptFieldNumber = 2;
                private string initialPrompt_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string InitialPrompt {
                  get { return initialPrompt_; }
                  set {
                    initialPrompt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "denial_prompt" field.</summary>
                public const int DenialPromptFieldNumber = 3;
                private string denialPrompt_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string DenialPrompt {
                  get { return denialPrompt_; }
                  set {
                    denialPrompt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "optional" field.</summary>
                public const int OptionalFieldNumber = 4;
                private bool optional_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Optional {
                  get { return optional_; }
                  set {
                    optional_ = value;
                  }
                }

                /// <summary>Field number for the "title" field.</summary>
                public const int TitleFieldNumber = 5;
                private string title_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Title {
                  get { return title_; }
                  set {
                    title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "begging_enabled" field.</summary>
                public const int BeggingEnabledFieldNumber = 6;
                private bool beggingEnabled_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool BeggingEnabled {
                  get { return beggingEnabled_; }
                  set {
                    beggingEnabled_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as PermissionsConfigStaticData);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(PermissionsConfigStaticData other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Id != other.Id) return false;
                  if (InitialPrompt != other.InitialPrompt) return false;
                  if (DenialPrompt != other.DenialPrompt) return false;
                  if (Optional != other.Optional) return false;
                  if (Title != other.Title) return false;
                  if (BeggingEnabled != other.BeggingEnabled) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Id.Length != 0) hash ^= Id.GetHashCode();
                  if (InitialPrompt.Length != 0) hash ^= InitialPrompt.GetHashCode();
                  if (DenialPrompt.Length != 0) hash ^= DenialPrompt.GetHashCode();
                  if (Optional != false) hash ^= Optional.GetHashCode();
                  if (Title.Length != 0) hash ^= Title.GetHashCode();
                  if (BeggingEnabled != false) hash ^= BeggingEnabled.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (Id.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(Id);
                  }
                  if (InitialPrompt.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(InitialPrompt);
                  }
                  if (DenialPrompt.Length != 0) {
                    output.WriteRawTag(26);
                    output.WriteString(DenialPrompt);
                  }
                  if (Optional != false) {
                    output.WriteRawTag(32);
                    output.WriteBool(Optional);
                  }
                  if (Title.Length != 0) {
                    output.WriteRawTag(42);
                    output.WriteString(Title);
                  }
                  if (BeggingEnabled != false) {
                    output.WriteRawTag(48);
                    output.WriteBool(BeggingEnabled);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (Id.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
                  }
                  if (InitialPrompt.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(InitialPrompt);
                  }
                  if (DenialPrompt.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(DenialPrompt);
                  }
                  if (Optional != false) {
                    size += 1 + 1;
                  }
                  if (Title.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
                  }
                  if (BeggingEnabled != false) {
                    size += 1 + 1;
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(PermissionsConfigStaticData other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Id.Length != 0) {
                    Id = other.Id;
                  }
                  if (other.InitialPrompt.Length != 0) {
                    InitialPrompt = other.InitialPrompt;
                  }
                  if (other.DenialPrompt.Length != 0) {
                    DenialPrompt = other.DenialPrompt;
                  }
                  if (other.Optional != false) {
                    Optional = other.Optional;
                  }
                  if (other.Title.Length != 0) {
                    Title = other.Title;
                  }
                  if (other.BeggingEnabled != false) {
                    BeggingEnabled = other.BeggingEnabled;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        Id = input.ReadString();
                        break;
                      }
                      case 18: {
                        InitialPrompt = input.ReadString();
                        break;
                      }
                      case 26: {
                        DenialPrompt = input.ReadString();
                        break;
                      }
                      case 32: {
                        Optional = input.ReadBool();
                        break;
                      }
                      case 42: {
                        Title = input.ReadString();
                        break;
                      }
                      case 48: {
                        BeggingEnabled = input.ReadBool();
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

          public sealed partial class VoiceOverLanguageMapping : pb::IMessage<VoiceOverLanguageMapping> {
            private static readonly pb::MessageParser<VoiceOverLanguageMapping> _parser = new pb::MessageParser<VoiceOverLanguageMapping>(() => new VoiceOverLanguageMapping());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<VoiceOverLanguageMapping> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Descriptor.NestedTypes[6]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public VoiceOverLanguageMapping() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public VoiceOverLanguageMapping(VoiceOverLanguageMapping other) : this() {
              languageCode_ = other.languageCode_;
              languageFolder_ = other.languageFolder_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public VoiceOverLanguageMapping Clone() {
              return new VoiceOverLanguageMapping(this);
            }

            /// <summary>Field number for the "language_code" field.</summary>
            public const int LanguageCodeFieldNumber = 1;
            private string languageCode_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string LanguageCode {
              get { return languageCode_; }
              set {
                languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "language_folder" field.</summary>
            public const int LanguageFolderFieldNumber = 2;
            private string languageFolder_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string LanguageFolder {
              get { return languageFolder_; }
              set {
                languageFolder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as VoiceOverLanguageMapping);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(VoiceOverLanguageMapping other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (LanguageCode != other.LanguageCode) return false;
              if (LanguageFolder != other.LanguageFolder) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
              if (LanguageFolder.Length != 0) hash ^= LanguageFolder.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (LanguageCode.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(LanguageCode);
              }
              if (LanguageFolder.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(LanguageFolder);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (LanguageCode.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
              }
              if (LanguageFolder.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageFolder);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(VoiceOverLanguageMapping other) {
              if (other == null) {
                return;
              }
              if (other.LanguageCode.Length != 0) {
                LanguageCode = other.LanguageCode;
              }
              if (other.LanguageFolder.Length != 0) {
                LanguageFolder = other.LanguageFolder;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    LanguageCode = input.ReadString();
                    break;
                  }
                  case 18: {
                    LanguageFolder = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class AudioConfig : pb::IMessage<AudioConfig> {
            private static readonly pb::MessageParser<AudioConfig> _parser = new pb::MessageParser<AudioConfig>(() => new AudioConfig());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<AudioConfig> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Descriptor.NestedTypes[7]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public AudioConfig() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public AudioConfig(AudioConfig other) : this() {
              musicEvent_ = other.musicEvent_;
              musicConfig_ = other.musicConfig_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public AudioConfig Clone() {
              return new AudioConfig(this);
            }

            /// <summary>Field number for the "music_event" field.</summary>
            public const int MusicEventFieldNumber = 1;
            private string musicEvent_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string MusicEvent {
              get { return musicEvent_; }
              set {
                musicEvent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "music_config" field.</summary>
            public const int MusicConfigFieldNumber = 2;
            private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.MusicConfig> _repeated_musicConfig_codec
                = pb::FieldCodec.ForMessage(18, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.MusicConfig.Parser);
            private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.MusicConfig> musicConfig_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.MusicConfig>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Types.MusicConfig> MusicConfig {
              get { return musicConfig_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as AudioConfig);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(AudioConfig other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (MusicEvent != other.MusicEvent) return false;
              if(!musicConfig_.Equals(other.musicConfig_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (MusicEvent.Length != 0) hash ^= MusicEvent.GetHashCode();
              hash ^= musicConfig_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (MusicEvent.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(MusicEvent);
              }
              musicConfig_.WriteTo(output, _repeated_musicConfig_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (MusicEvent.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(MusicEvent);
              }
              size += musicConfig_.CalculateSize(_repeated_musicConfig_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(AudioConfig other) {
              if (other == null) {
                return;
              }
              if (other.MusicEvent.Length != 0) {
                MusicEvent = other.MusicEvent;
              }
              musicConfig_.Add(other.musicConfig_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    MusicEvent = input.ReadString();
                    break;
                  }
                  case 18: {
                    musicConfig_.AddEntriesFrom(input, _repeated_musicConfig_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class BatterySaverProfile : pb::IMessage<BatterySaverProfile> {
            private static readonly pb::MessageParser<BatterySaverProfile> _parser = new pb::MessageParser<BatterySaverProfile>(() => new BatterySaverProfile());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<BatterySaverProfile> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Descriptor.NestedTypes[8]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public BatterySaverProfile() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public BatterySaverProfile(BatterySaverProfile other) : this() {
              profiles_ = other.profiles_.Clone();
              name_ = other.name_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public BatterySaverProfile Clone() {
              return new BatterySaverProfile(this);
            }

            /// <summary>Field number for the "profiles" field.</summary>
            public const int ProfilesFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_profiles_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> profiles_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> Profiles {
              get { return profiles_; }
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 2;
            private string name_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as BatterySaverProfile);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(BatterySaverProfile other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!profiles_.Equals(other.profiles_)) return false;
              if (Name != other.Name) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= profiles_.GetHashCode();
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              profiles_.WriteTo(output, _repeated_profiles_codec);
              if (Name.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Name);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += profiles_.CalculateSize(_repeated_profiles_codec);
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(BatterySaverProfile other) {
              if (other == null) {
                return;
              }
              profiles_.Add(other.profiles_);
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    profiles_.AddEntriesFrom(input, _repeated_profiles_codec);
                    break;
                  }
                  case 18: {
                    Name = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class CollectionSubfeatureFamilyOrders : pb::IMessage<CollectionSubfeatureFamilyOrders> {
            private static readonly pb::MessageParser<CollectionSubfeatureFamilyOrders> _parser = new pb::MessageParser<CollectionSubfeatureFamilyOrders>(() => new CollectionSubfeatureFamilyOrders());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<CollectionSubfeatureFamilyOrders> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Descriptor.NestedTypes[9]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionSubfeatureFamilyOrders() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionSubfeatureFamilyOrders(CollectionSubfeatureFamilyOrders other) : this() {
              subfeature_ = other.subfeature_;
              familyIds_ = other.familyIds_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionSubfeatureFamilyOrders Clone() {
              return new CollectionSubfeatureFamilyOrders(this);
            }

            /// <summary>Field number for the "subfeature" field.</summary>
            public const int SubfeatureFieldNumber = 1;
            private global::WUProtos.Data.Collection.CollectionFamily.Types.SubfeatureType subfeature_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Collection.CollectionFamily.Types.SubfeatureType Subfeature {
              get { return subfeature_; }
              set {
                subfeature_ = value;
              }
            }

            /// <summary>Field number for the "family_ids" field.</summary>
            public const int FamilyIdsFieldNumber = 2;
            private static readonly pb::FieldCodec<string> _repeated_familyIds_codec
                = pb::FieldCodec.ForString(18);
            private readonly pbc::RepeatedField<string> familyIds_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> FamilyIds {
              get { return familyIds_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as CollectionSubfeatureFamilyOrders);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(CollectionSubfeatureFamilyOrders other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Subfeature != other.Subfeature) return false;
              if(!familyIds_.Equals(other.familyIds_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Subfeature != 0) hash ^= Subfeature.GetHashCode();
              hash ^= familyIds_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Subfeature != 0) {
                output.WriteRawTag(8);
                output.WriteEnum((int) Subfeature);
              }
              familyIds_.WriteTo(output, _repeated_familyIds_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Subfeature != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Subfeature);
              }
              size += familyIds_.CalculateSize(_repeated_familyIds_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(CollectionSubfeatureFamilyOrders other) {
              if (other == null) {
                return;
              }
              if (other.Subfeature != 0) {
                Subfeature = other.Subfeature;
              }
              familyIds_.Add(other.familyIds_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Subfeature = (global::WUProtos.Data.Collection.CollectionFamily.Types.SubfeatureType) input.ReadEnum();
                    break;
                  }
                  case 18: {
                    familyIds_.AddEntriesFrom(input, _repeated_familyIds_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class CollectionSubfeaturePrestigeLevels : pb::IMessage<CollectionSubfeaturePrestigeLevels> {
            private static readonly pb::MessageParser<CollectionSubfeaturePrestigeLevels> _parser = new pb::MessageParser<CollectionSubfeaturePrestigeLevels>(() => new CollectionSubfeaturePrestigeLevels());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<CollectionSubfeaturePrestigeLevels> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Descriptor.NestedTypes[10]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionSubfeaturePrestigeLevels() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionSubfeaturePrestigeLevels(CollectionSubfeaturePrestigeLevels other) : this() {
              subfeature_ = other.subfeature_;
              prestigeLevels_ = other.prestigeLevels_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CollectionSubfeaturePrestigeLevels Clone() {
              return new CollectionSubfeaturePrestigeLevels(this);
            }

            /// <summary>Field number for the "subfeature" field.</summary>
            public const int SubfeatureFieldNumber = 1;
            private global::WUProtos.Data.Collection.CollectionFamily.Types.SubfeatureType subfeature_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Collection.CollectionFamily.Types.SubfeatureType Subfeature {
              get { return subfeature_; }
              set {
                subfeature_ = value;
              }
            }

            /// <summary>Field number for the "prestige_levels" field.</summary>
            public const int PrestigeLevelsFieldNumber = 2;
            private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.CollectionPrestigeLevel> _repeated_prestigeLevels_codec
                = pb::FieldCodec.ForMessage(18, global::WUProtos.Data.Client.ClientGmTemplate.Types.CollectionPrestigeLevel.Parser);
            private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.CollectionPrestigeLevel> prestigeLevels_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.CollectionPrestigeLevel>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.CollectionPrestigeLevel> PrestigeLevels {
              get { return prestigeLevels_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as CollectionSubfeaturePrestigeLevels);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(CollectionSubfeaturePrestigeLevels other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Subfeature != other.Subfeature) return false;
              if(!prestigeLevels_.Equals(other.prestigeLevels_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Subfeature != 0) hash ^= Subfeature.GetHashCode();
              hash ^= prestigeLevels_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Subfeature != 0) {
                output.WriteRawTag(8);
                output.WriteEnum((int) Subfeature);
              }
              prestigeLevels_.WriteTo(output, _repeated_prestigeLevels_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Subfeature != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Subfeature);
              }
              size += prestigeLevels_.CalculateSize(_repeated_prestigeLevels_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(CollectionSubfeaturePrestigeLevels other) {
              if (other == null) {
                return;
              }
              if (other.Subfeature != 0) {
                Subfeature = other.Subfeature;
              }
              prestigeLevels_.Add(other.prestigeLevels_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Subfeature = (global::WUProtos.Data.Collection.CollectionFamily.Types.SubfeatureType) input.ReadEnum();
                    break;
                  }
                  case 18: {
                    prestigeLevels_.AddEntriesFrom(input, _repeated_prestigeLevels_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class EncounterSoundBanks : pb::IMessage<EncounterSoundBanks> {
            private static readonly pb::MessageParser<EncounterSoundBanks> _parser = new pb::MessageParser<EncounterSoundBanks>(() => new EncounterSoundBanks());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<EncounterSoundBanks> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Descriptor.NestedTypes[11]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EncounterSoundBanks() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EncounterSoundBanks(EncounterSoundBanks other) : this() {
              encounterType_ = other.encounterType_;
              soundBanks_ = other.soundBanks_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EncounterSoundBanks Clone() {
              return new EncounterSoundBanks(this);
            }

            /// <summary>Field number for the "encounter_type" field.</summary>
            public const int EncounterTypeFieldNumber = 1;
            private string encounterType_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string EncounterType {
              get { return encounterType_; }
              set {
                encounterType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "sound_banks" field.</summary>
            public const int SoundBanksFieldNumber = 2;
            private static readonly pb::FieldCodec<string> _repeated_soundBanks_codec
                = pb::FieldCodec.ForString(18);
            private readonly pbc::RepeatedField<string> soundBanks_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> SoundBanks {
              get { return soundBanks_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as EncounterSoundBanks);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(EncounterSoundBanks other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (EncounterType != other.EncounterType) return false;
              if(!soundBanks_.Equals(other.soundBanks_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (EncounterType.Length != 0) hash ^= EncounterType.GetHashCode();
              hash ^= soundBanks_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (EncounterType.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(EncounterType);
              }
              soundBanks_.WriteTo(output, _repeated_soundBanks_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (EncounterType.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterType);
              }
              size += soundBanks_.CalculateSize(_repeated_soundBanks_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(EncounterSoundBanks other) {
              if (other == null) {
                return;
              }
              if (other.EncounterType.Length != 0) {
                EncounterType = other.EncounterType;
              }
              soundBanks_.Add(other.soundBanks_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    EncounterType = input.ReadString();
                    break;
                  }
                  case 18: {
                    soundBanks_.AddEntriesFrom(input, _repeated_soundBanks_codec);
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class MusicConfig : pb::IMessage<MusicConfig> {
            private static readonly pb::MessageParser<MusicConfig> _parser = new pb::MessageParser<MusicConfig>(() => new MusicConfig());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<MusicConfig> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientGameConfig.Descriptor.NestedTypes[12]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MusicConfig() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MusicConfig(MusicConfig other) : this() {
              musicLocation_ = other.musicLocation_;
              parameters_ = other.parameters_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MusicConfig Clone() {
              return new MusicConfig(this);
            }

            /// <summary>Field number for the "music_location" field.</summary>
            public const int MusicLocationFieldNumber = 1;
            private int musicLocation_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int MusicLocation {
              get { return musicLocation_; }
              set {
                musicLocation_ = value;
              }
            }

            /// <summary>Field number for the "parameters" field.</summary>
            public const int ParametersFieldNumber = 2;
            private static readonly pb::FieldCodec<global::WUProtos.Data.AudioParameter> _repeated_parameters_codec
                = pb::FieldCodec.ForMessage(18, global::WUProtos.Data.AudioParameter.Parser);
            private readonly pbc::RepeatedField<global::WUProtos.Data.AudioParameter> parameters_ = new pbc::RepeatedField<global::WUProtos.Data.AudioParameter>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::WUProtos.Data.AudioParameter> Parameters {
              get { return parameters_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as MusicConfig);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(MusicConfig other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (MusicLocation != other.MusicLocation) return false;
              if(!parameters_.Equals(other.parameters_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (MusicLocation != 0) hash ^= MusicLocation.GetHashCode();
              hash ^= parameters_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (MusicLocation != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(MusicLocation);
              }
              parameters_.WriteTo(output, _repeated_parameters_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (MusicLocation != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(MusicLocation);
              }
              size += parameters_.CalculateSize(_repeated_parameters_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(MusicConfig other) {
              if (other == null) {
                return;
              }
              if (other.MusicLocation != 0) {
                MusicLocation = other.MusicLocation;
              }
              parameters_.Add(other.parameters_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    MusicLocation = input.ReadInt32();
                    break;
                  }
                  case 18: {
                    parameters_.AddEntriesFrom(input, _repeated_parameters_codec);
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class ClientCollectionFamily : pb::IMessage<ClientCollectionFamily> {
        private static readonly pb::MessageParser<ClientCollectionFamily> _parser = new pb::MessageParser<ClientCollectionFamily>(() => new ClientCollectionFamily());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientCollectionFamily> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientCollectionFamily() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientCollectionFamily(ClientCollectionFamily other) : this() {
          id_ = other.id_;
          name_ = other.name_;
          description_ = other.description_;
          icon_ = other.icon_;
          landmarkTexture_ = other.landmarkTexture_;
          landmarkPrefab_ = other.landmarkPrefab_;
          landmarkDescription_ = other.landmarkDescription_;
          showInUi_ = other.showInUi_;
          landmarkIcon_ = other.landmarkIcon_;
          color_ = other.color_ != null ? other.color_.Clone() : null;
          colorHighlight_ = other.colorHighlight_ != null ? other.colorHighlight_.Clone() : null;
          tracePrefab_ = other.tracePrefab_;
          borderImages_ = other.borderImages_.Clone();
          familyRunestoneIcon_ = other.familyRunestoneIcon_;
          sound_ = other.sound_ != null ? other.sound_.Clone() : null;
          unarchiveRequirements_ = other.unarchiveRequirements_ != null ? other.unarchiveRequirements_.Clone() : null;
          traceRarityVfxOverride_ = other.traceRarityVfxOverride_;
          prestigeOverride_ = other.prestigeOverride_.Clone();
          hideLandmarkInfoDetails_ = other.hideLandmarkInfoDetails_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientCollectionFamily Clone() {
          return new ClientCollectionFamily(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 3;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 4;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "icon" field.</summary>
        public const int IconFieldNumber = 5;
        private string icon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Icon {
          get { return icon_; }
          set {
            icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "landmark_texture" field.</summary>
        public const int LandmarkTextureFieldNumber = 6;
        private string landmarkTexture_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LandmarkTexture {
          get { return landmarkTexture_; }
          set {
            landmarkTexture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "landmark_prefab" field.</summary>
        public const int LandmarkPrefabFieldNumber = 7;
        private string landmarkPrefab_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LandmarkPrefab {
          get { return landmarkPrefab_; }
          set {
            landmarkPrefab_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "landmark_description" field.</summary>
        public const int LandmarkDescriptionFieldNumber = 8;
        private string landmarkDescription_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LandmarkDescription {
          get { return landmarkDescription_; }
          set {
            landmarkDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "show_in_ui" field.</summary>
        public const int ShowInUiFieldNumber = 9;
        private bool showInUi_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ShowInUi {
          get { return showInUi_; }
          set {
            showInUi_ = value;
          }
        }

        /// <summary>Field number for the "landmark_icon" field.</summary>
        public const int LandmarkIconFieldNumber = 11;
        private string landmarkIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LandmarkIcon {
          get { return landmarkIcon_; }
          set {
            landmarkIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "color" field.</summary>
        public const int ColorFieldNumber = 12;
        private global::WUProtos.Data.Color color_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color Color {
          get { return color_; }
          set {
            color_ = value;
          }
        }

        /// <summary>Field number for the "color_highlight" field.</summary>
        public const int ColorHighlightFieldNumber = 13;
        private global::WUProtos.Data.Color colorHighlight_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color ColorHighlight {
          get { return colorHighlight_; }
          set {
            colorHighlight_ = value;
          }
        }

        /// <summary>Field number for the "trace_prefab" field.</summary>
        public const int TracePrefabFieldNumber = 14;
        private string tracePrefab_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TracePrefab {
          get { return tracePrefab_; }
          set {
            tracePrefab_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "border_images" field.</summary>
        public const int BorderImagesFieldNumber = 15;
        private static readonly pb::FieldCodec<string> _repeated_borderImages_codec
            = pb::FieldCodec.ForString(122);
        private readonly pbc::RepeatedField<string> borderImages_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> BorderImages {
          get { return borderImages_; }
        }

        /// <summary>Field number for the "family_runestone_icon" field.</summary>
        public const int FamilyRunestoneIconFieldNumber = 16;
        private string familyRunestoneIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FamilyRunestoneIcon {
          get { return familyRunestoneIcon_; }
          set {
            familyRunestoneIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "sound" field.</summary>
        public const int SoundFieldNumber = 17;
        private global::WUProtos.Data.SoundConfig sound_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.SoundConfig Sound {
          get { return sound_; }
          set {
            sound_ = value;
          }
        }

        /// <summary>Field number for the "unarchive_requirements" field.</summary>
        public const int UnarchiveRequirementsFieldNumber = 18;
        private global::WUProtos.Data.Requirements unarchiveRequirements_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements UnarchiveRequirements {
          get { return unarchiveRequirements_; }
          set {
            unarchiveRequirements_ = value;
          }
        }

        /// <summary>Field number for the "trace_rarity_vfx_override" field.</summary>
        public const int TraceRarityVfxOverrideFieldNumber = 19;
        private string traceRarityVfxOverride_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TraceRarityVfxOverride {
          get { return traceRarityVfxOverride_; }
          set {
            traceRarityVfxOverride_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "prestige_override" field.</summary>
        public const int PrestigeOverrideFieldNumber = 20;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.CollectionPrestigeLevel> _repeated_prestigeOverride_codec
            = pb::FieldCodec.ForMessage(162, global::WUProtos.Data.Client.ClientGmTemplate.Types.CollectionPrestigeLevel.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.CollectionPrestigeLevel> prestigeOverride_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.CollectionPrestigeLevel>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.CollectionPrestigeLevel> PrestigeOverride {
          get { return prestigeOverride_; }
        }

        /// <summary>Field number for the "hide_landmark_info_details" field.</summary>
        public const int HideLandmarkInfoDetailsFieldNumber = 21;
        private bool hideLandmarkInfoDetails_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HideLandmarkInfoDetails {
          get { return hideLandmarkInfoDetails_; }
          set {
            hideLandmarkInfoDetails_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientCollectionFamily);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientCollectionFamily other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if (Description != other.Description) return false;
          if (Icon != other.Icon) return false;
          if (LandmarkTexture != other.LandmarkTexture) return false;
          if (LandmarkPrefab != other.LandmarkPrefab) return false;
          if (LandmarkDescription != other.LandmarkDescription) return false;
          if (ShowInUi != other.ShowInUi) return false;
          if (LandmarkIcon != other.LandmarkIcon) return false;
          if (!object.Equals(Color, other.Color)) return false;
          if (!object.Equals(ColorHighlight, other.ColorHighlight)) return false;
          if (TracePrefab != other.TracePrefab) return false;
          if(!borderImages_.Equals(other.borderImages_)) return false;
          if (FamilyRunestoneIcon != other.FamilyRunestoneIcon) return false;
          if (!object.Equals(Sound, other.Sound)) return false;
          if (!object.Equals(UnarchiveRequirements, other.UnarchiveRequirements)) return false;
          if (TraceRarityVfxOverride != other.TraceRarityVfxOverride) return false;
          if(!prestigeOverride_.Equals(other.prestigeOverride_)) return false;
          if (HideLandmarkInfoDetails != other.HideLandmarkInfoDetails) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (Icon.Length != 0) hash ^= Icon.GetHashCode();
          if (LandmarkTexture.Length != 0) hash ^= LandmarkTexture.GetHashCode();
          if (LandmarkPrefab.Length != 0) hash ^= LandmarkPrefab.GetHashCode();
          if (LandmarkDescription.Length != 0) hash ^= LandmarkDescription.GetHashCode();
          if (ShowInUi != false) hash ^= ShowInUi.GetHashCode();
          if (LandmarkIcon.Length != 0) hash ^= LandmarkIcon.GetHashCode();
          if (color_ != null) hash ^= Color.GetHashCode();
          if (colorHighlight_ != null) hash ^= ColorHighlight.GetHashCode();
          if (TracePrefab.Length != 0) hash ^= TracePrefab.GetHashCode();
          hash ^= borderImages_.GetHashCode();
          if (FamilyRunestoneIcon.Length != 0) hash ^= FamilyRunestoneIcon.GetHashCode();
          if (sound_ != null) hash ^= Sound.GetHashCode();
          if (unarchiveRequirements_ != null) hash ^= UnarchiveRequirements.GetHashCode();
          if (TraceRarityVfxOverride.Length != 0) hash ^= TraceRarityVfxOverride.GetHashCode();
          hash ^= prestigeOverride_.GetHashCode();
          if (HideLandmarkInfoDetails != false) hash ^= HideLandmarkInfoDetails.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Description);
          }
          if (Icon.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Icon);
          }
          if (LandmarkTexture.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(LandmarkTexture);
          }
          if (LandmarkPrefab.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(LandmarkPrefab);
          }
          if (LandmarkDescription.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(LandmarkDescription);
          }
          if (ShowInUi != false) {
            output.WriteRawTag(72);
            output.WriteBool(ShowInUi);
          }
          if (LandmarkIcon.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(LandmarkIcon);
          }
          if (color_ != null) {
            output.WriteRawTag(98);
            output.WriteMessage(Color);
          }
          if (colorHighlight_ != null) {
            output.WriteRawTag(106);
            output.WriteMessage(ColorHighlight);
          }
          if (TracePrefab.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(TracePrefab);
          }
          borderImages_.WriteTo(output, _repeated_borderImages_codec);
          if (FamilyRunestoneIcon.Length != 0) {
            output.WriteRawTag(130, 1);
            output.WriteString(FamilyRunestoneIcon);
          }
          if (sound_ != null) {
            output.WriteRawTag(138, 1);
            output.WriteMessage(Sound);
          }
          if (unarchiveRequirements_ != null) {
            output.WriteRawTag(146, 1);
            output.WriteMessage(UnarchiveRequirements);
          }
          if (TraceRarityVfxOverride.Length != 0) {
            output.WriteRawTag(154, 1);
            output.WriteString(TraceRarityVfxOverride);
          }
          prestigeOverride_.WriteTo(output, _repeated_prestigeOverride_codec);
          if (HideLandmarkInfoDetails != false) {
            output.WriteRawTag(168, 1);
            output.WriteBool(HideLandmarkInfoDetails);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (Icon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
          }
          if (LandmarkTexture.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LandmarkTexture);
          }
          if (LandmarkPrefab.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LandmarkPrefab);
          }
          if (LandmarkDescription.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LandmarkDescription);
          }
          if (ShowInUi != false) {
            size += 1 + 1;
          }
          if (LandmarkIcon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LandmarkIcon);
          }
          if (color_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
          }
          if (colorHighlight_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ColorHighlight);
          }
          if (TracePrefab.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TracePrefab);
          }
          size += borderImages_.CalculateSize(_repeated_borderImages_codec);
          if (FamilyRunestoneIcon.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(FamilyRunestoneIcon);
          }
          if (sound_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(Sound);
          }
          if (unarchiveRequirements_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnarchiveRequirements);
          }
          if (TraceRarityVfxOverride.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(TraceRarityVfxOverride);
          }
          size += prestigeOverride_.CalculateSize(_repeated_prestigeOverride_codec);
          if (HideLandmarkInfoDetails != false) {
            size += 2 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientCollectionFamily other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          if (other.Icon.Length != 0) {
            Icon = other.Icon;
          }
          if (other.LandmarkTexture.Length != 0) {
            LandmarkTexture = other.LandmarkTexture;
          }
          if (other.LandmarkPrefab.Length != 0) {
            LandmarkPrefab = other.LandmarkPrefab;
          }
          if (other.LandmarkDescription.Length != 0) {
            LandmarkDescription = other.LandmarkDescription;
          }
          if (other.ShowInUi != false) {
            ShowInUi = other.ShowInUi;
          }
          if (other.LandmarkIcon.Length != 0) {
            LandmarkIcon = other.LandmarkIcon;
          }
          if (other.color_ != null) {
            if (color_ == null) {
              Color = new global::WUProtos.Data.Color();
            }
            Color.MergeFrom(other.Color);
          }
          if (other.colorHighlight_ != null) {
            if (colorHighlight_ == null) {
              ColorHighlight = new global::WUProtos.Data.Color();
            }
            ColorHighlight.MergeFrom(other.ColorHighlight);
          }
          if (other.TracePrefab.Length != 0) {
            TracePrefab = other.TracePrefab;
          }
          borderImages_.Add(other.borderImages_);
          if (other.FamilyRunestoneIcon.Length != 0) {
            FamilyRunestoneIcon = other.FamilyRunestoneIcon;
          }
          if (other.sound_ != null) {
            if (sound_ == null) {
              Sound = new global::WUProtos.Data.SoundConfig();
            }
            Sound.MergeFrom(other.Sound);
          }
          if (other.unarchiveRequirements_ != null) {
            if (unarchiveRequirements_ == null) {
              UnarchiveRequirements = new global::WUProtos.Data.Requirements();
            }
            UnarchiveRequirements.MergeFrom(other.UnarchiveRequirements);
          }
          if (other.TraceRarityVfxOverride.Length != 0) {
            TraceRarityVfxOverride = other.TraceRarityVfxOverride;
          }
          prestigeOverride_.Add(other.prestigeOverride_);
          if (other.HideLandmarkInfoDetails != false) {
            HideLandmarkInfoDetails = other.HideLandmarkInfoDetails;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
              case 34: {
                Description = input.ReadString();
                break;
              }
              case 42: {
                Icon = input.ReadString();
                break;
              }
              case 50: {
                LandmarkTexture = input.ReadString();
                break;
              }
              case 58: {
                LandmarkPrefab = input.ReadString();
                break;
              }
              case 66: {
                LandmarkDescription = input.ReadString();
                break;
              }
              case 72: {
                ShowInUi = input.ReadBool();
                break;
              }
              case 90: {
                LandmarkIcon = input.ReadString();
                break;
              }
              case 98: {
                if (color_ == null) {
                  Color = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(Color);
                break;
              }
              case 106: {
                if (colorHighlight_ == null) {
                  ColorHighlight = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(ColorHighlight);
                break;
              }
              case 114: {
                TracePrefab = input.ReadString();
                break;
              }
              case 122: {
                borderImages_.AddEntriesFrom(input, _repeated_borderImages_codec);
                break;
              }
              case 130: {
                FamilyRunestoneIcon = input.ReadString();
                break;
              }
              case 138: {
                if (sound_ == null) {
                  Sound = new global::WUProtos.Data.SoundConfig();
                }
                input.ReadMessage(Sound);
                break;
              }
              case 146: {
                if (unarchiveRequirements_ == null) {
                  UnarchiveRequirements = new global::WUProtos.Data.Requirements();
                }
                input.ReadMessage(UnarchiveRequirements);
                break;
              }
              case 154: {
                TraceRarityVfxOverride = input.ReadString();
                break;
              }
              case 162: {
                prestigeOverride_.AddEntriesFrom(input, _repeated_prestigeOverride_codec);
                break;
              }
              case 168: {
                HideLandmarkInfoDetails = input.ReadBool();
                break;
              }
            }
          }
        }

      }

      public sealed partial class CollectionPrestigeLevel : pb::IMessage<CollectionPrestigeLevel> {
        private static readonly pb::MessageParser<CollectionPrestigeLevel> _parser = new pb::MessageParser<CollectionPrestigeLevel>(() => new CollectionPrestigeLevel());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CollectionPrestigeLevel> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CollectionPrestigeLevel() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CollectionPrestigeLevel(CollectionPrestigeLevel other) : this() {
          borderImage_ = other.borderImage_;
          name_ = other.name_;
          color_ = other.color_ != null ? other.color_.Clone() : null;
          isMetallic_ = other.isMetallic_;
          frameMesh_ = other.frameMesh_;
          normalMap_ = other.normalMap_;
          albedoMap_ = other.albedoMap_;
          roughness_ = other.roughness_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CollectionPrestigeLevel Clone() {
          return new CollectionPrestigeLevel(this);
        }

        /// <summary>Field number for the "border_image" field.</summary>
        public const int BorderImageFieldNumber = 1;
        private string borderImage_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BorderImage {
          get { return borderImage_; }
          set {
            borderImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "color" field.</summary>
        public const int ColorFieldNumber = 3;
        private global::WUProtos.Data.Color color_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color Color {
          get { return color_; }
          set {
            color_ = value;
          }
        }

        /// <summary>Field number for the "is_metallic" field.</summary>
        public const int IsMetallicFieldNumber = 4;
        private bool isMetallic_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsMetallic {
          get { return isMetallic_; }
          set {
            isMetallic_ = value;
          }
        }

        /// <summary>Field number for the "frame_mesh" field.</summary>
        public const int FrameMeshFieldNumber = 5;
        private string frameMesh_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FrameMesh {
          get { return frameMesh_; }
          set {
            frameMesh_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "normal_map" field.</summary>
        public const int NormalMapFieldNumber = 6;
        private string normalMap_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string NormalMap {
          get { return normalMap_; }
          set {
            normalMap_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "albedo_map" field.</summary>
        public const int AlbedoMapFieldNumber = 7;
        private string albedoMap_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AlbedoMap {
          get { return albedoMap_; }
          set {
            albedoMap_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "roughness" field.</summary>
        public const int RoughnessFieldNumber = 8;
        private float roughness_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Roughness {
          get { return roughness_; }
          set {
            roughness_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CollectionPrestigeLevel);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CollectionPrestigeLevel other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (BorderImage != other.BorderImage) return false;
          if (Name != other.Name) return false;
          if (!object.Equals(Color, other.Color)) return false;
          if (IsMetallic != other.IsMetallic) return false;
          if (FrameMesh != other.FrameMesh) return false;
          if (NormalMap != other.NormalMap) return false;
          if (AlbedoMap != other.AlbedoMap) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Roughness, other.Roughness)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (BorderImage.Length != 0) hash ^= BorderImage.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (color_ != null) hash ^= Color.GetHashCode();
          if (IsMetallic != false) hash ^= IsMetallic.GetHashCode();
          if (FrameMesh.Length != 0) hash ^= FrameMesh.GetHashCode();
          if (NormalMap.Length != 0) hash ^= NormalMap.GetHashCode();
          if (AlbedoMap.Length != 0) hash ^= AlbedoMap.GetHashCode();
          if (Roughness != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Roughness);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (BorderImage.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(BorderImage);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (color_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Color);
          }
          if (IsMetallic != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsMetallic);
          }
          if (FrameMesh.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(FrameMesh);
          }
          if (NormalMap.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(NormalMap);
          }
          if (AlbedoMap.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(AlbedoMap);
          }
          if (Roughness != 0F) {
            output.WriteRawTag(69);
            output.WriteFloat(Roughness);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (BorderImage.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BorderImage);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (color_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
          }
          if (IsMetallic != false) {
            size += 1 + 1;
          }
          if (FrameMesh.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameMesh);
          }
          if (NormalMap.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(NormalMap);
          }
          if (AlbedoMap.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AlbedoMap);
          }
          if (Roughness != 0F) {
            size += 1 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CollectionPrestigeLevel other) {
          if (other == null) {
            return;
          }
          if (other.BorderImage.Length != 0) {
            BorderImage = other.BorderImage;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.color_ != null) {
            if (color_ == null) {
              Color = new global::WUProtos.Data.Color();
            }
            Color.MergeFrom(other.Color);
          }
          if (other.IsMetallic != false) {
            IsMetallic = other.IsMetallic;
          }
          if (other.FrameMesh.Length != 0) {
            FrameMesh = other.FrameMesh;
          }
          if (other.NormalMap.Length != 0) {
            NormalMap = other.NormalMap;
          }
          if (other.AlbedoMap.Length != 0) {
            AlbedoMap = other.AlbedoMap;
          }
          if (other.Roughness != 0F) {
            Roughness = other.Roughness;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                BorderImage = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                if (color_ == null) {
                  Color = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(Color);
                break;
              }
              case 32: {
                IsMetallic = input.ReadBool();
                break;
              }
              case 42: {
                FrameMesh = input.ReadString();
                break;
              }
              case 50: {
                NormalMap = input.ReadString();
                break;
              }
              case 58: {
                AlbedoMap = input.ReadString();
                break;
              }
              case 69: {
                Roughness = input.ReadFloat();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientVaultItem : pb::IMessage<ClientVaultItem> {
        private static readonly pb::MessageParser<ClientVaultItem> _parser = new pb::MessageParser<ClientVaultItem>(() => new ClientVaultItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientVaultItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientVaultItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientVaultItem(ClientVaultItem other) : this() {
          id_ = other.id_;
          name_ = other.name_;
          icon_ = other.icon_;
          prefab_ = other.prefab_;
          rarity_ = other.rarity_;
          description_ = other.description_;
          showInVaultItemMenu_ = other.showInVaultItemMenu_;
          deletable_ = other.deletable_;
          showInRewardsFlow_ = other.showInRewardsFlow_;
          color_ = other.color_ != null ? other.color_.Clone() : null;
          background_ = other.background_;
          ordering_ = other.ordering_;
          rewardSound_ = other.rewardSound_ != null ? other.rewardSound_.Clone() : null;
          rewardSoundPriority_ = other.rewardSoundPriority_;
          spineAnimatedIcon_ = other.spineAnimatedIcon_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientVaultItem Clone() {
          return new ClientVaultItem(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "icon" field.</summary>
        public const int IconFieldNumber = 3;
        private string icon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Icon {
          get { return icon_; }
          set {
            icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "prefab" field.</summary>
        public const int PrefabFieldNumber = 4;
        private string prefab_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Prefab {
          get { return prefab_; }
          set {
            prefab_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "rarity" field.</summary>
        public const int RarityFieldNumber = 5;
        private long rarity_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Rarity {
          get { return rarity_; }
          set {
            rarity_ = value;
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 6;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "show_in_vault_item_menu" field.</summary>
        public const int ShowInVaultItemMenuFieldNumber = 8;
        private bool showInVaultItemMenu_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ShowInVaultItemMenu {
          get { return showInVaultItemMenu_; }
          set {
            showInVaultItemMenu_ = value;
          }
        }

        /// <summary>Field number for the "deletable" field.</summary>
        public const int DeletableFieldNumber = 9;
        private bool deletable_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Deletable {
          get { return deletable_; }
          set {
            deletable_ = value;
          }
        }

        /// <summary>Field number for the "show_in_rewards_flow" field.</summary>
        public const int ShowInRewardsFlowFieldNumber = 10;
        private bool showInRewardsFlow_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ShowInRewardsFlow {
          get { return showInRewardsFlow_; }
          set {
            showInRewardsFlow_ = value;
          }
        }

        /// <summary>Field number for the "color" field.</summary>
        public const int ColorFieldNumber = 11;
        private global::WUProtos.Data.Color color_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color Color {
          get { return color_; }
          set {
            color_ = value;
          }
        }

        /// <summary>Field number for the "background" field.</summary>
        public const int BackgroundFieldNumber = 12;
        private string background_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Background {
          get { return background_; }
          set {
            background_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ordering" field.</summary>
        public const int OrderingFieldNumber = 13;
        private int ordering_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Ordering {
          get { return ordering_; }
          set {
            ordering_ = value;
          }
        }

        /// <summary>Field number for the "reward_sound" field.</summary>
        public const int RewardSoundFieldNumber = 14;
        private global::WUProtos.Data.SoundConfig rewardSound_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.SoundConfig RewardSound {
          get { return rewardSound_; }
          set {
            rewardSound_ = value;
          }
        }

        /// <summary>Field number for the "reward_sound_priority" field.</summary>
        public const int RewardSoundPriorityFieldNumber = 15;
        private int rewardSoundPriority_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int RewardSoundPriority {
          get { return rewardSoundPriority_; }
          set {
            rewardSoundPriority_ = value;
          }
        }

        /// <summary>Field number for the "spine_animated_icon" field.</summary>
        public const int SpineAnimatedIconFieldNumber = 16;
        private string spineAnimatedIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SpineAnimatedIcon {
          get { return spineAnimatedIcon_; }
          set {
            spineAnimatedIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientVaultItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientVaultItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if (Icon != other.Icon) return false;
          if (Prefab != other.Prefab) return false;
          if (Rarity != other.Rarity) return false;
          if (Description != other.Description) return false;
          if (ShowInVaultItemMenu != other.ShowInVaultItemMenu) return false;
          if (Deletable != other.Deletable) return false;
          if (ShowInRewardsFlow != other.ShowInRewardsFlow) return false;
          if (!object.Equals(Color, other.Color)) return false;
          if (Background != other.Background) return false;
          if (Ordering != other.Ordering) return false;
          if (!object.Equals(RewardSound, other.RewardSound)) return false;
          if (RewardSoundPriority != other.RewardSoundPriority) return false;
          if (SpineAnimatedIcon != other.SpineAnimatedIcon) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Icon.Length != 0) hash ^= Icon.GetHashCode();
          if (Prefab.Length != 0) hash ^= Prefab.GetHashCode();
          if (Rarity != 0L) hash ^= Rarity.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (ShowInVaultItemMenu != false) hash ^= ShowInVaultItemMenu.GetHashCode();
          if (Deletable != false) hash ^= Deletable.GetHashCode();
          if (ShowInRewardsFlow != false) hash ^= ShowInRewardsFlow.GetHashCode();
          if (color_ != null) hash ^= Color.GetHashCode();
          if (Background.Length != 0) hash ^= Background.GetHashCode();
          if (Ordering != 0) hash ^= Ordering.GetHashCode();
          if (rewardSound_ != null) hash ^= RewardSound.GetHashCode();
          if (RewardSoundPriority != 0) hash ^= RewardSoundPriority.GetHashCode();
          if (SpineAnimatedIcon.Length != 0) hash ^= SpineAnimatedIcon.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Icon.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Icon);
          }
          if (Prefab.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Prefab);
          }
          if (Rarity != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(Rarity);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Description);
          }
          if (ShowInVaultItemMenu != false) {
            output.WriteRawTag(64);
            output.WriteBool(ShowInVaultItemMenu);
          }
          if (Deletable != false) {
            output.WriteRawTag(72);
            output.WriteBool(Deletable);
          }
          if (ShowInRewardsFlow != false) {
            output.WriteRawTag(80);
            output.WriteBool(ShowInRewardsFlow);
          }
          if (color_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(Color);
          }
          if (Background.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(Background);
          }
          if (Ordering != 0) {
            output.WriteRawTag(104);
            output.WriteInt32(Ordering);
          }
          if (rewardSound_ != null) {
            output.WriteRawTag(114);
            output.WriteMessage(RewardSound);
          }
          if (RewardSoundPriority != 0) {
            output.WriteRawTag(120);
            output.WriteInt32(RewardSoundPriority);
          }
          if (SpineAnimatedIcon.Length != 0) {
            output.WriteRawTag(130, 1);
            output.WriteString(SpineAnimatedIcon);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Icon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
          }
          if (Prefab.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Prefab);
          }
          if (Rarity != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Rarity);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (ShowInVaultItemMenu != false) {
            size += 1 + 1;
          }
          if (Deletable != false) {
            size += 1 + 1;
          }
          if (ShowInRewardsFlow != false) {
            size += 1 + 1;
          }
          if (color_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
          }
          if (Background.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Background);
          }
          if (Ordering != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ordering);
          }
          if (rewardSound_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RewardSound);
          }
          if (RewardSoundPriority != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardSoundPriority);
          }
          if (SpineAnimatedIcon.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(SpineAnimatedIcon);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientVaultItem other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Icon.Length != 0) {
            Icon = other.Icon;
          }
          if (other.Prefab.Length != 0) {
            Prefab = other.Prefab;
          }
          if (other.Rarity != 0L) {
            Rarity = other.Rarity;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          if (other.ShowInVaultItemMenu != false) {
            ShowInVaultItemMenu = other.ShowInVaultItemMenu;
          }
          if (other.Deletable != false) {
            Deletable = other.Deletable;
          }
          if (other.ShowInRewardsFlow != false) {
            ShowInRewardsFlow = other.ShowInRewardsFlow;
          }
          if (other.color_ != null) {
            if (color_ == null) {
              Color = new global::WUProtos.Data.Color();
            }
            Color.MergeFrom(other.Color);
          }
          if (other.Background.Length != 0) {
            Background = other.Background;
          }
          if (other.Ordering != 0) {
            Ordering = other.Ordering;
          }
          if (other.rewardSound_ != null) {
            if (rewardSound_ == null) {
              RewardSound = new global::WUProtos.Data.SoundConfig();
            }
            RewardSound.MergeFrom(other.RewardSound);
          }
          if (other.RewardSoundPriority != 0) {
            RewardSoundPriority = other.RewardSoundPriority;
          }
          if (other.SpineAnimatedIcon.Length != 0) {
            SpineAnimatedIcon = other.SpineAnimatedIcon;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                Icon = input.ReadString();
                break;
              }
              case 34: {
                Prefab = input.ReadString();
                break;
              }
              case 40: {
                Rarity = input.ReadInt64();
                break;
              }
              case 50: {
                Description = input.ReadString();
                break;
              }
              case 64: {
                ShowInVaultItemMenu = input.ReadBool();
                break;
              }
              case 72: {
                Deletable = input.ReadBool();
                break;
              }
              case 80: {
                ShowInRewardsFlow = input.ReadBool();
                break;
              }
              case 90: {
                if (color_ == null) {
                  Color = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(Color);
                break;
              }
              case 98: {
                Background = input.ReadString();
                break;
              }
              case 104: {
                Ordering = input.ReadInt32();
                break;
              }
              case 114: {
                if (rewardSound_ == null) {
                  RewardSound = new global::WUProtos.Data.SoundConfig();
                }
                input.ReadMessage(RewardSound);
                break;
              }
              case 120: {
                RewardSoundPriority = input.ReadInt32();
                break;
              }
              case 130: {
                SpineAnimatedIcon = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientStoreConfig : pb::IMessage<ClientStoreConfig> {
        private static readonly pb::MessageParser<ClientStoreConfig> _parser = new pb::MessageParser<ClientStoreConfig>(() => new ClientStoreConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientStoreConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientStoreConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientStoreConfig(ClientStoreConfig other) : this() {
          id_ = other.id_;
          storeCategories_ = other.storeCategories_.Clone();
          storeRarities_ = other.storeRarities_.Clone();
          defaultStorePackIconPath_ = other.defaultStorePackIconPath_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientStoreConfig Clone() {
          return new ClientStoreConfig(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "store_categories" field.</summary>
        public const int StoreCategoriesFieldNumber = 2;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Types.StoreCategory> _repeated_storeCategories_codec
            = pb::FieldCodec.ForMessage(18, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Types.StoreCategory.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Types.StoreCategory> storeCategories_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Types.StoreCategory>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Types.StoreCategory> StoreCategories {
          get { return storeCategories_; }
        }

        /// <summary>Field number for the "store_rarities" field.</summary>
        public const int StoreRaritiesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Types.StoreRarity> _repeated_storeRarities_codec
            = pb::FieldCodec.ForMessage(26, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Types.StoreRarity.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Types.StoreRarity> storeRarities_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Types.StoreRarity>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Types.StoreRarity> StoreRarities {
          get { return storeRarities_; }
        }

        /// <summary>Field number for the "default_store_pack_icon_path" field.</summary>
        public const int DefaultStorePackIconPathFieldNumber = 4;
        private string defaultStorePackIconPath_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DefaultStorePackIconPath {
          get { return defaultStorePackIconPath_; }
          set {
            defaultStorePackIconPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientStoreConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientStoreConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if(!storeCategories_.Equals(other.storeCategories_)) return false;
          if(!storeRarities_.Equals(other.storeRarities_)) return false;
          if (DefaultStorePackIconPath != other.DefaultStorePackIconPath) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          hash ^= storeCategories_.GetHashCode();
          hash ^= storeRarities_.GetHashCode();
          if (DefaultStorePackIconPath.Length != 0) hash ^= DefaultStorePackIconPath.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          storeCategories_.WriteTo(output, _repeated_storeCategories_codec);
          storeRarities_.WriteTo(output, _repeated_storeRarities_codec);
          if (DefaultStorePackIconPath.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(DefaultStorePackIconPath);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          size += storeCategories_.CalculateSize(_repeated_storeCategories_codec);
          size += storeRarities_.CalculateSize(_repeated_storeRarities_codec);
          if (DefaultStorePackIconPath.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultStorePackIconPath);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientStoreConfig other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          storeCategories_.Add(other.storeCategories_);
          storeRarities_.Add(other.storeRarities_);
          if (other.DefaultStorePackIconPath.Length != 0) {
            DefaultStorePackIconPath = other.DefaultStorePackIconPath;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                storeCategories_.AddEntriesFrom(input, _repeated_storeCategories_codec);
                break;
              }
              case 26: {
                storeRarities_.AddEntriesFrom(input, _repeated_storeRarities_codec);
                break;
              }
              case 34: {
                DefaultStorePackIconPath = input.ReadString();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ClientStoreConfig message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class StoreRarity : pb::IMessage<StoreRarity> {
            private static readonly pb::MessageParser<StoreRarity> _parser = new pb::MessageParser<StoreRarity>(() => new StoreRarity());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<StoreRarity> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public StoreRarity() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public StoreRarity(StoreRarity other) : this() {
              id_ = other.id_;
              textColor_ = other.textColor_ != null ? other.textColor_.Clone() : null;
              title_ = other.title_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public StoreRarity Clone() {
              return new StoreRarity(this);
            }

            /// <summary>Field number for the "id" field.</summary>
            public const int IdFieldNumber = 1;
            private string id_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Id {
              get { return id_; }
              set {
                id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "text_color" field.</summary>
            public const int TextColorFieldNumber = 2;
            private global::WUProtos.Data.Color textColor_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Color TextColor {
              get { return textColor_; }
              set {
                textColor_ = value;
              }
            }

            /// <summary>Field number for the "title" field.</summary>
            public const int TitleFieldNumber = 3;
            private string title_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Title {
              get { return title_; }
              set {
                title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as StoreRarity);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(StoreRarity other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Id != other.Id) return false;
              if (!object.Equals(TextColor, other.TextColor)) return false;
              if (Title != other.Title) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Id.Length != 0) hash ^= Id.GetHashCode();
              if (textColor_ != null) hash ^= TextColor.GetHashCode();
              if (Title.Length != 0) hash ^= Title.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Id.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Id);
              }
              if (textColor_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(TextColor);
              }
              if (Title.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Title);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Id.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
              }
              if (textColor_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextColor);
              }
              if (Title.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(StoreRarity other) {
              if (other == null) {
                return;
              }
              if (other.Id.Length != 0) {
                Id = other.Id;
              }
              if (other.textColor_ != null) {
                if (textColor_ == null) {
                  TextColor = new global::WUProtos.Data.Color();
                }
                TextColor.MergeFrom(other.TextColor);
              }
              if (other.Title.Length != 0) {
                Title = other.Title;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Id = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (textColor_ == null) {
                      TextColor = new global::WUProtos.Data.Color();
                    }
                    input.ReadMessage(TextColor);
                    break;
                  }
                  case 26: {
                    Title = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class StoreCategory : pb::IMessage<StoreCategory> {
            private static readonly pb::MessageParser<StoreCategory> _parser = new pb::MessageParser<StoreCategory>(() => new StoreCategory());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<StoreCategory> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoreConfig.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public StoreCategory() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public StoreCategory(StoreCategory other) : this() {
              iconPath_ = other.iconPath_;
              title_ = other.title_;
              header_ = other.header_;
              headerColor_ = other.headerColor_ != null ? other.headerColor_.Clone() : null;
              background_ = other.background_;
              backgroundColor_ = other.backgroundColor_ != null ? other.backgroundColor_.Clone() : null;
              storeSubcategories_ = other.storeSubcategories_.Clone();
              headerPrefab_ = other.headerPrefab_;
              itemColor_ = other.itemColor_ != null ? other.itemColor_.Clone() : null;
              enabled_ = other.enabled_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public StoreCategory Clone() {
              return new StoreCategory(this);
            }

            /// <summary>Field number for the "icon_path" field.</summary>
            public const int IconPathFieldNumber = 1;
            private string iconPath_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string IconPath {
              get { return iconPath_; }
              set {
                iconPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "title" field.</summary>
            public const int TitleFieldNumber = 2;
            private string title_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Title {
              get { return title_; }
              set {
                title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "header" field.</summary>
            public const int HeaderFieldNumber = 3;
            private string header_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Header {
              get { return header_; }
              set {
                header_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "header_color" field.</summary>
            public const int HeaderColorFieldNumber = 4;
            private global::WUProtos.Data.Color headerColor_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Color HeaderColor {
              get { return headerColor_; }
              set {
                headerColor_ = value;
              }
            }

            /// <summary>Field number for the "background" field.</summary>
            public const int BackgroundFieldNumber = 5;
            private string background_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Background {
              get { return background_; }
              set {
                background_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "background_color" field.</summary>
            public const int BackgroundColorFieldNumber = 6;
            private global::WUProtos.Data.Color backgroundColor_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Color BackgroundColor {
              get { return backgroundColor_; }
              set {
                backgroundColor_ = value;
              }
            }

            /// <summary>Field number for the "store_subcategories" field.</summary>
            public const int StoreSubcategoriesFieldNumber = 7;
            private static readonly pb::FieldCodec<string> _repeated_storeSubcategories_codec
                = pb::FieldCodec.ForString(58);
            private readonly pbc::RepeatedField<string> storeSubcategories_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> StoreSubcategories {
              get { return storeSubcategories_; }
            }

            /// <summary>Field number for the "header_prefab" field.</summary>
            public const int HeaderPrefabFieldNumber = 8;
            private string headerPrefab_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string HeaderPrefab {
              get { return headerPrefab_; }
              set {
                headerPrefab_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "item_color" field.</summary>
            public const int ItemColorFieldNumber = 9;
            private global::WUProtos.Data.Color itemColor_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Color ItemColor {
              get { return itemColor_; }
              set {
                itemColor_ = value;
              }
            }

            /// <summary>Field number for the "enabled" field.</summary>
            public const int EnabledFieldNumber = 10;
            private bool enabled_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Enabled {
              get { return enabled_; }
              set {
                enabled_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as StoreCategory);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(StoreCategory other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (IconPath != other.IconPath) return false;
              if (Title != other.Title) return false;
              if (Header != other.Header) return false;
              if (!object.Equals(HeaderColor, other.HeaderColor)) return false;
              if (Background != other.Background) return false;
              if (!object.Equals(BackgroundColor, other.BackgroundColor)) return false;
              if(!storeSubcategories_.Equals(other.storeSubcategories_)) return false;
              if (HeaderPrefab != other.HeaderPrefab) return false;
              if (!object.Equals(ItemColor, other.ItemColor)) return false;
              if (Enabled != other.Enabled) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (IconPath.Length != 0) hash ^= IconPath.GetHashCode();
              if (Title.Length != 0) hash ^= Title.GetHashCode();
              if (Header.Length != 0) hash ^= Header.GetHashCode();
              if (headerColor_ != null) hash ^= HeaderColor.GetHashCode();
              if (Background.Length != 0) hash ^= Background.GetHashCode();
              if (backgroundColor_ != null) hash ^= BackgroundColor.GetHashCode();
              hash ^= storeSubcategories_.GetHashCode();
              if (HeaderPrefab.Length != 0) hash ^= HeaderPrefab.GetHashCode();
              if (itemColor_ != null) hash ^= ItemColor.GetHashCode();
              if (Enabled != false) hash ^= Enabled.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (IconPath.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(IconPath);
              }
              if (Title.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Title);
              }
              if (Header.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Header);
              }
              if (headerColor_ != null) {
                output.WriteRawTag(34);
                output.WriteMessage(HeaderColor);
              }
              if (Background.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(Background);
              }
              if (backgroundColor_ != null) {
                output.WriteRawTag(50);
                output.WriteMessage(BackgroundColor);
              }
              storeSubcategories_.WriteTo(output, _repeated_storeSubcategories_codec);
              if (HeaderPrefab.Length != 0) {
                output.WriteRawTag(66);
                output.WriteString(HeaderPrefab);
              }
              if (itemColor_ != null) {
                output.WriteRawTag(74);
                output.WriteMessage(ItemColor);
              }
              if (Enabled != false) {
                output.WriteRawTag(80);
                output.WriteBool(Enabled);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (IconPath.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(IconPath);
              }
              if (Title.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
              }
              if (Header.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Header);
              }
              if (headerColor_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeaderColor);
              }
              if (Background.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Background);
              }
              if (backgroundColor_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(BackgroundColor);
              }
              size += storeSubcategories_.CalculateSize(_repeated_storeSubcategories_codec);
              if (HeaderPrefab.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(HeaderPrefab);
              }
              if (itemColor_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemColor);
              }
              if (Enabled != false) {
                size += 1 + 1;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(StoreCategory other) {
              if (other == null) {
                return;
              }
              if (other.IconPath.Length != 0) {
                IconPath = other.IconPath;
              }
              if (other.Title.Length != 0) {
                Title = other.Title;
              }
              if (other.Header.Length != 0) {
                Header = other.Header;
              }
              if (other.headerColor_ != null) {
                if (headerColor_ == null) {
                  HeaderColor = new global::WUProtos.Data.Color();
                }
                HeaderColor.MergeFrom(other.HeaderColor);
              }
              if (other.Background.Length != 0) {
                Background = other.Background;
              }
              if (other.backgroundColor_ != null) {
                if (backgroundColor_ == null) {
                  BackgroundColor = new global::WUProtos.Data.Color();
                }
                BackgroundColor.MergeFrom(other.BackgroundColor);
              }
              storeSubcategories_.Add(other.storeSubcategories_);
              if (other.HeaderPrefab.Length != 0) {
                HeaderPrefab = other.HeaderPrefab;
              }
              if (other.itemColor_ != null) {
                if (itemColor_ == null) {
                  ItemColor = new global::WUProtos.Data.Color();
                }
                ItemColor.MergeFrom(other.ItemColor);
              }
              if (other.Enabled != false) {
                Enabled = other.Enabled;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    IconPath = input.ReadString();
                    break;
                  }
                  case 18: {
                    Title = input.ReadString();
                    break;
                  }
                  case 26: {
                    Header = input.ReadString();
                    break;
                  }
                  case 34: {
                    if (headerColor_ == null) {
                      HeaderColor = new global::WUProtos.Data.Color();
                    }
                    input.ReadMessage(HeaderColor);
                    break;
                  }
                  case 42: {
                    Background = input.ReadString();
                    break;
                  }
                  case 50: {
                    if (backgroundColor_ == null) {
                      BackgroundColor = new global::WUProtos.Data.Color();
                    }
                    input.ReadMessage(BackgroundColor);
                    break;
                  }
                  case 58: {
                    storeSubcategories_.AddEntriesFrom(input, _repeated_storeSubcategories_codec);
                    break;
                  }
                  case 66: {
                    HeaderPrefab = input.ReadString();
                    break;
                  }
                  case 74: {
                    if (itemColor_ == null) {
                      ItemColor = new global::WUProtos.Data.Color();
                    }
                    input.ReadMessage(ItemColor);
                    break;
                  }
                  case 80: {
                    Enabled = input.ReadBool();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class ClientSpell : pb::IMessage<ClientSpell> {
        private static readonly pb::MessageParser<ClientSpell> _parser = new pb::MessageParser<ClientSpell>(() => new ClientSpell());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientSpell> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientSpell() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientSpell(ClientSpell other) : this() {
          id_ = other.id_;
          name_ = other.name_;
          chargeUpEffect_ = other.chargeUpEffect_.Clone();
          timelines_ = other.timelines_.Clone();
          criticalHits_ = other.criticalHits_.Clone();
          pattern_ = other.pattern_;
          glyphImage_ = other.glyphImage_;
          protegoPlayerSucceedTl_ = other.protegoPlayerSucceedTl_;
          protegoPlayerFailedTl_ = other.protegoPlayerFailedTl_;
          protegoPlayerSucceedIntroTl_ = other.protegoPlayerSucceedIntroTl_;
          endBurstEffect_ = other.endBurstEffect_;
          rngVfxTl_ = other.rngVfxTl_;
          spellRngLoopTl_ = other.spellRngLoopTl_;
          spellRngSucceedTl_ = other.spellRngSucceedTl_;
          spellRngFailTl_ = other.spellRngFailTl_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientSpell Clone() {
          return new ClientSpell(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "charge_up_effect" field.</summary>
        public const int ChargeUpEffectFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _repeated_chargeUpEffect_codec
            = pb::FieldCodec.ForString(26);
        private readonly pbc::RepeatedField<string> chargeUpEffect_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> ChargeUpEffect {
          get { return chargeUpEffect_; }
        }

        /// <summary>Field number for the "timelines" field.</summary>
        public const int TimelinesFieldNumber = 4;
        private static readonly pbc::MapField<string, string>.Codec _map_timelines_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
        private readonly pbc::MapField<string, string> timelines_ = new pbc::MapField<string, string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, string> Timelines {
          get { return timelines_; }
        }

        /// <summary>Field number for the "critical_hits" field.</summary>
        public const int CriticalHitsFieldNumber = 5;
        private static readonly pbc::MapField<string, string>.Codec _map_criticalHits_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 42);
        private readonly pbc::MapField<string, string> criticalHits_ = new pbc::MapField<string, string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, string> CriticalHits {
          get { return criticalHits_; }
        }

        /// <summary>Field number for the "pattern" field.</summary>
        public const int PatternFieldNumber = 6;
        private string pattern_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Pattern {
          get { return pattern_; }
          set {
            pattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "glyph_image" field.</summary>
        public const int GlyphImageFieldNumber = 7;
        private string glyphImage_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string GlyphImage {
          get { return glyphImage_; }
          set {
            glyphImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "protego_player_succeed_tl" field.</summary>
        public const int ProtegoPlayerSucceedTlFieldNumber = 8;
        private string protegoPlayerSucceedTl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ProtegoPlayerSucceedTl {
          get { return protegoPlayerSucceedTl_; }
          set {
            protegoPlayerSucceedTl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "protego_player_failed_tl" field.</summary>
        public const int ProtegoPlayerFailedTlFieldNumber = 9;
        private string protegoPlayerFailedTl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ProtegoPlayerFailedTl {
          get { return protegoPlayerFailedTl_; }
          set {
            protegoPlayerFailedTl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "protego_player_succeed_intro_tl" field.</summary>
        public const int ProtegoPlayerSucceedIntroTlFieldNumber = 10;
        private string protegoPlayerSucceedIntroTl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ProtegoPlayerSucceedIntroTl {
          get { return protegoPlayerSucceedIntroTl_; }
          set {
            protegoPlayerSucceedIntroTl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "end_burst_effect" field.</summary>
        public const int EndBurstEffectFieldNumber = 11;
        private string endBurstEffect_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EndBurstEffect {
          get { return endBurstEffect_; }
          set {
            endBurstEffect_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "rng_vfx_tl" field.</summary>
        public const int RngVfxTlFieldNumber = 12;
        private string rngVfxTl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RngVfxTl {
          get { return rngVfxTl_; }
          set {
            rngVfxTl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "spell_rng_loop_tl" field.</summary>
        public const int SpellRngLoopTlFieldNumber = 13;
        private string spellRngLoopTl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SpellRngLoopTl {
          get { return spellRngLoopTl_; }
          set {
            spellRngLoopTl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "spell_rng_succeed_tl" field.</summary>
        public const int SpellRngSucceedTlFieldNumber = 14;
        private string spellRngSucceedTl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SpellRngSucceedTl {
          get { return spellRngSucceedTl_; }
          set {
            spellRngSucceedTl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "spell_rng_fail_tl" field.</summary>
        public const int SpellRngFailTlFieldNumber = 15;
        private string spellRngFailTl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SpellRngFailTl {
          get { return spellRngFailTl_; }
          set {
            spellRngFailTl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientSpell);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientSpell other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if(!chargeUpEffect_.Equals(other.chargeUpEffect_)) return false;
          if (!Timelines.Equals(other.Timelines)) return false;
          if (!CriticalHits.Equals(other.CriticalHits)) return false;
          if (Pattern != other.Pattern) return false;
          if (GlyphImage != other.GlyphImage) return false;
          if (ProtegoPlayerSucceedTl != other.ProtegoPlayerSucceedTl) return false;
          if (ProtegoPlayerFailedTl != other.ProtegoPlayerFailedTl) return false;
          if (ProtegoPlayerSucceedIntroTl != other.ProtegoPlayerSucceedIntroTl) return false;
          if (EndBurstEffect != other.EndBurstEffect) return false;
          if (RngVfxTl != other.RngVfxTl) return false;
          if (SpellRngLoopTl != other.SpellRngLoopTl) return false;
          if (SpellRngSucceedTl != other.SpellRngSucceedTl) return false;
          if (SpellRngFailTl != other.SpellRngFailTl) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          hash ^= chargeUpEffect_.GetHashCode();
          hash ^= Timelines.GetHashCode();
          hash ^= CriticalHits.GetHashCode();
          if (Pattern.Length != 0) hash ^= Pattern.GetHashCode();
          if (GlyphImage.Length != 0) hash ^= GlyphImage.GetHashCode();
          if (ProtegoPlayerSucceedTl.Length != 0) hash ^= ProtegoPlayerSucceedTl.GetHashCode();
          if (ProtegoPlayerFailedTl.Length != 0) hash ^= ProtegoPlayerFailedTl.GetHashCode();
          if (ProtegoPlayerSucceedIntroTl.Length != 0) hash ^= ProtegoPlayerSucceedIntroTl.GetHashCode();
          if (EndBurstEffect.Length != 0) hash ^= EndBurstEffect.GetHashCode();
          if (RngVfxTl.Length != 0) hash ^= RngVfxTl.GetHashCode();
          if (SpellRngLoopTl.Length != 0) hash ^= SpellRngLoopTl.GetHashCode();
          if (SpellRngSucceedTl.Length != 0) hash ^= SpellRngSucceedTl.GetHashCode();
          if (SpellRngFailTl.Length != 0) hash ^= SpellRngFailTl.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          chargeUpEffect_.WriteTo(output, _repeated_chargeUpEffect_codec);
          timelines_.WriteTo(output, _map_timelines_codec);
          criticalHits_.WriteTo(output, _map_criticalHits_codec);
          if (Pattern.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Pattern);
          }
          if (GlyphImage.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(GlyphImage);
          }
          if (ProtegoPlayerSucceedTl.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(ProtegoPlayerSucceedTl);
          }
          if (ProtegoPlayerFailedTl.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(ProtegoPlayerFailedTl);
          }
          if (ProtegoPlayerSucceedIntroTl.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(ProtegoPlayerSucceedIntroTl);
          }
          if (EndBurstEffect.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(EndBurstEffect);
          }
          if (RngVfxTl.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(RngVfxTl);
          }
          if (SpellRngLoopTl.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(SpellRngLoopTl);
          }
          if (SpellRngSucceedTl.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(SpellRngSucceedTl);
          }
          if (SpellRngFailTl.Length != 0) {
            output.WriteRawTag(122);
            output.WriteString(SpellRngFailTl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          size += chargeUpEffect_.CalculateSize(_repeated_chargeUpEffect_codec);
          size += timelines_.CalculateSize(_map_timelines_codec);
          size += criticalHits_.CalculateSize(_map_criticalHits_codec);
          if (Pattern.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Pattern);
          }
          if (GlyphImage.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(GlyphImage);
          }
          if (ProtegoPlayerSucceedTl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ProtegoPlayerSucceedTl);
          }
          if (ProtegoPlayerFailedTl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ProtegoPlayerFailedTl);
          }
          if (ProtegoPlayerSucceedIntroTl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ProtegoPlayerSucceedIntroTl);
          }
          if (EndBurstEffect.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EndBurstEffect);
          }
          if (RngVfxTl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RngVfxTl);
          }
          if (SpellRngLoopTl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SpellRngLoopTl);
          }
          if (SpellRngSucceedTl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SpellRngSucceedTl);
          }
          if (SpellRngFailTl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SpellRngFailTl);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientSpell other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          chargeUpEffect_.Add(other.chargeUpEffect_);
          timelines_.Add(other.timelines_);
          criticalHits_.Add(other.criticalHits_);
          if (other.Pattern.Length != 0) {
            Pattern = other.Pattern;
          }
          if (other.GlyphImage.Length != 0) {
            GlyphImage = other.GlyphImage;
          }
          if (other.ProtegoPlayerSucceedTl.Length != 0) {
            ProtegoPlayerSucceedTl = other.ProtegoPlayerSucceedTl;
          }
          if (other.ProtegoPlayerFailedTl.Length != 0) {
            ProtegoPlayerFailedTl = other.ProtegoPlayerFailedTl;
          }
          if (other.ProtegoPlayerSucceedIntroTl.Length != 0) {
            ProtegoPlayerSucceedIntroTl = other.ProtegoPlayerSucceedIntroTl;
          }
          if (other.EndBurstEffect.Length != 0) {
            EndBurstEffect = other.EndBurstEffect;
          }
          if (other.RngVfxTl.Length != 0) {
            RngVfxTl = other.RngVfxTl;
          }
          if (other.SpellRngLoopTl.Length != 0) {
            SpellRngLoopTl = other.SpellRngLoopTl;
          }
          if (other.SpellRngSucceedTl.Length != 0) {
            SpellRngSucceedTl = other.SpellRngSucceedTl;
          }
          if (other.SpellRngFailTl.Length != 0) {
            SpellRngFailTl = other.SpellRngFailTl;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                chargeUpEffect_.AddEntriesFrom(input, _repeated_chargeUpEffect_codec);
                break;
              }
              case 34: {
                timelines_.AddEntriesFrom(input, _map_timelines_codec);
                break;
              }
              case 42: {
                criticalHits_.AddEntriesFrom(input, _map_criticalHits_codec);
                break;
              }
              case 50: {
                Pattern = input.ReadString();
                break;
              }
              case 58: {
                GlyphImage = input.ReadString();
                break;
              }
              case 66: {
                ProtegoPlayerSucceedTl = input.ReadString();
                break;
              }
              case 74: {
                ProtegoPlayerFailedTl = input.ReadString();
                break;
              }
              case 82: {
                ProtegoPlayerSucceedIntroTl = input.ReadString();
                break;
              }
              case 90: {
                EndBurstEffect = input.ReadString();
                break;
              }
              case 98: {
                RngVfxTl = input.ReadString();
                break;
              }
              case 106: {
                SpellRngLoopTl = input.ReadString();
                break;
              }
              case 114: {
                SpellRngSucceedTl = input.ReadString();
                break;
              }
              case 122: {
                SpellRngFailTl = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientTeamControl : pb::IMessage<ClientTeamControl> {
        private static readonly pb::MessageParser<ClientTeamControl> _parser = new pb::MessageParser<ClientTeamControl>(() => new ClientTeamControl());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientTeamControl> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientTeamControl() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientTeamControl(ClientTeamControl other) : this() {
          id_ = other.id_;
          teamName_ = other.teamName_;
          teamIcon_ = other.teamIcon_;
          teamColor_ = other.teamColor_ != null ? other.teamColor_.Clone() : null;
          teamHeaderIcon_ = other.teamHeaderIcon_;
          teamBanner_ = other.teamBanner_;
          teamFlag_ = other.teamFlag_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientTeamControl Clone() {
          return new ClientTeamControl(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "team_name" field.</summary>
        public const int TeamNameFieldNumber = 2;
        private string teamName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TeamName {
          get { return teamName_; }
          set {
            teamName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "team_icon" field.</summary>
        public const int TeamIconFieldNumber = 3;
        private string teamIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TeamIcon {
          get { return teamIcon_; }
          set {
            teamIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "team_color" field.</summary>
        public const int TeamColorFieldNumber = 4;
        private global::WUProtos.Data.Color teamColor_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color TeamColor {
          get { return teamColor_; }
          set {
            teamColor_ = value;
          }
        }

        /// <summary>Field number for the "team_header_icon" field.</summary>
        public const int TeamHeaderIconFieldNumber = 5;
        private string teamHeaderIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TeamHeaderIcon {
          get { return teamHeaderIcon_; }
          set {
            teamHeaderIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "team_banner" field.</summary>
        public const int TeamBannerFieldNumber = 6;
        private string teamBanner_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TeamBanner {
          get { return teamBanner_; }
          set {
            teamBanner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "team_flag" field.</summary>
        public const int TeamFlagFieldNumber = 7;
        private string teamFlag_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TeamFlag {
          get { return teamFlag_; }
          set {
            teamFlag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientTeamControl);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientTeamControl other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (TeamName != other.TeamName) return false;
          if (TeamIcon != other.TeamIcon) return false;
          if (!object.Equals(TeamColor, other.TeamColor)) return false;
          if (TeamHeaderIcon != other.TeamHeaderIcon) return false;
          if (TeamBanner != other.TeamBanner) return false;
          if (TeamFlag != other.TeamFlag) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (TeamName.Length != 0) hash ^= TeamName.GetHashCode();
          if (TeamIcon.Length != 0) hash ^= TeamIcon.GetHashCode();
          if (teamColor_ != null) hash ^= TeamColor.GetHashCode();
          if (TeamHeaderIcon.Length != 0) hash ^= TeamHeaderIcon.GetHashCode();
          if (TeamBanner.Length != 0) hash ^= TeamBanner.GetHashCode();
          if (TeamFlag.Length != 0) hash ^= TeamFlag.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (TeamName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TeamName);
          }
          if (TeamIcon.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(TeamIcon);
          }
          if (teamColor_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(TeamColor);
          }
          if (TeamHeaderIcon.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(TeamHeaderIcon);
          }
          if (TeamBanner.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(TeamBanner);
          }
          if (TeamFlag.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(TeamFlag);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (TeamName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamName);
          }
          if (TeamIcon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamIcon);
          }
          if (teamColor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TeamColor);
          }
          if (TeamHeaderIcon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamHeaderIcon);
          }
          if (TeamBanner.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamBanner);
          }
          if (TeamFlag.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamFlag);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientTeamControl other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.TeamName.Length != 0) {
            TeamName = other.TeamName;
          }
          if (other.TeamIcon.Length != 0) {
            TeamIcon = other.TeamIcon;
          }
          if (other.teamColor_ != null) {
            if (teamColor_ == null) {
              TeamColor = new global::WUProtos.Data.Color();
            }
            TeamColor.MergeFrom(other.TeamColor);
          }
          if (other.TeamHeaderIcon.Length != 0) {
            TeamHeaderIcon = other.TeamHeaderIcon;
          }
          if (other.TeamBanner.Length != 0) {
            TeamBanner = other.TeamBanner;
          }
          if (other.TeamFlag.Length != 0) {
            TeamFlag = other.TeamFlag;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                TeamName = input.ReadString();
                break;
              }
              case 26: {
                TeamIcon = input.ReadString();
                break;
              }
              case 34: {
                if (teamColor_ == null) {
                  TeamColor = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(TeamColor);
                break;
              }
              case 42: {
                TeamHeaderIcon = input.ReadString();
                break;
              }
              case 50: {
                TeamBanner = input.ReadString();
                break;
              }
              case 58: {
                TeamFlag = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientSelfieAvatarAsset : pb::IMessage<ClientSelfieAvatarAsset> {
        private static readonly pb::MessageParser<ClientSelfieAvatarAsset> _parser = new pb::MessageParser<ClientSelfieAvatarAsset>(() => new ClientSelfieAvatarAsset());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientSelfieAvatarAsset> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientSelfieAvatarAsset() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientSelfieAvatarAsset(ClientSelfieAvatarAsset other) : this() {
          id_ = other.id_;
          unlockConditions_ = other.unlockConditions_.Clone();
          assetScriptName_ = other.assetScriptName_;
          icon_ = other.icon_;
          assetType_ = other.assetType_;
          lensType_ = other.lensType_;
          visible_ = other.visible_;
          mediaSupportedType_ = other.mediaSupportedType_;
          animated_ = other.animated_;
          storePackId_ = other.storePackId_;
          orderId_ = other.orderId_;
          isFullBodyLens_ = other.isFullBodyLens_;
          isEmptyAsset_ = other.isEmptyAsset_;
          showBadge_ = other.showBadge_;
          visibilityConditions_ = other.visibilityConditions_ != null ? other.visibilityConditions_.Clone() : null;
          stockAssetName_ = other.stockAssetName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientSelfieAvatarAsset Clone() {
          return new ClientSelfieAvatarAsset(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "unlock_conditions" field.</summary>
        public const int UnlockConditionsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Requirements> _repeated_unlockConditions_codec
            = pb::FieldCodec.ForMessage(18, global::WUProtos.Data.Requirements.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Requirements> unlockConditions_ = new pbc::RepeatedField<global::WUProtos.Data.Requirements>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Requirements> UnlockConditions {
          get { return unlockConditions_; }
        }

        /// <summary>Field number for the "asset_script_name" field.</summary>
        public const int AssetScriptNameFieldNumber = 3;
        private string assetScriptName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AssetScriptName {
          get { return assetScriptName_; }
          set {
            assetScriptName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "icon" field.</summary>
        public const int IconFieldNumber = 4;
        private string icon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Icon {
          get { return icon_; }
          set {
            icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "asset_type" field.</summary>
        public const int AssetTypeFieldNumber = 5;
        private global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset.Types.SelfieAvatarAssetType assetType_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset.Types.SelfieAvatarAssetType AssetType {
          get { return assetType_; }
          set {
            assetType_ = value;
          }
        }

        /// <summary>Field number for the "lens_type" field.</summary>
        public const int LensTypeFieldNumber = 6;
        private global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset.Types.SelfieAvatarLensType lensType_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset.Types.SelfieAvatarLensType LensType {
          get { return lensType_; }
          set {
            lensType_ = value;
          }
        }

        /// <summary>Field number for the "visible" field.</summary>
        public const int VisibleFieldNumber = 7;
        private bool visible_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Visible {
          get { return visible_; }
          set {
            visible_ = value;
          }
        }

        /// <summary>Field number for the "media_supported_type" field.</summary>
        public const int MediaSupportedTypeFieldNumber = 8;
        private global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset.Types.SelfieAvatarMediaSupportedType mediaSupportedType_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset.Types.SelfieAvatarMediaSupportedType MediaSupportedType {
          get { return mediaSupportedType_; }
          set {
            mediaSupportedType_ = value;
          }
        }

        /// <summary>Field number for the "animated" field.</summary>
        public const int AnimatedFieldNumber = 9;
        private bool animated_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Animated {
          get { return animated_; }
          set {
            animated_ = value;
          }
        }

        /// <summary>Field number for the "store_pack_id" field.</summary>
        public const int StorePackIdFieldNumber = 10;
        private string storePackId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StorePackId {
          get { return storePackId_; }
          set {
            storePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "order_id" field.</summary>
        public const int OrderIdFieldNumber = 11;
        private int orderId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrderId {
          get { return orderId_; }
          set {
            orderId_ = value;
          }
        }

        /// <summary>Field number for the "is_full_body_lens" field.</summary>
        public const int IsFullBodyLensFieldNumber = 12;
        private bool isFullBodyLens_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsFullBodyLens {
          get { return isFullBodyLens_; }
          set {
            isFullBodyLens_ = value;
          }
        }

        /// <summary>Field number for the "is_empty_asset" field.</summary>
        public const int IsEmptyAssetFieldNumber = 13;
        private bool isEmptyAsset_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsEmptyAsset {
          get { return isEmptyAsset_; }
          set {
            isEmptyAsset_ = value;
          }
        }

        /// <summary>Field number for the "show_badge" field.</summary>
        public const int ShowBadgeFieldNumber = 14;
        private bool showBadge_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ShowBadge {
          get { return showBadge_; }
          set {
            showBadge_ = value;
          }
        }

        /// <summary>Field number for the "visibility_conditions" field.</summary>
        public const int VisibilityConditionsFieldNumber = 15;
        private global::WUProtos.Data.Requirements visibilityConditions_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements VisibilityConditions {
          get { return visibilityConditions_; }
          set {
            visibilityConditions_ = value;
          }
        }

        /// <summary>Field number for the "stock_asset_name" field.</summary>
        public const int StockAssetNameFieldNumber = 16;
        private string stockAssetName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StockAssetName {
          get { return stockAssetName_; }
          set {
            stockAssetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientSelfieAvatarAsset);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientSelfieAvatarAsset other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if(!unlockConditions_.Equals(other.unlockConditions_)) return false;
          if (AssetScriptName != other.AssetScriptName) return false;
          if (Icon != other.Icon) return false;
          if (AssetType != other.AssetType) return false;
          if (LensType != other.LensType) return false;
          if (Visible != other.Visible) return false;
          if (MediaSupportedType != other.MediaSupportedType) return false;
          if (Animated != other.Animated) return false;
          if (StorePackId != other.StorePackId) return false;
          if (OrderId != other.OrderId) return false;
          if (IsFullBodyLens != other.IsFullBodyLens) return false;
          if (IsEmptyAsset != other.IsEmptyAsset) return false;
          if (ShowBadge != other.ShowBadge) return false;
          if (!object.Equals(VisibilityConditions, other.VisibilityConditions)) return false;
          if (StockAssetName != other.StockAssetName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          hash ^= unlockConditions_.GetHashCode();
          if (AssetScriptName.Length != 0) hash ^= AssetScriptName.GetHashCode();
          if (Icon.Length != 0) hash ^= Icon.GetHashCode();
          if (AssetType != 0) hash ^= AssetType.GetHashCode();
          if (LensType != 0) hash ^= LensType.GetHashCode();
          if (Visible != false) hash ^= Visible.GetHashCode();
          if (MediaSupportedType != 0) hash ^= MediaSupportedType.GetHashCode();
          if (Animated != false) hash ^= Animated.GetHashCode();
          if (StorePackId.Length != 0) hash ^= StorePackId.GetHashCode();
          if (OrderId != 0) hash ^= OrderId.GetHashCode();
          if (IsFullBodyLens != false) hash ^= IsFullBodyLens.GetHashCode();
          if (IsEmptyAsset != false) hash ^= IsEmptyAsset.GetHashCode();
          if (ShowBadge != false) hash ^= ShowBadge.GetHashCode();
          if (visibilityConditions_ != null) hash ^= VisibilityConditions.GetHashCode();
          if (StockAssetName.Length != 0) hash ^= StockAssetName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          unlockConditions_.WriteTo(output, _repeated_unlockConditions_codec);
          if (AssetScriptName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(AssetScriptName);
          }
          if (Icon.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Icon);
          }
          if (AssetType != 0) {
            output.WriteRawTag(40);
            output.WriteEnum((int) AssetType);
          }
          if (LensType != 0) {
            output.WriteRawTag(48);
            output.WriteEnum((int) LensType);
          }
          if (Visible != false) {
            output.WriteRawTag(56);
            output.WriteBool(Visible);
          }
          if (MediaSupportedType != 0) {
            output.WriteRawTag(64);
            output.WriteEnum((int) MediaSupportedType);
          }
          if (Animated != false) {
            output.WriteRawTag(72);
            output.WriteBool(Animated);
          }
          if (StorePackId.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(StorePackId);
          }
          if (OrderId != 0) {
            output.WriteRawTag(88);
            output.WriteInt32(OrderId);
          }
          if (IsFullBodyLens != false) {
            output.WriteRawTag(96);
            output.WriteBool(IsFullBodyLens);
          }
          if (IsEmptyAsset != false) {
            output.WriteRawTag(104);
            output.WriteBool(IsEmptyAsset);
          }
          if (ShowBadge != false) {
            output.WriteRawTag(112);
            output.WriteBool(ShowBadge);
          }
          if (visibilityConditions_ != null) {
            output.WriteRawTag(122);
            output.WriteMessage(VisibilityConditions);
          }
          if (StockAssetName.Length != 0) {
            output.WriteRawTag(130, 1);
            output.WriteString(StockAssetName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          size += unlockConditions_.CalculateSize(_repeated_unlockConditions_codec);
          if (AssetScriptName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetScriptName);
          }
          if (Icon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
          }
          if (AssetType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AssetType);
          }
          if (LensType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LensType);
          }
          if (Visible != false) {
            size += 1 + 1;
          }
          if (MediaSupportedType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MediaSupportedType);
          }
          if (Animated != false) {
            size += 1 + 1;
          }
          if (StorePackId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StorePackId);
          }
          if (OrderId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrderId);
          }
          if (IsFullBodyLens != false) {
            size += 1 + 1;
          }
          if (IsEmptyAsset != false) {
            size += 1 + 1;
          }
          if (ShowBadge != false) {
            size += 1 + 1;
          }
          if (visibilityConditions_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(VisibilityConditions);
          }
          if (StockAssetName.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(StockAssetName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientSelfieAvatarAsset other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          unlockConditions_.Add(other.unlockConditions_);
          if (other.AssetScriptName.Length != 0) {
            AssetScriptName = other.AssetScriptName;
          }
          if (other.Icon.Length != 0) {
            Icon = other.Icon;
          }
          if (other.AssetType != 0) {
            AssetType = other.AssetType;
          }
          if (other.LensType != 0) {
            LensType = other.LensType;
          }
          if (other.Visible != false) {
            Visible = other.Visible;
          }
          if (other.MediaSupportedType != 0) {
            MediaSupportedType = other.MediaSupportedType;
          }
          if (other.Animated != false) {
            Animated = other.Animated;
          }
          if (other.StorePackId.Length != 0) {
            StorePackId = other.StorePackId;
          }
          if (other.OrderId != 0) {
            OrderId = other.OrderId;
          }
          if (other.IsFullBodyLens != false) {
            IsFullBodyLens = other.IsFullBodyLens;
          }
          if (other.IsEmptyAsset != false) {
            IsEmptyAsset = other.IsEmptyAsset;
          }
          if (other.ShowBadge != false) {
            ShowBadge = other.ShowBadge;
          }
          if (other.visibilityConditions_ != null) {
            if (visibilityConditions_ == null) {
              VisibilityConditions = new global::WUProtos.Data.Requirements();
            }
            VisibilityConditions.MergeFrom(other.VisibilityConditions);
          }
          if (other.StockAssetName.Length != 0) {
            StockAssetName = other.StockAssetName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                unlockConditions_.AddEntriesFrom(input, _repeated_unlockConditions_codec);
                break;
              }
              case 26: {
                AssetScriptName = input.ReadString();
                break;
              }
              case 34: {
                Icon = input.ReadString();
                break;
              }
              case 40: {
                AssetType = (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset.Types.SelfieAvatarAssetType) input.ReadEnum();
                break;
              }
              case 48: {
                LensType = (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset.Types.SelfieAvatarLensType) input.ReadEnum();
                break;
              }
              case 56: {
                Visible = input.ReadBool();
                break;
              }
              case 64: {
                MediaSupportedType = (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientSelfieAvatarAsset.Types.SelfieAvatarMediaSupportedType) input.ReadEnum();
                break;
              }
              case 72: {
                Animated = input.ReadBool();
                break;
              }
              case 82: {
                StorePackId = input.ReadString();
                break;
              }
              case 88: {
                OrderId = input.ReadInt32();
                break;
              }
              case 96: {
                IsFullBodyLens = input.ReadBool();
                break;
              }
              case 104: {
                IsEmptyAsset = input.ReadBool();
                break;
              }
              case 112: {
                ShowBadge = input.ReadBool();
                break;
              }
              case 122: {
                if (visibilityConditions_ == null) {
                  VisibilityConditions = new global::WUProtos.Data.Requirements();
                }
                input.ReadMessage(VisibilityConditions);
                break;
              }
              case 130: {
                StockAssetName = input.ReadString();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ClientSelfieAvatarAsset message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum SelfieAvatarAssetType {
            [pbr::OriginalName("UNKNOWN_ASSET_TYPE")] UnknownAssetType = 0,
            [pbr::OriginalName("LENSE")] Lense = 1,
            [pbr::OriginalName("FILTER")] Filter = 2,
            [pbr::OriginalName("FRAME")] Frame = 3,
            [pbr::OriginalName("STICKER")] Sticker = 4,
            [pbr::OriginalName("STOCK")] Stock = 5,
          }

          public enum SelfieAvatarLensType {
            [pbr::OriginalName("UNKNOWN_LENS_TYPE")] UnknownLensType = 0,
            [pbr::OriginalName("HEAD")] Head = 1,
            [pbr::OriginalName("FACE")] Face = 2,
            [pbr::OriginalName("NECK")] Neck = 3,
          }

          public enum SelfieAvatarMediaSupportedType {
            [pbr::OriginalName("UNKNOWN_MEDIA_TYPE")] UnknownMediaType = 0,
            [pbr::OriginalName("ALL")] All = 1,
            [pbr::OriginalName("VIDEO")] Video = 2,
            [pbr::OriginalName("PHOTO")] Photo = 3,
          }

        }
        #endregion

      }

      public sealed partial class ClientRpgstatsBlock : pb::IMessage<ClientRpgstatsBlock> {
        private static readonly pb::MessageParser<ClientRpgstatsBlock> _parser = new pb::MessageParser<ClientRpgstatsBlock>(() => new ClientRpgstatsBlock());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientRpgstatsBlock> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientRpgstatsBlock() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientRpgstatsBlock(ClientRpgstatsBlock other) : this() {
          id_ = other.id_;
          relevantStats_ = other.relevantStats_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientRpgstatsBlock Clone() {
          return new ClientRpgstatsBlock(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "relevant_stats" field.</summary>
        public const int RelevantStatsFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_relevantStats_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> relevantStats_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> RelevantStats {
          get { return relevantStats_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientRpgstatsBlock);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientRpgstatsBlock other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if(!relevantStats_.Equals(other.relevantStats_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          hash ^= relevantStats_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          relevantStats_.WriteTo(output, _repeated_relevantStats_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          size += relevantStats_.CalculateSize(_repeated_relevantStats_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientRpgstatsBlock other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          relevantStats_.Add(other.relevantStats_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                relevantStats_.AddEntriesFrom(input, _repeated_relevantStats_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientStorePack : pb::IMessage<ClientStorePack> {
        private static readonly pb::MessageParser<ClientStorePack> _parser = new pb::MessageParser<ClientStorePack>(() => new ClientStorePack());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientStorePack> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientStorePack() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientStorePack(ClientStorePack other) : this() {
          id_ = other.id_;
          showInInlineBuy_ = other.showInInlineBuy_;
          name_ = other.name_;
          storePackConfig_ = other.storePackConfig_.Clone();
          skuId_ = other.skuId_;
          overrideTitleLocKey_ = other.overrideTitleLocKey_;
          maxRewardItemCount_ = other.maxRewardItemCount_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientStorePack Clone() {
          return new ClientStorePack(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "show_in_inline_buy" field.</summary>
        public const int ShowInInlineBuyFieldNumber = 2;
        private bool showInInlineBuy_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ShowInInlineBuy {
          get { return showInInlineBuy_; }
          set {
            showInInlineBuy_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 3;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "store_pack_config" field.</summary>
        public const int StorePackConfigFieldNumber = 4;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack.Types.StorePackConfig> _repeated_storePackConfig_codec
            = pb::FieldCodec.ForMessage(34, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack.Types.StorePackConfig.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack.Types.StorePackConfig> storePackConfig_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack.Types.StorePackConfig>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack.Types.StorePackConfig> StorePackConfig {
          get { return storePackConfig_; }
        }

        /// <summary>Field number for the "sku_id" field.</summary>
        public const int SkuIdFieldNumber = 5;
        private string skuId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SkuId {
          get { return skuId_; }
          set {
            skuId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "override_title_loc_key" field.</summary>
        public const int OverrideTitleLocKeyFieldNumber = 6;
        private string overrideTitleLocKey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OverrideTitleLocKey {
          get { return overrideTitleLocKey_; }
          set {
            overrideTitleLocKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "max_reward_item_count" field.</summary>
        public const int MaxRewardItemCountFieldNumber = 7;
        private int maxRewardItemCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int MaxRewardItemCount {
          get { return maxRewardItemCount_; }
          set {
            maxRewardItemCount_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientStorePack);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientStorePack other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (ShowInInlineBuy != other.ShowInInlineBuy) return false;
          if (Name != other.Name) return false;
          if(!storePackConfig_.Equals(other.storePackConfig_)) return false;
          if (SkuId != other.SkuId) return false;
          if (OverrideTitleLocKey != other.OverrideTitleLocKey) return false;
          if (MaxRewardItemCount != other.MaxRewardItemCount) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (ShowInInlineBuy != false) hash ^= ShowInInlineBuy.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          hash ^= storePackConfig_.GetHashCode();
          if (SkuId.Length != 0) hash ^= SkuId.GetHashCode();
          if (OverrideTitleLocKey.Length != 0) hash ^= OverrideTitleLocKey.GetHashCode();
          if (MaxRewardItemCount != 0) hash ^= MaxRewardItemCount.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (ShowInInlineBuy != false) {
            output.WriteRawTag(16);
            output.WriteBool(ShowInInlineBuy);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          storePackConfig_.WriteTo(output, _repeated_storePackConfig_codec);
          if (SkuId.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(SkuId);
          }
          if (OverrideTitleLocKey.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(OverrideTitleLocKey);
          }
          if (MaxRewardItemCount != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(MaxRewardItemCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (ShowInInlineBuy != false) {
            size += 1 + 1;
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          size += storePackConfig_.CalculateSize(_repeated_storePackConfig_codec);
          if (SkuId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SkuId);
          }
          if (OverrideTitleLocKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OverrideTitleLocKey);
          }
          if (MaxRewardItemCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxRewardItemCount);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientStorePack other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.ShowInInlineBuy != false) {
            ShowInInlineBuy = other.ShowInInlineBuy;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          storePackConfig_.Add(other.storePackConfig_);
          if (other.SkuId.Length != 0) {
            SkuId = other.SkuId;
          }
          if (other.OverrideTitleLocKey.Length != 0) {
            OverrideTitleLocKey = other.OverrideTitleLocKey;
          }
          if (other.MaxRewardItemCount != 0) {
            MaxRewardItemCount = other.MaxRewardItemCount;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 16: {
                ShowInInlineBuy = input.ReadBool();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
              case 34: {
                storePackConfig_.AddEntriesFrom(input, _repeated_storePackConfig_codec);
                break;
              }
              case 42: {
                SkuId = input.ReadString();
                break;
              }
              case 50: {
                OverrideTitleLocKey = input.ReadString();
                break;
              }
              case 56: {
                MaxRewardItemCount = input.ReadInt32();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ClientStorePack message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class StorePackConfig : pb::IMessage<StorePackConfig> {
            private static readonly pb::MessageParser<StorePackConfig> _parser = new pb::MessageParser<StorePackConfig>(() => new StorePackConfig());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<StorePackConfig> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public StorePackConfig() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public StorePackConfig(StorePackConfig other) : this() {
              priority_ = other.priority_;
              subcategoryId_ = other.subcategoryId_;
              iconPath_ = other.iconPath_;
              showQuantityBanner_ = other.showQuantityBanner_;
              quantityOverride_ = other.quantityOverride_;
              prefabPath_ = other.prefabPath_;
              marketingText_ = other.marketingText_;
              descriptionText_ = other.descriptionText_;
              showBadge_ = other.showBadge_;
              bonusValue_ = other.bonusValue_;
              rarityId_ = other.rarityId_;
              packSize_ = other.packSize_;
              showInHud_ = other.showInHud_;
              hudPriority_ = other.hudPriority_;
              hudIconPath_ = other.hudIconPath_;
              icon2Path_ = other.icon2Path_;
              popupImageOverride_ = other.popupImageOverride_;
              hidePackOnSoldOut_ = other.hidePackOnSoldOut_;
              hidePackOnMapHudClick_ = other.hidePackOnMapHudClick_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public StorePackConfig Clone() {
              return new StorePackConfig(this);
            }

            /// <summary>Field number for the "priority" field.</summary>
            public const int PriorityFieldNumber = 1;
            private int priority_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int Priority {
              get { return priority_; }
              set {
                priority_ = value;
              }
            }

            /// <summary>Field number for the "subcategory_id" field.</summary>
            public const int SubcategoryIdFieldNumber = 2;
            private string subcategoryId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string SubcategoryId {
              get { return subcategoryId_; }
              set {
                subcategoryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "icon_path" field.</summary>
            public const int IconPathFieldNumber = 3;
            private string iconPath_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string IconPath {
              get { return iconPath_; }
              set {
                iconPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "show_quantity_banner" field.</summary>
            public const int ShowQuantityBannerFieldNumber = 4;
            private bool showQuantityBanner_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool ShowQuantityBanner {
              get { return showQuantityBanner_; }
              set {
                showQuantityBanner_ = value;
              }
            }

            /// <summary>Field number for the "quantity_override" field.</summary>
            public const int QuantityOverrideFieldNumber = 5;
            private string quantityOverride_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string QuantityOverride {
              get { return quantityOverride_; }
              set {
                quantityOverride_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "prefab_path" field.</summary>
            public const int PrefabPathFieldNumber = 6;
            private string prefabPath_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string PrefabPath {
              get { return prefabPath_; }
              set {
                prefabPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "marketing_text" field.</summary>
            public const int MarketingTextFieldNumber = 7;
            private string marketingText_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string MarketingText {
              get { return marketingText_; }
              set {
                marketingText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "description_text" field.</summary>
            public const int DescriptionTextFieldNumber = 8;
            private string descriptionText_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string DescriptionText {
              get { return descriptionText_; }
              set {
                descriptionText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "show_badge" field.</summary>
            public const int ShowBadgeFieldNumber = 9;
            private bool showBadge_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool ShowBadge {
              get { return showBadge_; }
              set {
                showBadge_ = value;
              }
            }

            /// <summary>Field number for the "bonus_value" field.</summary>
            public const int BonusValueFieldNumber = 10;
            private int bonusValue_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int BonusValue {
              get { return bonusValue_; }
              set {
                bonusValue_ = value;
              }
            }

            /// <summary>Field number for the "rarity_id" field.</summary>
            public const int RarityIdFieldNumber = 11;
            private string rarityId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string RarityId {
              get { return rarityId_; }
              set {
                rarityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "pack_size" field.</summary>
            public const int PackSizeFieldNumber = 12;
            private global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack.Types.StorePackConfig.Types.StorePackConfigSize packSize_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack.Types.StorePackConfig.Types.StorePackConfigSize PackSize {
              get { return packSize_; }
              set {
                packSize_ = value;
              }
            }

            /// <summary>Field number for the "show_in_hud" field.</summary>
            public const int ShowInHudFieldNumber = 13;
            private bool showInHud_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool ShowInHud {
              get { return showInHud_; }
              set {
                showInHud_ = value;
              }
            }

            /// <summary>Field number for the "hud_priority" field.</summary>
            public const int HudPriorityFieldNumber = 14;
            private int hudPriority_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int HudPriority {
              get { return hudPriority_; }
              set {
                hudPriority_ = value;
              }
            }

            /// <summary>Field number for the "hud_icon_path" field.</summary>
            public const int HudIconPathFieldNumber = 15;
            private string hudIconPath_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string HudIconPath {
              get { return hudIconPath_; }
              set {
                hudIconPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "icon2_path" field.</summary>
            public const int Icon2PathFieldNumber = 16;
            private string icon2Path_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Icon2Path {
              get { return icon2Path_; }
              set {
                icon2Path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "popup_image_override" field.</summary>
            public const int PopupImageOverrideFieldNumber = 17;
            private string popupImageOverride_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string PopupImageOverride {
              get { return popupImageOverride_; }
              set {
                popupImageOverride_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "hide_pack_on_sold_out" field.</summary>
            public const int HidePackOnSoldOutFieldNumber = 18;
            private bool hidePackOnSoldOut_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HidePackOnSoldOut {
              get { return hidePackOnSoldOut_; }
              set {
                hidePackOnSoldOut_ = value;
              }
            }

            /// <summary>Field number for the "hide_pack_on_map_hud_click" field.</summary>
            public const int HidePackOnMapHudClickFieldNumber = 19;
            private bool hidePackOnMapHudClick_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HidePackOnMapHudClick {
              get { return hidePackOnMapHudClick_; }
              set {
                hidePackOnMapHudClick_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as StorePackConfig);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(StorePackConfig other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Priority != other.Priority) return false;
              if (SubcategoryId != other.SubcategoryId) return false;
              if (IconPath != other.IconPath) return false;
              if (ShowQuantityBanner != other.ShowQuantityBanner) return false;
              if (QuantityOverride != other.QuantityOverride) return false;
              if (PrefabPath != other.PrefabPath) return false;
              if (MarketingText != other.MarketingText) return false;
              if (DescriptionText != other.DescriptionText) return false;
              if (ShowBadge != other.ShowBadge) return false;
              if (BonusValue != other.BonusValue) return false;
              if (RarityId != other.RarityId) return false;
              if (PackSize != other.PackSize) return false;
              if (ShowInHud != other.ShowInHud) return false;
              if (HudPriority != other.HudPriority) return false;
              if (HudIconPath != other.HudIconPath) return false;
              if (Icon2Path != other.Icon2Path) return false;
              if (PopupImageOverride != other.PopupImageOverride) return false;
              if (HidePackOnSoldOut != other.HidePackOnSoldOut) return false;
              if (HidePackOnMapHudClick != other.HidePackOnMapHudClick) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Priority != 0) hash ^= Priority.GetHashCode();
              if (SubcategoryId.Length != 0) hash ^= SubcategoryId.GetHashCode();
              if (IconPath.Length != 0) hash ^= IconPath.GetHashCode();
              if (ShowQuantityBanner != false) hash ^= ShowQuantityBanner.GetHashCode();
              if (QuantityOverride.Length != 0) hash ^= QuantityOverride.GetHashCode();
              if (PrefabPath.Length != 0) hash ^= PrefabPath.GetHashCode();
              if (MarketingText.Length != 0) hash ^= MarketingText.GetHashCode();
              if (DescriptionText.Length != 0) hash ^= DescriptionText.GetHashCode();
              if (ShowBadge != false) hash ^= ShowBadge.GetHashCode();
              if (BonusValue != 0) hash ^= BonusValue.GetHashCode();
              if (RarityId.Length != 0) hash ^= RarityId.GetHashCode();
              if (PackSize != 0) hash ^= PackSize.GetHashCode();
              if (ShowInHud != false) hash ^= ShowInHud.GetHashCode();
              if (HudPriority != 0) hash ^= HudPriority.GetHashCode();
              if (HudIconPath.Length != 0) hash ^= HudIconPath.GetHashCode();
              if (Icon2Path.Length != 0) hash ^= Icon2Path.GetHashCode();
              if (PopupImageOverride.Length != 0) hash ^= PopupImageOverride.GetHashCode();
              if (HidePackOnSoldOut != false) hash ^= HidePackOnSoldOut.GetHashCode();
              if (HidePackOnMapHudClick != false) hash ^= HidePackOnMapHudClick.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Priority != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(Priority);
              }
              if (SubcategoryId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(SubcategoryId);
              }
              if (IconPath.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(IconPath);
              }
              if (ShowQuantityBanner != false) {
                output.WriteRawTag(32);
                output.WriteBool(ShowQuantityBanner);
              }
              if (QuantityOverride.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(QuantityOverride);
              }
              if (PrefabPath.Length != 0) {
                output.WriteRawTag(50);
                output.WriteString(PrefabPath);
              }
              if (MarketingText.Length != 0) {
                output.WriteRawTag(58);
                output.WriteString(MarketingText);
              }
              if (DescriptionText.Length != 0) {
                output.WriteRawTag(66);
                output.WriteString(DescriptionText);
              }
              if (ShowBadge != false) {
                output.WriteRawTag(72);
                output.WriteBool(ShowBadge);
              }
              if (BonusValue != 0) {
                output.WriteRawTag(80);
                output.WriteInt32(BonusValue);
              }
              if (RarityId.Length != 0) {
                output.WriteRawTag(90);
                output.WriteString(RarityId);
              }
              if (PackSize != 0) {
                output.WriteRawTag(96);
                output.WriteEnum((int) PackSize);
              }
              if (ShowInHud != false) {
                output.WriteRawTag(104);
                output.WriteBool(ShowInHud);
              }
              if (HudPriority != 0) {
                output.WriteRawTag(112);
                output.WriteInt32(HudPriority);
              }
              if (HudIconPath.Length != 0) {
                output.WriteRawTag(122);
                output.WriteString(HudIconPath);
              }
              if (Icon2Path.Length != 0) {
                output.WriteRawTag(130, 1);
                output.WriteString(Icon2Path);
              }
              if (PopupImageOverride.Length != 0) {
                output.WriteRawTag(138, 1);
                output.WriteString(PopupImageOverride);
              }
              if (HidePackOnSoldOut != false) {
                output.WriteRawTag(144, 1);
                output.WriteBool(HidePackOnSoldOut);
              }
              if (HidePackOnMapHudClick != false) {
                output.WriteRawTag(152, 1);
                output.WriteBool(HidePackOnMapHudClick);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Priority != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
              }
              if (SubcategoryId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SubcategoryId);
              }
              if (IconPath.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(IconPath);
              }
              if (ShowQuantityBanner != false) {
                size += 1 + 1;
              }
              if (QuantityOverride.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(QuantityOverride);
              }
              if (PrefabPath.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(PrefabPath);
              }
              if (MarketingText.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketingText);
              }
              if (DescriptionText.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionText);
              }
              if (ShowBadge != false) {
                size += 1 + 1;
              }
              if (BonusValue != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(BonusValue);
              }
              if (RarityId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(RarityId);
              }
              if (PackSize != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PackSize);
              }
              if (ShowInHud != false) {
                size += 1 + 1;
              }
              if (HudPriority != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(HudPriority);
              }
              if (HudIconPath.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(HudIconPath);
              }
              if (Icon2Path.Length != 0) {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(Icon2Path);
              }
              if (PopupImageOverride.Length != 0) {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(PopupImageOverride);
              }
              if (HidePackOnSoldOut != false) {
                size += 2 + 1;
              }
              if (HidePackOnMapHudClick != false) {
                size += 2 + 1;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(StorePackConfig other) {
              if (other == null) {
                return;
              }
              if (other.Priority != 0) {
                Priority = other.Priority;
              }
              if (other.SubcategoryId.Length != 0) {
                SubcategoryId = other.SubcategoryId;
              }
              if (other.IconPath.Length != 0) {
                IconPath = other.IconPath;
              }
              if (other.ShowQuantityBanner != false) {
                ShowQuantityBanner = other.ShowQuantityBanner;
              }
              if (other.QuantityOverride.Length != 0) {
                QuantityOverride = other.QuantityOverride;
              }
              if (other.PrefabPath.Length != 0) {
                PrefabPath = other.PrefabPath;
              }
              if (other.MarketingText.Length != 0) {
                MarketingText = other.MarketingText;
              }
              if (other.DescriptionText.Length != 0) {
                DescriptionText = other.DescriptionText;
              }
              if (other.ShowBadge != false) {
                ShowBadge = other.ShowBadge;
              }
              if (other.BonusValue != 0) {
                BonusValue = other.BonusValue;
              }
              if (other.RarityId.Length != 0) {
                RarityId = other.RarityId;
              }
              if (other.PackSize != 0) {
                PackSize = other.PackSize;
              }
              if (other.ShowInHud != false) {
                ShowInHud = other.ShowInHud;
              }
              if (other.HudPriority != 0) {
                HudPriority = other.HudPriority;
              }
              if (other.HudIconPath.Length != 0) {
                HudIconPath = other.HudIconPath;
              }
              if (other.Icon2Path.Length != 0) {
                Icon2Path = other.Icon2Path;
              }
              if (other.PopupImageOverride.Length != 0) {
                PopupImageOverride = other.PopupImageOverride;
              }
              if (other.HidePackOnSoldOut != false) {
                HidePackOnSoldOut = other.HidePackOnSoldOut;
              }
              if (other.HidePackOnMapHudClick != false) {
                HidePackOnMapHudClick = other.HidePackOnMapHudClick;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Priority = input.ReadInt32();
                    break;
                  }
                  case 18: {
                    SubcategoryId = input.ReadString();
                    break;
                  }
                  case 26: {
                    IconPath = input.ReadString();
                    break;
                  }
                  case 32: {
                    ShowQuantityBanner = input.ReadBool();
                    break;
                  }
                  case 42: {
                    QuantityOverride = input.ReadString();
                    break;
                  }
                  case 50: {
                    PrefabPath = input.ReadString();
                    break;
                  }
                  case 58: {
                    MarketingText = input.ReadString();
                    break;
                  }
                  case 66: {
                    DescriptionText = input.ReadString();
                    break;
                  }
                  case 72: {
                    ShowBadge = input.ReadBool();
                    break;
                  }
                  case 80: {
                    BonusValue = input.ReadInt32();
                    break;
                  }
                  case 90: {
                    RarityId = input.ReadString();
                    break;
                  }
                  case 96: {
                    PackSize = (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStorePack.Types.StorePackConfig.Types.StorePackConfigSize) input.ReadEnum();
                    break;
                  }
                  case 104: {
                    ShowInHud = input.ReadBool();
                    break;
                  }
                  case 112: {
                    HudPriority = input.ReadInt32();
                    break;
                  }
                  case 122: {
                    HudIconPath = input.ReadString();
                    break;
                  }
                  case 130: {
                    Icon2Path = input.ReadString();
                    break;
                  }
                  case 138: {
                    PopupImageOverride = input.ReadString();
                    break;
                  }
                  case 144: {
                    HidePackOnSoldOut = input.ReadBool();
                    break;
                  }
                  case 152: {
                    HidePackOnMapHudClick = input.ReadBool();
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the StorePackConfig message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum StorePackConfigSize {
                [pbr::OriginalName("SIZE_SMALL")] SizeSmall = 0,
                [pbr::OriginalName("SIZE_MEDIUM")] SizeMedium = 1,
                [pbr::OriginalName("SIZE_LARGE")] SizeLarge = 2,
              }

            }
            #endregion

          }

        }
        #endregion

      }

      public sealed partial class ClientStoryboard : pb::IMessage<ClientStoryboard> {
        private static readonly pb::MessageParser<ClientStoryboard> _parser = new pb::MessageParser<ClientStoryboard>(() => new ClientStoryboard());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientStoryboard> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientStoryboard() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientStoryboard(ClientStoryboard other) : this() {
          id_ = other.id_;
          steps_ = other.steps_.Clone();
          triggerPoint_ = other.triggerPoint_;
          priority_ = other.priority_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientStoryboard Clone() {
          return new ClientStoryboard(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "steps" field.</summary>
        public const int StepsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep> _repeated_steps_codec
            = pb::FieldCodec.ForMessage(18, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep> steps_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep> Steps {
          get { return steps_; }
        }

        /// <summary>Field number for the "trigger_point" field.</summary>
        public const int TriggerPointFieldNumber = 3;
        private string triggerPoint_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TriggerPoint {
          get { return triggerPoint_; }
          set {
            triggerPoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "priority" field.</summary>
        public const int PriorityFieldNumber = 4;
        private int priority_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Priority {
          get { return priority_; }
          set {
            priority_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientStoryboard);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientStoryboard other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if(!steps_.Equals(other.steps_)) return false;
          if (TriggerPoint != other.TriggerPoint) return false;
          if (Priority != other.Priority) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          hash ^= steps_.GetHashCode();
          if (TriggerPoint.Length != 0) hash ^= TriggerPoint.GetHashCode();
          if (Priority != 0) hash ^= Priority.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          steps_.WriteTo(output, _repeated_steps_codec);
          if (TriggerPoint.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(TriggerPoint);
          }
          if (Priority != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Priority);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          size += steps_.CalculateSize(_repeated_steps_codec);
          if (TriggerPoint.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerPoint);
          }
          if (Priority != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientStoryboard other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          steps_.Add(other.steps_);
          if (other.TriggerPoint.Length != 0) {
            TriggerPoint = other.TriggerPoint;
          }
          if (other.Priority != 0) {
            Priority = other.Priority;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                steps_.AddEntriesFrom(input, _repeated_steps_codec);
                break;
              }
              case 26: {
                TriggerPoint = input.ReadString();
                break;
              }
              case 32: {
                Priority = input.ReadInt32();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ClientStoryboard message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class ClientStoryboardStep : pb::IMessage<ClientStoryboardStep> {
            private static readonly pb::MessageParser<ClientStoryboardStep> _parser = new pb::MessageParser<ClientStoryboardStep>(() => new ClientStoryboardStep());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ClientStoryboardStep> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientStoryboardStep() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientStoryboardStep(ClientStoryboardStep other) : this() {
              customState_ = other.customState_;
              callToActionAsset_ = other.callToActionAsset_;
              callToActionButtonIdentifier_ = other.callToActionButtonIdentifier_;
              switch (other.DataCase) {
                case DataOneofCase.GenericDialog:
                  GenericDialog = other.GenericDialog.Clone();
                  break;
                case DataOneofCase.Pause:
                  Pause = other.Pause.Clone();
                  break;
                case DataOneofCase.AdviceOverlay:
                  AdviceOverlay = other.AdviceOverlay.Clone();
                  break;
                case DataOneofCase.AdviceInterjection:
                  AdviceInterjection = other.AdviceInterjection.Clone();
                  break;
                case DataOneofCase.ConversationInterjection:
                  ConversationInterjection = other.ConversationInterjection.Clone();
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientStoryboardStep Clone() {
              return new ClientStoryboardStep(this);
            }

            /// <summary>Field number for the "custom_state" field.</summary>
            public const int CustomStateFieldNumber = 1;
            private string customState_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string CustomState {
              get { return customState_; }
              set {
                customState_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "generic_dialog" field.</summary>
            public const int GenericDialogFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardGenericDialogStep GenericDialog {
              get { return dataCase_ == DataOneofCase.GenericDialog ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardGenericDialogStep) data_ : null; }
              set {
                data_ = value;
                dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GenericDialog;
              }
            }

            /// <summary>Field number for the "pause" field.</summary>
            public const int PauseFieldNumber = 3;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardPauseStep Pause {
              get { return dataCase_ == DataOneofCase.Pause ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardPauseStep) data_ : null; }
              set {
                data_ = value;
                dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Pause;
              }
            }

            /// <summary>Field number for the "advice_overlay" field.</summary>
            public const int AdviceOverlayFieldNumber = 4;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceOverlayStep AdviceOverlay {
              get { return dataCase_ == DataOneofCase.AdviceOverlay ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceOverlayStep) data_ : null; }
              set {
                data_ = value;
                dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.AdviceOverlay;
              }
            }

            /// <summary>Field number for the "advice_interjection" field.</summary>
            public const int AdviceInterjectionFieldNumber = 5;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceInterjectionStep AdviceInterjection {
              get { return dataCase_ == DataOneofCase.AdviceInterjection ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceInterjectionStep) data_ : null; }
              set {
                data_ = value;
                dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.AdviceInterjection;
              }
            }

            /// <summary>Field number for the "conversation_interjection" field.</summary>
            public const int ConversationInterjectionFieldNumber = 6;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardConversationInterjectionStep ConversationInterjection {
              get { return dataCase_ == DataOneofCase.ConversationInterjection ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardConversationInterjectionStep) data_ : null; }
              set {
                data_ = value;
                dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.ConversationInterjection;
              }
            }

            /// <summary>Field number for the "call_to_action_asset" field.</summary>
            public const int CallToActionAssetFieldNumber = 7;
            private string callToActionAsset_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string CallToActionAsset {
              get { return callToActionAsset_; }
              set {
                callToActionAsset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "call_to_action_button_identifier" field.</summary>
            public const int CallToActionButtonIdentifierFieldNumber = 8;
            private string callToActionButtonIdentifier_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string CallToActionButtonIdentifier {
              get { return callToActionButtonIdentifier_; }
              set {
                callToActionButtonIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            private object data_;
            /// <summary>Enum of possible cases for the "Data" oneof.</summary>
            public enum DataOneofCase {
              None = 0,
              GenericDialog = 2,
              Pause = 3,
              AdviceOverlay = 4,
              AdviceInterjection = 5,
              ConversationInterjection = 6,
            }
            private DataOneofCase dataCase_ = DataOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DataOneofCase DataCase {
              get { return dataCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearData() {
              dataCase_ = DataOneofCase.None;
              data_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ClientStoryboardStep);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ClientStoryboardStep other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (CustomState != other.CustomState) return false;
              if (!object.Equals(GenericDialog, other.GenericDialog)) return false;
              if (!object.Equals(Pause, other.Pause)) return false;
              if (!object.Equals(AdviceOverlay, other.AdviceOverlay)) return false;
              if (!object.Equals(AdviceInterjection, other.AdviceInterjection)) return false;
              if (!object.Equals(ConversationInterjection, other.ConversationInterjection)) return false;
              if (CallToActionAsset != other.CallToActionAsset) return false;
              if (CallToActionButtonIdentifier != other.CallToActionButtonIdentifier) return false;
              if (DataCase != other.DataCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (CustomState.Length != 0) hash ^= CustomState.GetHashCode();
              if (dataCase_ == DataOneofCase.GenericDialog) hash ^= GenericDialog.GetHashCode();
              if (dataCase_ == DataOneofCase.Pause) hash ^= Pause.GetHashCode();
              if (dataCase_ == DataOneofCase.AdviceOverlay) hash ^= AdviceOverlay.GetHashCode();
              if (dataCase_ == DataOneofCase.AdviceInterjection) hash ^= AdviceInterjection.GetHashCode();
              if (dataCase_ == DataOneofCase.ConversationInterjection) hash ^= ConversationInterjection.GetHashCode();
              if (CallToActionAsset.Length != 0) hash ^= CallToActionAsset.GetHashCode();
              if (CallToActionButtonIdentifier.Length != 0) hash ^= CallToActionButtonIdentifier.GetHashCode();
              hash ^= (int) dataCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (CustomState.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(CustomState);
              }
              if (dataCase_ == DataOneofCase.GenericDialog) {
                output.WriteRawTag(18);
                output.WriteMessage(GenericDialog);
              }
              if (dataCase_ == DataOneofCase.Pause) {
                output.WriteRawTag(26);
                output.WriteMessage(Pause);
              }
              if (dataCase_ == DataOneofCase.AdviceOverlay) {
                output.WriteRawTag(34);
                output.WriteMessage(AdviceOverlay);
              }
              if (dataCase_ == DataOneofCase.AdviceInterjection) {
                output.WriteRawTag(42);
                output.WriteMessage(AdviceInterjection);
              }
              if (dataCase_ == DataOneofCase.ConversationInterjection) {
                output.WriteRawTag(50);
                output.WriteMessage(ConversationInterjection);
              }
              if (CallToActionAsset.Length != 0) {
                output.WriteRawTag(58);
                output.WriteString(CallToActionAsset);
              }
              if (CallToActionButtonIdentifier.Length != 0) {
                output.WriteRawTag(66);
                output.WriteString(CallToActionButtonIdentifier);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (CustomState.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomState);
              }
              if (dataCase_ == DataOneofCase.GenericDialog) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GenericDialog);
              }
              if (dataCase_ == DataOneofCase.Pause) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pause);
              }
              if (dataCase_ == DataOneofCase.AdviceOverlay) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdviceOverlay);
              }
              if (dataCase_ == DataOneofCase.AdviceInterjection) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdviceInterjection);
              }
              if (dataCase_ == DataOneofCase.ConversationInterjection) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationInterjection);
              }
              if (CallToActionAsset.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(CallToActionAsset);
              }
              if (CallToActionButtonIdentifier.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(CallToActionButtonIdentifier);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ClientStoryboardStep other) {
              if (other == null) {
                return;
              }
              if (other.CustomState.Length != 0) {
                CustomState = other.CustomState;
              }
              if (other.CallToActionAsset.Length != 0) {
                CallToActionAsset = other.CallToActionAsset;
              }
              if (other.CallToActionButtonIdentifier.Length != 0) {
                CallToActionButtonIdentifier = other.CallToActionButtonIdentifier;
              }
              switch (other.DataCase) {
                case DataOneofCase.GenericDialog:
                  if (GenericDialog == null) {
                    GenericDialog = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardGenericDialogStep();
                  }
                  GenericDialog.MergeFrom(other.GenericDialog);
                  break;
                case DataOneofCase.Pause:
                  if (Pause == null) {
                    Pause = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardPauseStep();
                  }
                  Pause.MergeFrom(other.Pause);
                  break;
                case DataOneofCase.AdviceOverlay:
                  if (AdviceOverlay == null) {
                    AdviceOverlay = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceOverlayStep();
                  }
                  AdviceOverlay.MergeFrom(other.AdviceOverlay);
                  break;
                case DataOneofCase.AdviceInterjection:
                  if (AdviceInterjection == null) {
                    AdviceInterjection = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceInterjectionStep();
                  }
                  AdviceInterjection.MergeFrom(other.AdviceInterjection);
                  break;
                case DataOneofCase.ConversationInterjection:
                  if (ConversationInterjection == null) {
                    ConversationInterjection = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardConversationInterjectionStep();
                  }
                  ConversationInterjection.MergeFrom(other.ConversationInterjection);
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    CustomState = input.ReadString();
                    break;
                  }
                  case 18: {
                    global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardGenericDialogStep subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardGenericDialogStep();
                    if (dataCase_ == DataOneofCase.GenericDialog) {
                      subBuilder.MergeFrom(GenericDialog);
                    }
                    input.ReadMessage(subBuilder);
                    GenericDialog = subBuilder;
                    break;
                  }
                  case 26: {
                    global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardPauseStep subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardPauseStep();
                    if (dataCase_ == DataOneofCase.Pause) {
                      subBuilder.MergeFrom(Pause);
                    }
                    input.ReadMessage(subBuilder);
                    Pause = subBuilder;
                    break;
                  }
                  case 34: {
                    global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceOverlayStep subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceOverlayStep();
                    if (dataCase_ == DataOneofCase.AdviceOverlay) {
                      subBuilder.MergeFrom(AdviceOverlay);
                    }
                    input.ReadMessage(subBuilder);
                    AdviceOverlay = subBuilder;
                    break;
                  }
                  case 42: {
                    global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceInterjectionStep subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceInterjectionStep();
                    if (dataCase_ == DataOneofCase.AdviceInterjection) {
                      subBuilder.MergeFrom(AdviceInterjection);
                    }
                    input.ReadMessage(subBuilder);
                    AdviceInterjection = subBuilder;
                    break;
                  }
                  case 50: {
                    global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardConversationInterjectionStep subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardConversationInterjectionStep();
                    if (dataCase_ == DataOneofCase.ConversationInterjection) {
                      subBuilder.MergeFrom(ConversationInterjection);
                    }
                    input.ReadMessage(subBuilder);
                    ConversationInterjection = subBuilder;
                    break;
                  }
                  case 58: {
                    CallToActionAsset = input.ReadString();
                    break;
                  }
                  case 66: {
                    CallToActionButtonIdentifier = input.ReadString();
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the ClientStoryboardStep message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class StoryboardPauseStep : pb::IMessage<StoryboardPauseStep> {
                private static readonly pb::MessageParser<StoryboardPauseStep> _parser = new pb::MessageParser<StoryboardPauseStep>(() => new StoryboardPauseStep());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<StoryboardPauseStep> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public StoryboardPauseStep() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public StoryboardPauseStep(StoryboardPauseStep other) : this() {
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public StoryboardPauseStep Clone() {
                  return new StoryboardPauseStep(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as StoryboardPauseStep);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(StoryboardPauseStep other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(StoryboardPauseStep other) {
                  if (other == null) {
                    return;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    }
                  }
                }

              }

              public sealed partial class StoryboardGenericDialogStep : pb::IMessage<StoryboardGenericDialogStep> {
                private static readonly pb::MessageParser<StoryboardGenericDialogStep> _parser = new pb::MessageParser<StoryboardGenericDialogStep>(() => new StoryboardGenericDialogStep());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<StoryboardGenericDialogStep> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Descriptor.NestedTypes[1]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public StoryboardGenericDialogStep() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public StoryboardGenericDialogStep(StoryboardGenericDialogStep other) : this() {
                  title_ = other.title_;
                  text_ = other.text_;
                  buttonText_ = other.buttonText_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public StoryboardGenericDialogStep Clone() {
                  return new StoryboardGenericDialogStep(this);
                }

                /// <summary>Field number for the "title" field.</summary>
                public const int TitleFieldNumber = 1;
                private string title_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Title {
                  get { return title_; }
                  set {
                    title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "text" field.</summary>
                public const int TextFieldNumber = 2;
                private string text_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Text {
                  get { return text_; }
                  set {
                    text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "button_text" field.</summary>
                public const int ButtonTextFieldNumber = 3;
                private string buttonText_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string ButtonText {
                  get { return buttonText_; }
                  set {
                    buttonText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as StoryboardGenericDialogStep);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(StoryboardGenericDialogStep other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Title != other.Title) return false;
                  if (Text != other.Text) return false;
                  if (ButtonText != other.ButtonText) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Title.Length != 0) hash ^= Title.GetHashCode();
                  if (Text.Length != 0) hash ^= Text.GetHashCode();
                  if (ButtonText.Length != 0) hash ^= ButtonText.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (Title.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(Title);
                  }
                  if (Text.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(Text);
                  }
                  if (ButtonText.Length != 0) {
                    output.WriteRawTag(26);
                    output.WriteString(ButtonText);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (Title.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
                  }
                  if (Text.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
                  }
                  if (ButtonText.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(ButtonText);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(StoryboardGenericDialogStep other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Title.Length != 0) {
                    Title = other.Title;
                  }
                  if (other.Text.Length != 0) {
                    Text = other.Text;
                  }
                  if (other.ButtonText.Length != 0) {
                    ButtonText = other.ButtonText;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        Title = input.ReadString();
                        break;
                      }
                      case 18: {
                        Text = input.ReadString();
                        break;
                      }
                      case 26: {
                        ButtonText = input.ReadString();
                        break;
                      }
                    }
                  }
                }

              }

              public sealed partial class SpeechBubble : pb::IMessage<SpeechBubble> {
                private static readonly pb::MessageParser<SpeechBubble> _parser = new pb::MessageParser<SpeechBubble>(() => new SpeechBubble());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<SpeechBubble> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Descriptor.NestedTypes[2]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public SpeechBubble() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public SpeechBubble(SpeechBubble other) : this() {
                  characterPortraitImage_ = other.characterPortraitImage_;
                  characterNameLockey_ = other.characterNameLockey_;
                  bubblePrefabName_ = other.bubblePrefabName_;
                  bubbleContentLockey_ = other.bubbleContentLockey_;
                  soundConfig_ = other.soundConfig_ != null ? other.soundConfig_.Clone() : null;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public SpeechBubble Clone() {
                  return new SpeechBubble(this);
                }

                /// <summary>Field number for the "character_portrait_image" field.</summary>
                public const int CharacterPortraitImageFieldNumber = 1;
                private string characterPortraitImage_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string CharacterPortraitImage {
                  get { return characterPortraitImage_; }
                  set {
                    characterPortraitImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "character_name_lockey" field.</summary>
                public const int CharacterNameLockeyFieldNumber = 2;
                private string characterNameLockey_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string CharacterNameLockey {
                  get { return characterNameLockey_; }
                  set {
                    characterNameLockey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "bubble_prefab_name" field.</summary>
                public const int BubblePrefabNameFieldNumber = 3;
                private string bubblePrefabName_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string BubblePrefabName {
                  get { return bubblePrefabName_; }
                  set {
                    bubblePrefabName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "bubble_content_lockey" field.</summary>
                public const int BubbleContentLockeyFieldNumber = 4;
                private string bubbleContentLockey_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string BubbleContentLockey {
                  get { return bubbleContentLockey_; }
                  set {
                    bubbleContentLockey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "sound_config" field.</summary>
                public const int SoundConfigFieldNumber = 5;
                private global::WUProtos.Data.SoundConfig soundConfig_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::WUProtos.Data.SoundConfig SoundConfig {
                  get { return soundConfig_; }
                  set {
                    soundConfig_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as SpeechBubble);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(SpeechBubble other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (CharacterPortraitImage != other.CharacterPortraitImage) return false;
                  if (CharacterNameLockey != other.CharacterNameLockey) return false;
                  if (BubblePrefabName != other.BubblePrefabName) return false;
                  if (BubbleContentLockey != other.BubbleContentLockey) return false;
                  if (!object.Equals(SoundConfig, other.SoundConfig)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (CharacterPortraitImage.Length != 0) hash ^= CharacterPortraitImage.GetHashCode();
                  if (CharacterNameLockey.Length != 0) hash ^= CharacterNameLockey.GetHashCode();
                  if (BubblePrefabName.Length != 0) hash ^= BubblePrefabName.GetHashCode();
                  if (BubbleContentLockey.Length != 0) hash ^= BubbleContentLockey.GetHashCode();
                  if (soundConfig_ != null) hash ^= SoundConfig.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (CharacterPortraitImage.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(CharacterPortraitImage);
                  }
                  if (CharacterNameLockey.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(CharacterNameLockey);
                  }
                  if (BubblePrefabName.Length != 0) {
                    output.WriteRawTag(26);
                    output.WriteString(BubblePrefabName);
                  }
                  if (BubbleContentLockey.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(BubbleContentLockey);
                  }
                  if (soundConfig_ != null) {
                    output.WriteRawTag(42);
                    output.WriteMessage(SoundConfig);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (CharacterPortraitImage.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterPortraitImage);
                  }
                  if (CharacterNameLockey.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterNameLockey);
                  }
                  if (BubblePrefabName.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(BubblePrefabName);
                  }
                  if (BubbleContentLockey.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(BubbleContentLockey);
                  }
                  if (soundConfig_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(SoundConfig);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(SpeechBubble other) {
                  if (other == null) {
                    return;
                  }
                  if (other.CharacterPortraitImage.Length != 0) {
                    CharacterPortraitImage = other.CharacterPortraitImage;
                  }
                  if (other.CharacterNameLockey.Length != 0) {
                    CharacterNameLockey = other.CharacterNameLockey;
                  }
                  if (other.BubblePrefabName.Length != 0) {
                    BubblePrefabName = other.BubblePrefabName;
                  }
                  if (other.BubbleContentLockey.Length != 0) {
                    BubbleContentLockey = other.BubbleContentLockey;
                  }
                  if (other.soundConfig_ != null) {
                    if (soundConfig_ == null) {
                      SoundConfig = new global::WUProtos.Data.SoundConfig();
                    }
                    SoundConfig.MergeFrom(other.SoundConfig);
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        CharacterPortraitImage = input.ReadString();
                        break;
                      }
                      case 18: {
                        CharacterNameLockey = input.ReadString();
                        break;
                      }
                      case 26: {
                        BubblePrefabName = input.ReadString();
                        break;
                      }
                      case 34: {
                        BubbleContentLockey = input.ReadString();
                        break;
                      }
                      case 42: {
                        if (soundConfig_ == null) {
                          SoundConfig = new global::WUProtos.Data.SoundConfig();
                        }
                        input.ReadMessage(SoundConfig);
                        break;
                      }
                    }
                  }
                }

              }

              public sealed partial class StoryboardConversationInterjectionStep : pb::IMessage<StoryboardConversationInterjectionStep> {
                private static readonly pb::MessageParser<StoryboardConversationInterjectionStep> _parser = new pb::MessageParser<StoryboardConversationInterjectionStep>(() => new StoryboardConversationInterjectionStep());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<StoryboardConversationInterjectionStep> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Descriptor.NestedTypes[3]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public StoryboardConversationInterjectionStep() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public StoryboardConversationInterjectionStep(StoryboardConversationInterjectionStep other) : this() {
                  conversation_ = other.conversation_.Clone();
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public StoryboardConversationInterjectionStep Clone() {
                  return new StoryboardConversationInterjectionStep(this);
                }

                /// <summary>Field number for the "conversation" field.</summary>
                public const int ConversationFieldNumber = 1;
                private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.SpeechBubble> _repeated_conversation_codec
                    = pb::FieldCodec.ForMessage(10, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.SpeechBubble.Parser);
                private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.SpeechBubble> conversation_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.SpeechBubble>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.SpeechBubble> Conversation {
                  get { return conversation_; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as StoryboardConversationInterjectionStep);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(StoryboardConversationInterjectionStep other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if(!conversation_.Equals(other.conversation_)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  hash ^= conversation_.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  conversation_.WriteTo(output, _repeated_conversation_codec);
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  size += conversation_.CalculateSize(_repeated_conversation_codec);
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(StoryboardConversationInterjectionStep other) {
                  if (other == null) {
                    return;
                  }
                  conversation_.Add(other.conversation_);
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        conversation_.AddEntriesFrom(input, _repeated_conversation_codec);
                        break;
                      }
                    }
                  }
                }

              }

              public sealed partial class StoryboardAdviceOverlayStep : pb::IMessage<StoryboardAdviceOverlayStep> {
                private static readonly pb::MessageParser<StoryboardAdviceOverlayStep> _parser = new pb::MessageParser<StoryboardAdviceOverlayStep>(() => new StoryboardAdviceOverlayStep());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<StoryboardAdviceOverlayStep> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Descriptor.NestedTypes[4]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public StoryboardAdviceOverlayStep() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public StoryboardAdviceOverlayStep(StoryboardAdviceOverlayStep other) : this() {
                  speechBubble_ = other.speechBubble_ != null ? other.speechBubble_.Clone() : null;
                  requiresScrim_ = other.requiresScrim_;
                  alignment_ = other.alignment_;
                  showContinueActionText_ = other.showContinueActionText_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public StoryboardAdviceOverlayStep Clone() {
                  return new StoryboardAdviceOverlayStep(this);
                }

                /// <summary>Field number for the "speech_bubble" field.</summary>
                public const int SpeechBubbleFieldNumber = 1;
                private global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.SpeechBubble speechBubble_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.SpeechBubble SpeechBubble {
                  get { return speechBubble_; }
                  set {
                    speechBubble_ = value;
                  }
                }

                /// <summary>Field number for the "requires_scrim" field.</summary>
                public const int RequiresScrimFieldNumber = 2;
                private bool requiresScrim_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool RequiresScrim {
                  get { return requiresScrim_; }
                  set {
                    requiresScrim_ = value;
                  }
                }

                /// <summary>Field number for the "alignment" field.</summary>
                public const int AlignmentFieldNumber = 3;
                private global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceOverlayStep.Types.AdviceOverlayAlignment alignment_ = 0;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceOverlayStep.Types.AdviceOverlayAlignment Alignment {
                  get { return alignment_; }
                  set {
                    alignment_ = value;
                  }
                }

                /// <summary>Field number for the "show_continue_action_text" field.</summary>
                public const int ShowContinueActionTextFieldNumber = 4;
                private bool showContinueActionText_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool ShowContinueActionText {
                  get { return showContinueActionText_; }
                  set {
                    showContinueActionText_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as StoryboardAdviceOverlayStep);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(StoryboardAdviceOverlayStep other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(SpeechBubble, other.SpeechBubble)) return false;
                  if (RequiresScrim != other.RequiresScrim) return false;
                  if (Alignment != other.Alignment) return false;
                  if (ShowContinueActionText != other.ShowContinueActionText) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (speechBubble_ != null) hash ^= SpeechBubble.GetHashCode();
                  if (RequiresScrim != false) hash ^= RequiresScrim.GetHashCode();
                  if (Alignment != 0) hash ^= Alignment.GetHashCode();
                  if (ShowContinueActionText != false) hash ^= ShowContinueActionText.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (speechBubble_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(SpeechBubble);
                  }
                  if (RequiresScrim != false) {
                    output.WriteRawTag(16);
                    output.WriteBool(RequiresScrim);
                  }
                  if (Alignment != 0) {
                    output.WriteRawTag(24);
                    output.WriteEnum((int) Alignment);
                  }
                  if (ShowContinueActionText != false) {
                    output.WriteRawTag(32);
                    output.WriteBool(ShowContinueActionText);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (speechBubble_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpeechBubble);
                  }
                  if (RequiresScrim != false) {
                    size += 1 + 1;
                  }
                  if (Alignment != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Alignment);
                  }
                  if (ShowContinueActionText != false) {
                    size += 1 + 1;
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(StoryboardAdviceOverlayStep other) {
                  if (other == null) {
                    return;
                  }
                  if (other.speechBubble_ != null) {
                    if (speechBubble_ == null) {
                      SpeechBubble = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.SpeechBubble();
                    }
                    SpeechBubble.MergeFrom(other.SpeechBubble);
                  }
                  if (other.RequiresScrim != false) {
                    RequiresScrim = other.RequiresScrim;
                  }
                  if (other.Alignment != 0) {
                    Alignment = other.Alignment;
                  }
                  if (other.ShowContinueActionText != false) {
                    ShowContinueActionText = other.ShowContinueActionText;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (speechBubble_ == null) {
                          SpeechBubble = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.SpeechBubble();
                        }
                        input.ReadMessage(SpeechBubble);
                        break;
                      }
                      case 16: {
                        RequiresScrim = input.ReadBool();
                        break;
                      }
                      case 24: {
                        Alignment = (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Types.StoryboardAdviceOverlayStep.Types.AdviceOverlayAlignment) input.ReadEnum();
                        break;
                      }
                      case 32: {
                        ShowContinueActionText = input.ReadBool();
                        break;
                      }
                    }
                  }
                }

                #region Nested types
                /// <summary>Container for nested types declared in the StoryboardAdviceOverlayStep message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static partial class Types {
                  public enum AdviceOverlayAlignment {
                    [pbr::OriginalName("bottom")] Bottom = 0,
                    [pbr::OriginalName("top")] Top = 1,
                  }

                }
                #endregion

              }

              public sealed partial class StoryboardAdviceInterjectionStep : pb::IMessage<StoryboardAdviceInterjectionStep> {
                private static readonly pb::MessageParser<StoryboardAdviceInterjectionStep> _parser = new pb::MessageParser<StoryboardAdviceInterjectionStep>(() => new StoryboardAdviceInterjectionStep());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<StoryboardAdviceInterjectionStep> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientStoryboard.Types.ClientStoryboardStep.Descriptor.NestedTypes[5]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public StoryboardAdviceInterjectionStep() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public StoryboardAdviceInterjectionStep(StoryboardAdviceInterjectionStep other) : this() {
                  characterPortraitImage_ = other.characterPortraitImage_;
                  characterNameLockey_ = other.characterNameLockey_;
                  contentTextLockey_ = other.contentTextLockey_;
                  contentImageName_ = other.contentImageName_;
                  soundConfig_ = other.soundConfig_ != null ? other.soundConfig_.Clone() : null;
                  buttonLockey_ = other.buttonLockey_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public StoryboardAdviceInterjectionStep Clone() {
                  return new StoryboardAdviceInterjectionStep(this);
                }

                /// <summary>Field number for the "character_portrait_image" field.</summary>
                public const int CharacterPortraitImageFieldNumber = 1;
                private string characterPortraitImage_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string CharacterPortraitImage {
                  get { return characterPortraitImage_; }
                  set {
                    characterPortraitImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "character_name_lockey" field.</summary>
                public const int CharacterNameLockeyFieldNumber = 2;
                private string characterNameLockey_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string CharacterNameLockey {
                  get { return characterNameLockey_; }
                  set {
                    characterNameLockey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "content_text_lockey" field.</summary>
                public const int ContentTextLockeyFieldNumber = 3;
                private string contentTextLockey_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string ContentTextLockey {
                  get { return contentTextLockey_; }
                  set {
                    contentTextLockey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "content_image_name" field.</summary>
                public const int ContentImageNameFieldNumber = 4;
                private string contentImageName_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string ContentImageName {
                  get { return contentImageName_; }
                  set {
                    contentImageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "sound_config" field.</summary>
                public const int SoundConfigFieldNumber = 5;
                private global::WUProtos.Data.SoundConfig soundConfig_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::WUProtos.Data.SoundConfig SoundConfig {
                  get { return soundConfig_; }
                  set {
                    soundConfig_ = value;
                  }
                }

                /// <summary>Field number for the "button_lockey" field.</summary>
                public const int ButtonLockeyFieldNumber = 6;
                private string buttonLockey_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string ButtonLockey {
                  get { return buttonLockey_; }
                  set {
                    buttonLockey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as StoryboardAdviceInterjectionStep);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(StoryboardAdviceInterjectionStep other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (CharacterPortraitImage != other.CharacterPortraitImage) return false;
                  if (CharacterNameLockey != other.CharacterNameLockey) return false;
                  if (ContentTextLockey != other.ContentTextLockey) return false;
                  if (ContentImageName != other.ContentImageName) return false;
                  if (!object.Equals(SoundConfig, other.SoundConfig)) return false;
                  if (ButtonLockey != other.ButtonLockey) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (CharacterPortraitImage.Length != 0) hash ^= CharacterPortraitImage.GetHashCode();
                  if (CharacterNameLockey.Length != 0) hash ^= CharacterNameLockey.GetHashCode();
                  if (ContentTextLockey.Length != 0) hash ^= ContentTextLockey.GetHashCode();
                  if (ContentImageName.Length != 0) hash ^= ContentImageName.GetHashCode();
                  if (soundConfig_ != null) hash ^= SoundConfig.GetHashCode();
                  if (ButtonLockey.Length != 0) hash ^= ButtonLockey.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (CharacterPortraitImage.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(CharacterPortraitImage);
                  }
                  if (CharacterNameLockey.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(CharacterNameLockey);
                  }
                  if (ContentTextLockey.Length != 0) {
                    output.WriteRawTag(26);
                    output.WriteString(ContentTextLockey);
                  }
                  if (ContentImageName.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(ContentImageName);
                  }
                  if (soundConfig_ != null) {
                    output.WriteRawTag(42);
                    output.WriteMessage(SoundConfig);
                  }
                  if (ButtonLockey.Length != 0) {
                    output.WriteRawTag(50);
                    output.WriteString(ButtonLockey);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (CharacterPortraitImage.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterPortraitImage);
                  }
                  if (CharacterNameLockey.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterNameLockey);
                  }
                  if (ContentTextLockey.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentTextLockey);
                  }
                  if (ContentImageName.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentImageName);
                  }
                  if (soundConfig_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(SoundConfig);
                  }
                  if (ButtonLockey.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(ButtonLockey);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(StoryboardAdviceInterjectionStep other) {
                  if (other == null) {
                    return;
                  }
                  if (other.CharacterPortraitImage.Length != 0) {
                    CharacterPortraitImage = other.CharacterPortraitImage;
                  }
                  if (other.CharacterNameLockey.Length != 0) {
                    CharacterNameLockey = other.CharacterNameLockey;
                  }
                  if (other.ContentTextLockey.Length != 0) {
                    ContentTextLockey = other.ContentTextLockey;
                  }
                  if (other.ContentImageName.Length != 0) {
                    ContentImageName = other.ContentImageName;
                  }
                  if (other.soundConfig_ != null) {
                    if (soundConfig_ == null) {
                      SoundConfig = new global::WUProtos.Data.SoundConfig();
                    }
                    SoundConfig.MergeFrom(other.SoundConfig);
                  }
                  if (other.ButtonLockey.Length != 0) {
                    ButtonLockey = other.ButtonLockey;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        CharacterPortraitImage = input.ReadString();
                        break;
                      }
                      case 18: {
                        CharacterNameLockey = input.ReadString();
                        break;
                      }
                      case 26: {
                        ContentTextLockey = input.ReadString();
                        break;
                      }
                      case 34: {
                        ContentImageName = input.ReadString();
                        break;
                      }
                      case 42: {
                        if (soundConfig_ == null) {
                          SoundConfig = new global::WUProtos.Data.SoundConfig();
                        }
                        input.ReadMessage(SoundConfig);
                        break;
                      }
                      case 50: {
                        ButtonLockey = input.ReadString();
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

        }
        #endregion

      }

      public sealed partial class ClientRpgstat : pb::IMessage<ClientRpgstat> {
        private static readonly pb::MessageParser<ClientRpgstat> _parser = new pb::MessageParser<ClientRpgstat>(() => new ClientRpgstat());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientRpgstat> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientRpgstat() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientRpgstat(ClientRpgstat other) : this() {
          id_ = other.id_;
          tooltip_ = other.tooltip_;
          percentage_ = other.percentage_;
          showUi_ = other.showUi_;
          statName_ = other.statName_;
          displayThreshold_ = other.displayThreshold_;
          iconDisplayType_ = other.iconDisplayType_;
          infoDesc_ = other.infoDesc_;
          icons_ = other.icons_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientRpgstat Clone() {
          return new ClientRpgstat(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "tooltip" field.</summary>
        public const int TooltipFieldNumber = 2;
        private string tooltip_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Tooltip {
          get { return tooltip_; }
          set {
            tooltip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "percentage" field.</summary>
        public const int PercentageFieldNumber = 3;
        private bool percentage_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Percentage {
          get { return percentage_; }
          set {
            percentage_ = value;
          }
        }

        /// <summary>Field number for the "show_ui" field.</summary>
        public const int ShowUiFieldNumber = 4;
        private bool showUi_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ShowUi {
          get { return showUi_; }
          set {
            showUi_ = value;
          }
        }

        /// <summary>Field number for the "stat_name" field.</summary>
        public const int StatNameFieldNumber = 5;
        private string statName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StatName {
          get { return statName_; }
          set {
            statName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "display_threshold" field.</summary>
        public const int DisplayThresholdFieldNumber = 6;
        private int displayThreshold_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int DisplayThreshold {
          get { return displayThreshold_; }
          set {
            displayThreshold_ = value;
          }
        }

        /// <summary>Field number for the "icon_display_type" field.</summary>
        public const int IconDisplayTypeFieldNumber = 7;
        private string iconDisplayType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string IconDisplayType {
          get { return iconDisplayType_; }
          set {
            iconDisplayType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "info_desc" field.</summary>
        public const int InfoDescFieldNumber = 8;
        private string infoDesc_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string InfoDesc {
          get { return infoDesc_; }
          set {
            infoDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "icons" field.</summary>
        public const int IconsFieldNumber = 9;
        private static readonly pbc::MapField<string, string>.Codec _map_icons_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 74);
        private readonly pbc::MapField<string, string> icons_ = new pbc::MapField<string, string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, string> Icons {
          get { return icons_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientRpgstat);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientRpgstat other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Tooltip != other.Tooltip) return false;
          if (Percentage != other.Percentage) return false;
          if (ShowUi != other.ShowUi) return false;
          if (StatName != other.StatName) return false;
          if (DisplayThreshold != other.DisplayThreshold) return false;
          if (IconDisplayType != other.IconDisplayType) return false;
          if (InfoDesc != other.InfoDesc) return false;
          if (!Icons.Equals(other.Icons)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Tooltip.Length != 0) hash ^= Tooltip.GetHashCode();
          if (Percentage != false) hash ^= Percentage.GetHashCode();
          if (ShowUi != false) hash ^= ShowUi.GetHashCode();
          if (StatName.Length != 0) hash ^= StatName.GetHashCode();
          if (DisplayThreshold != 0) hash ^= DisplayThreshold.GetHashCode();
          if (IconDisplayType.Length != 0) hash ^= IconDisplayType.GetHashCode();
          if (InfoDesc.Length != 0) hash ^= InfoDesc.GetHashCode();
          hash ^= Icons.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Tooltip.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Tooltip);
          }
          if (Percentage != false) {
            output.WriteRawTag(24);
            output.WriteBool(Percentage);
          }
          if (ShowUi != false) {
            output.WriteRawTag(32);
            output.WriteBool(ShowUi);
          }
          if (StatName.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(StatName);
          }
          if (DisplayThreshold != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(DisplayThreshold);
          }
          if (IconDisplayType.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(IconDisplayType);
          }
          if (InfoDesc.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(InfoDesc);
          }
          icons_.WriteTo(output, _map_icons_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Tooltip.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Tooltip);
          }
          if (Percentage != false) {
            size += 1 + 1;
          }
          if (ShowUi != false) {
            size += 1 + 1;
          }
          if (StatName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StatName);
          }
          if (DisplayThreshold != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(DisplayThreshold);
          }
          if (IconDisplayType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(IconDisplayType);
          }
          if (InfoDesc.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(InfoDesc);
          }
          size += icons_.CalculateSize(_map_icons_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientRpgstat other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Tooltip.Length != 0) {
            Tooltip = other.Tooltip;
          }
          if (other.Percentage != false) {
            Percentage = other.Percentage;
          }
          if (other.ShowUi != false) {
            ShowUi = other.ShowUi;
          }
          if (other.StatName.Length != 0) {
            StatName = other.StatName;
          }
          if (other.DisplayThreshold != 0) {
            DisplayThreshold = other.DisplayThreshold;
          }
          if (other.IconDisplayType.Length != 0) {
            IconDisplayType = other.IconDisplayType;
          }
          if (other.InfoDesc.Length != 0) {
            InfoDesc = other.InfoDesc;
          }
          icons_.Add(other.icons_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Tooltip = input.ReadString();
                break;
              }
              case 24: {
                Percentage = input.ReadBool();
                break;
              }
              case 32: {
                ShowUi = input.ReadBool();
                break;
              }
              case 42: {
                StatName = input.ReadString();
                break;
              }
              case 48: {
                DisplayThreshold = input.ReadInt32();
                break;
              }
              case 58: {
                IconDisplayType = input.ReadString();
                break;
              }
              case 66: {
                InfoDesc = input.ReadString();
                break;
              }
              case 74: {
                icons_.AddEntriesFrom(input, _map_icons_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientRecipe : pb::IMessage<ClientRecipe> {
        private static readonly pb::MessageParser<ClientRecipe> _parser = new pb::MessageParser<ClientRecipe>(() => new ClientRecipe());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientRecipe> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientRecipe() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientRecipe(ClientRecipe other) : this() {
          id_ = other.id_;
          name_ = other.name_;
          description_ = other.description_;
          icon_ = other.icon_;
          model_ = other.model_;
          collectFx_ = other.collectFx_;
          craftingFx_ = other.craftingFx_;
          revealFx_ = other.revealFx_;
          primaryColor_ = other.primaryColor_ != null ? other.primaryColor_.Clone() : null;
          secondaryColor_ = other.secondaryColor_ != null ? other.secondaryColor_.Clone() : null;
          index_ = other.index_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientRecipe Clone() {
          return new ClientRecipe(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 3;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "icon" field.</summary>
        public const int IconFieldNumber = 4;
        private string icon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Icon {
          get { return icon_; }
          set {
            icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "model" field.</summary>
        public const int ModelFieldNumber = 5;
        private string model_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Model {
          get { return model_; }
          set {
            model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "collect_fx" field.</summary>
        public const int CollectFxFieldNumber = 6;
        private string collectFx_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CollectFx {
          get { return collectFx_; }
          set {
            collectFx_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "crafting_fx" field.</summary>
        public const int CraftingFxFieldNumber = 7;
        private string craftingFx_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CraftingFx {
          get { return craftingFx_; }
          set {
            craftingFx_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "reveal_fx" field.</summary>
        public const int RevealFxFieldNumber = 8;
        private string revealFx_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RevealFx {
          get { return revealFx_; }
          set {
            revealFx_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "primary_color" field.</summary>
        public const int PrimaryColorFieldNumber = 9;
        private global::WUProtos.Data.Color primaryColor_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color PrimaryColor {
          get { return primaryColor_; }
          set {
            primaryColor_ = value;
          }
        }

        /// <summary>Field number for the "secondary_color" field.</summary>
        public const int SecondaryColorFieldNumber = 10;
        private global::WUProtos.Data.Color secondaryColor_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color SecondaryColor {
          get { return secondaryColor_; }
          set {
            secondaryColor_ = value;
          }
        }

        /// <summary>Field number for the "index" field.</summary>
        public const int IndexFieldNumber = 11;
        private int index_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Index {
          get { return index_; }
          set {
            index_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientRecipe);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientRecipe other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if (Description != other.Description) return false;
          if (Icon != other.Icon) return false;
          if (Model != other.Model) return false;
          if (CollectFx != other.CollectFx) return false;
          if (CraftingFx != other.CraftingFx) return false;
          if (RevealFx != other.RevealFx) return false;
          if (!object.Equals(PrimaryColor, other.PrimaryColor)) return false;
          if (!object.Equals(SecondaryColor, other.SecondaryColor)) return false;
          if (Index != other.Index) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (Icon.Length != 0) hash ^= Icon.GetHashCode();
          if (Model.Length != 0) hash ^= Model.GetHashCode();
          if (CollectFx.Length != 0) hash ^= CollectFx.GetHashCode();
          if (CraftingFx.Length != 0) hash ^= CraftingFx.GetHashCode();
          if (RevealFx.Length != 0) hash ^= RevealFx.GetHashCode();
          if (primaryColor_ != null) hash ^= PrimaryColor.GetHashCode();
          if (secondaryColor_ != null) hash ^= SecondaryColor.GetHashCode();
          if (Index != 0) hash ^= Index.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Description);
          }
          if (Icon.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Icon);
          }
          if (Model.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Model);
          }
          if (CollectFx.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(CollectFx);
          }
          if (CraftingFx.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(CraftingFx);
          }
          if (RevealFx.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(RevealFx);
          }
          if (primaryColor_ != null) {
            output.WriteRawTag(74);
            output.WriteMessage(PrimaryColor);
          }
          if (secondaryColor_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(SecondaryColor);
          }
          if (Index != 0) {
            output.WriteRawTag(88);
            output.WriteInt32(Index);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (Icon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
          }
          if (Model.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
          }
          if (CollectFx.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CollectFx);
          }
          if (CraftingFx.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CraftingFx);
          }
          if (RevealFx.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RevealFx);
          }
          if (primaryColor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrimaryColor);
          }
          if (secondaryColor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SecondaryColor);
          }
          if (Index != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientRecipe other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          if (other.Icon.Length != 0) {
            Icon = other.Icon;
          }
          if (other.Model.Length != 0) {
            Model = other.Model;
          }
          if (other.CollectFx.Length != 0) {
            CollectFx = other.CollectFx;
          }
          if (other.CraftingFx.Length != 0) {
            CraftingFx = other.CraftingFx;
          }
          if (other.RevealFx.Length != 0) {
            RevealFx = other.RevealFx;
          }
          if (other.primaryColor_ != null) {
            if (primaryColor_ == null) {
              PrimaryColor = new global::WUProtos.Data.Color();
            }
            PrimaryColor.MergeFrom(other.PrimaryColor);
          }
          if (other.secondaryColor_ != null) {
            if (secondaryColor_ == null) {
              SecondaryColor = new global::WUProtos.Data.Color();
            }
            SecondaryColor.MergeFrom(other.SecondaryColor);
          }
          if (other.Index != 0) {
            Index = other.Index;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                Description = input.ReadString();
                break;
              }
              case 34: {
                Icon = input.ReadString();
                break;
              }
              case 42: {
                Model = input.ReadString();
                break;
              }
              case 50: {
                CollectFx = input.ReadString();
                break;
              }
              case 58: {
                CraftingFx = input.ReadString();
                break;
              }
              case 66: {
                RevealFx = input.ReadString();
                break;
              }
              case 74: {
                if (primaryColor_ == null) {
                  PrimaryColor = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(PrimaryColor);
                break;
              }
              case 82: {
                if (secondaryColor_ == null) {
                  SecondaryColor = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(SecondaryColor);
                break;
              }
              case 88: {
                Index = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientQuest : pb::IMessage<ClientQuest> {
        private static readonly pb::MessageParser<ClientQuest> _parser = new pb::MessageParser<ClientQuest>(() => new ClientQuest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientQuest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[13]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientQuest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientQuest(ClientQuest other) : this() {
          id_ = other.id_;
          sortOrder_ = other.sortOrder_;
          questNameLocKey_ = other.questNameLocKey_;
          questDescLocKey_ = other.questDescLocKey_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientQuest Clone() {
          return new ClientQuest(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "sort_order" field.</summary>
        public const int SortOrderFieldNumber = 2;
        private int sortOrder_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int SortOrder {
          get { return sortOrder_; }
          set {
            sortOrder_ = value;
          }
        }

        /// <summary>Field number for the "quest_name_loc_key" field.</summary>
        public const int QuestNameLocKeyFieldNumber = 3;
        private string questNameLocKey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string QuestNameLocKey {
          get { return questNameLocKey_; }
          set {
            questNameLocKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "quest_desc_loc_key" field.</summary>
        public const int QuestDescLocKeyFieldNumber = 4;
        private string questDescLocKey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string QuestDescLocKey {
          get { return questDescLocKey_; }
          set {
            questDescLocKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientQuest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientQuest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (SortOrder != other.SortOrder) return false;
          if (QuestNameLocKey != other.QuestNameLocKey) return false;
          if (QuestDescLocKey != other.QuestDescLocKey) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (SortOrder != 0) hash ^= SortOrder.GetHashCode();
          if (QuestNameLocKey.Length != 0) hash ^= QuestNameLocKey.GetHashCode();
          if (QuestDescLocKey.Length != 0) hash ^= QuestDescLocKey.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (SortOrder != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(SortOrder);
          }
          if (QuestNameLocKey.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(QuestNameLocKey);
          }
          if (QuestDescLocKey.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(QuestDescLocKey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (SortOrder != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SortOrder);
          }
          if (QuestNameLocKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(QuestNameLocKey);
          }
          if (QuestDescLocKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(QuestDescLocKey);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientQuest other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.SortOrder != 0) {
            SortOrder = other.SortOrder;
          }
          if (other.QuestNameLocKey.Length != 0) {
            QuestNameLocKey = other.QuestNameLocKey;
          }
          if (other.QuestDescLocKey.Length != 0) {
            QuestDescLocKey = other.QuestDescLocKey;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 16: {
                SortOrder = input.ReadInt32();
                break;
              }
              case 26: {
                QuestNameLocKey = input.ReadString();
                break;
              }
              case 34: {
                QuestDescLocKey = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientProtegoPattern : pb::IMessage<ClientProtegoPattern> {
        private static readonly pb::MessageParser<ClientProtegoPattern> _parser = new pb::MessageParser<ClientProtegoPattern>(() => new ClientProtegoPattern());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientProtegoPattern> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[14]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientProtegoPattern() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientProtegoPattern(ClientProtegoPattern other) : this() {
          id_ = other.id_;
          uiTargetStartPos_ = other.uiTargetStartPos_ != null ? other.uiTargetStartPos_.Clone() : null;
          uiTargetStartRadius_ = other.uiTargetStartRadius_;
          uiTargetEndPos_ = other.uiTargetEndPos_ != null ? other.uiTargetEndPos_.Clone() : null;
          uiTargetEndRadius_ = other.uiTargetEndRadius_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientProtegoPattern Clone() {
          return new ClientProtegoPattern(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ui_target_start_pos" field.</summary>
        public const int UiTargetStartPosFieldNumber = 2;
        private global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern.Types.Vector2 uiTargetStartPos_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern.Types.Vector2 UiTargetStartPos {
          get { return uiTargetStartPos_; }
          set {
            uiTargetStartPos_ = value;
          }
        }

        /// <summary>Field number for the "ui_target_start_radius" field.</summary>
        public const int UiTargetStartRadiusFieldNumber = 3;
        private float uiTargetStartRadius_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float UiTargetStartRadius {
          get { return uiTargetStartRadius_; }
          set {
            uiTargetStartRadius_ = value;
          }
        }

        /// <summary>Field number for the "ui_target_end_pos" field.</summary>
        public const int UiTargetEndPosFieldNumber = 4;
        private global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern.Types.Vector2 uiTargetEndPos_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern.Types.Vector2 UiTargetEndPos {
          get { return uiTargetEndPos_; }
          set {
            uiTargetEndPos_ = value;
          }
        }

        /// <summary>Field number for the "ui_target_end_radius" field.</summary>
        public const int UiTargetEndRadiusFieldNumber = 5;
        private float uiTargetEndRadius_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float UiTargetEndRadius {
          get { return uiTargetEndRadius_; }
          set {
            uiTargetEndRadius_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientProtegoPattern);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientProtegoPattern other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (!object.Equals(UiTargetStartPos, other.UiTargetStartPos)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UiTargetStartRadius, other.UiTargetStartRadius)) return false;
          if (!object.Equals(UiTargetEndPos, other.UiTargetEndPos)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UiTargetEndRadius, other.UiTargetEndRadius)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (uiTargetStartPos_ != null) hash ^= UiTargetStartPos.GetHashCode();
          if (UiTargetStartRadius != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UiTargetStartRadius);
          if (uiTargetEndPos_ != null) hash ^= UiTargetEndPos.GetHashCode();
          if (UiTargetEndRadius != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UiTargetEndRadius);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (uiTargetStartPos_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(UiTargetStartPos);
          }
          if (UiTargetStartRadius != 0F) {
            output.WriteRawTag(29);
            output.WriteFloat(UiTargetStartRadius);
          }
          if (uiTargetEndPos_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(UiTargetEndPos);
          }
          if (UiTargetEndRadius != 0F) {
            output.WriteRawTag(45);
            output.WriteFloat(UiTargetEndRadius);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (uiTargetStartPos_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(UiTargetStartPos);
          }
          if (UiTargetStartRadius != 0F) {
            size += 1 + 4;
          }
          if (uiTargetEndPos_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(UiTargetEndPos);
          }
          if (UiTargetEndRadius != 0F) {
            size += 1 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientProtegoPattern other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.uiTargetStartPos_ != null) {
            if (uiTargetStartPos_ == null) {
              UiTargetStartPos = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern.Types.Vector2();
            }
            UiTargetStartPos.MergeFrom(other.UiTargetStartPos);
          }
          if (other.UiTargetStartRadius != 0F) {
            UiTargetStartRadius = other.UiTargetStartRadius;
          }
          if (other.uiTargetEndPos_ != null) {
            if (uiTargetEndPos_ == null) {
              UiTargetEndPos = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern.Types.Vector2();
            }
            UiTargetEndPos.MergeFrom(other.UiTargetEndPos);
          }
          if (other.UiTargetEndRadius != 0F) {
            UiTargetEndRadius = other.UiTargetEndRadius;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                if (uiTargetStartPos_ == null) {
                  UiTargetStartPos = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern.Types.Vector2();
                }
                input.ReadMessage(UiTargetStartPos);
                break;
              }
              case 29: {
                UiTargetStartRadius = input.ReadFloat();
                break;
              }
              case 34: {
                if (uiTargetEndPos_ == null) {
                  UiTargetEndPos = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern.Types.Vector2();
                }
                input.ReadMessage(UiTargetEndPos);
                break;
              }
              case 45: {
                UiTargetEndRadius = input.ReadFloat();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ClientProtegoPattern message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Vector2 : pb::IMessage<Vector2> {
            private static readonly pb::MessageParser<Vector2> _parser = new pb::MessageParser<Vector2>(() => new Vector2());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Vector2> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProtegoPattern.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Vector2() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Vector2(Vector2 other) : this() {
              x_ = other.x_;
              y_ = other.y_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Vector2 Clone() {
              return new Vector2(this);
            }

            /// <summary>Field number for the "x" field.</summary>
            public const int XFieldNumber = 1;
            private float x_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public float X {
              get { return x_; }
              set {
                x_ = value;
              }
            }

            /// <summary>Field number for the "y" field.</summary>
            public const int YFieldNumber = 2;
            private float y_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public float Y {
              get { return y_; }
              set {
                y_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Vector2);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Vector2 other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
              if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (X != 0F) {
                output.WriteRawTag(13);
                output.WriteFloat(X);
              }
              if (Y != 0F) {
                output.WriteRawTag(21);
                output.WriteFloat(Y);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (X != 0F) {
                size += 1 + 4;
              }
              if (Y != 0F) {
                size += 1 + 4;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Vector2 other) {
              if (other == null) {
                return;
              }
              if (other.X != 0F) {
                X = other.X;
              }
              if (other.Y != 0F) {
                Y = other.Y;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 13: {
                    X = input.ReadFloat();
                    break;
                  }
                  case 21: {
                    Y = input.ReadFloat();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class ClientProfession : pb::IMessage<ClientProfession> {
        private static readonly pb::MessageParser<ClientProfession> _parser = new pb::MessageParser<ClientProfession>(() => new ClientProfession());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientProfession> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[15]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientProfession() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientProfession(ClientProfession other) : this() {
          id_ = other.id_;
          displayOrder_ = other.displayOrder_;
          name_ = other.name_;
          desc_ = other.desc_;
          icon_ = other.icon_;
          mentorName_ = other.mentorName_;
          mentorDesc_ = other.mentorDesc_;
          mentorIcon_ = other.mentorIcon_;
          screenBackground_ = other.screenBackground_;
          iconStamp_ = other.iconStamp_;
          screenBackgroundHeader_ = other.screenBackgroundHeader_;
          showComingSoon_ = other.showComingSoon_;
          showProfessionRankMeter_ = other.showProfessionRankMeter_;
          professionActivatedSfx_ = other.professionActivatedSfx_;
          professionRanksMap_ = other.professionRanksMap_.Clone();
          enemyAffinityIcon_ = other.enemyAffinityIcon_;
          enemyAffinityName_ = other.enemyAffinityName_;
          affinityDesc_ = other.affinityDesc_;
          professionColor_ = other.professionColor_ != null ? other.professionColor_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientProfession Clone() {
          return new ClientProfession(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "display_order" field.</summary>
        public const int DisplayOrderFieldNumber = 2;
        private int displayOrder_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int DisplayOrder {
          get { return displayOrder_; }
          set {
            displayOrder_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 3;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "desc" field.</summary>
        public const int DescFieldNumber = 4;
        private string desc_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Desc {
          get { return desc_; }
          set {
            desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "icon" field.</summary>
        public const int IconFieldNumber = 5;
        private string icon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Icon {
          get { return icon_; }
          set {
            icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "mentor_name" field.</summary>
        public const int MentorNameFieldNumber = 6;
        private string mentorName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MentorName {
          get { return mentorName_; }
          set {
            mentorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "mentor_desc" field.</summary>
        public const int MentorDescFieldNumber = 7;
        private string mentorDesc_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MentorDesc {
          get { return mentorDesc_; }
          set {
            mentorDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "mentor_icon" field.</summary>
        public const int MentorIconFieldNumber = 8;
        private string mentorIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MentorIcon {
          get { return mentorIcon_; }
          set {
            mentorIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "screen_background" field.</summary>
        public const int ScreenBackgroundFieldNumber = 9;
        private string screenBackground_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ScreenBackground {
          get { return screenBackground_; }
          set {
            screenBackground_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "icon_stamp" field.</summary>
        public const int IconStampFieldNumber = 10;
        private string iconStamp_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string IconStamp {
          get { return iconStamp_; }
          set {
            iconStamp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "screen_background_header" field.</summary>
        public const int ScreenBackgroundHeaderFieldNumber = 11;
        private string screenBackgroundHeader_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ScreenBackgroundHeader {
          get { return screenBackgroundHeader_; }
          set {
            screenBackgroundHeader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "show_coming_soon" field.</summary>
        public const int ShowComingSoonFieldNumber = 12;
        private bool showComingSoon_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ShowComingSoon {
          get { return showComingSoon_; }
          set {
            showComingSoon_ = value;
          }
        }

        /// <summary>Field number for the "show_profession_rank_meter" field.</summary>
        public const int ShowProfessionRankMeterFieldNumber = 14;
        private bool showProfessionRankMeter_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ShowProfessionRankMeter {
          get { return showProfessionRankMeter_; }
          set {
            showProfessionRankMeter_ = value;
          }
        }

        /// <summary>Field number for the "profession_activated_sfx" field.</summary>
        public const int ProfessionActivatedSfxFieldNumber = 15;
        private string professionActivatedSfx_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ProfessionActivatedSfx {
          get { return professionActivatedSfx_; }
          set {
            professionActivatedSfx_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "profession_ranks_map" field.</summary>
        public const int ProfessionRanksMapFieldNumber = 16;
        private static readonly pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank>.Codec _map_professionRanksMap_codec
            = new pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Parser), 130);
        private readonly pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank> professionRanksMap_ = new pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank> ProfessionRanksMap {
          get { return professionRanksMap_; }
        }

        /// <summary>Field number for the "enemy_affinity_icon" field.</summary>
        public const int EnemyAffinityIconFieldNumber = 17;
        private string enemyAffinityIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EnemyAffinityIcon {
          get { return enemyAffinityIcon_; }
          set {
            enemyAffinityIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "enemy_affinity_name" field.</summary>
        public const int EnemyAffinityNameFieldNumber = 18;
        private string enemyAffinityName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EnemyAffinityName {
          get { return enemyAffinityName_; }
          set {
            enemyAffinityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "affinity_desc" field.</summary>
        public const int AffinityDescFieldNumber = 19;
        private string affinityDesc_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AffinityDesc {
          get { return affinityDesc_; }
          set {
            affinityDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "profession_color" field.</summary>
        public const int ProfessionColorFieldNumber = 20;
        private global::WUProtos.Data.Color professionColor_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color ProfessionColor {
          get { return professionColor_; }
          set {
            professionColor_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientProfession);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientProfession other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (DisplayOrder != other.DisplayOrder) return false;
          if (Name != other.Name) return false;
          if (Desc != other.Desc) return false;
          if (Icon != other.Icon) return false;
          if (MentorName != other.MentorName) return false;
          if (MentorDesc != other.MentorDesc) return false;
          if (MentorIcon != other.MentorIcon) return false;
          if (ScreenBackground != other.ScreenBackground) return false;
          if (IconStamp != other.IconStamp) return false;
          if (ScreenBackgroundHeader != other.ScreenBackgroundHeader) return false;
          if (ShowComingSoon != other.ShowComingSoon) return false;
          if (ShowProfessionRankMeter != other.ShowProfessionRankMeter) return false;
          if (ProfessionActivatedSfx != other.ProfessionActivatedSfx) return false;
          if (!ProfessionRanksMap.Equals(other.ProfessionRanksMap)) return false;
          if (EnemyAffinityIcon != other.EnemyAffinityIcon) return false;
          if (EnemyAffinityName != other.EnemyAffinityName) return false;
          if (AffinityDesc != other.AffinityDesc) return false;
          if (!object.Equals(ProfessionColor, other.ProfessionColor)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (DisplayOrder != 0) hash ^= DisplayOrder.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Desc.Length != 0) hash ^= Desc.GetHashCode();
          if (Icon.Length != 0) hash ^= Icon.GetHashCode();
          if (MentorName.Length != 0) hash ^= MentorName.GetHashCode();
          if (MentorDesc.Length != 0) hash ^= MentorDesc.GetHashCode();
          if (MentorIcon.Length != 0) hash ^= MentorIcon.GetHashCode();
          if (ScreenBackground.Length != 0) hash ^= ScreenBackground.GetHashCode();
          if (IconStamp.Length != 0) hash ^= IconStamp.GetHashCode();
          if (ScreenBackgroundHeader.Length != 0) hash ^= ScreenBackgroundHeader.GetHashCode();
          if (ShowComingSoon != false) hash ^= ShowComingSoon.GetHashCode();
          if (ShowProfessionRankMeter != false) hash ^= ShowProfessionRankMeter.GetHashCode();
          if (ProfessionActivatedSfx.Length != 0) hash ^= ProfessionActivatedSfx.GetHashCode();
          hash ^= ProfessionRanksMap.GetHashCode();
          if (EnemyAffinityIcon.Length != 0) hash ^= EnemyAffinityIcon.GetHashCode();
          if (EnemyAffinityName.Length != 0) hash ^= EnemyAffinityName.GetHashCode();
          if (AffinityDesc.Length != 0) hash ^= AffinityDesc.GetHashCode();
          if (professionColor_ != null) hash ^= ProfessionColor.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (DisplayOrder != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(DisplayOrder);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (Desc.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Desc);
          }
          if (Icon.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Icon);
          }
          if (MentorName.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(MentorName);
          }
          if (MentorDesc.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(MentorDesc);
          }
          if (MentorIcon.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(MentorIcon);
          }
          if (ScreenBackground.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(ScreenBackground);
          }
          if (IconStamp.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(IconStamp);
          }
          if (ScreenBackgroundHeader.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(ScreenBackgroundHeader);
          }
          if (ShowComingSoon != false) {
            output.WriteRawTag(96);
            output.WriteBool(ShowComingSoon);
          }
          if (ShowProfessionRankMeter != false) {
            output.WriteRawTag(112);
            output.WriteBool(ShowProfessionRankMeter);
          }
          if (ProfessionActivatedSfx.Length != 0) {
            output.WriteRawTag(122);
            output.WriteString(ProfessionActivatedSfx);
          }
          professionRanksMap_.WriteTo(output, _map_professionRanksMap_codec);
          if (EnemyAffinityIcon.Length != 0) {
            output.WriteRawTag(138, 1);
            output.WriteString(EnemyAffinityIcon);
          }
          if (EnemyAffinityName.Length != 0) {
            output.WriteRawTag(146, 1);
            output.WriteString(EnemyAffinityName);
          }
          if (AffinityDesc.Length != 0) {
            output.WriteRawTag(154, 1);
            output.WriteString(AffinityDesc);
          }
          if (professionColor_ != null) {
            output.WriteRawTag(162, 1);
            output.WriteMessage(ProfessionColor);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (DisplayOrder != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(DisplayOrder);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Desc.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
          }
          if (Icon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
          }
          if (MentorName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MentorName);
          }
          if (MentorDesc.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MentorDesc);
          }
          if (MentorIcon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MentorIcon);
          }
          if (ScreenBackground.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ScreenBackground);
          }
          if (IconStamp.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(IconStamp);
          }
          if (ScreenBackgroundHeader.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ScreenBackgroundHeader);
          }
          if (ShowComingSoon != false) {
            size += 1 + 1;
          }
          if (ShowProfessionRankMeter != false) {
            size += 1 + 1;
          }
          if (ProfessionActivatedSfx.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfessionActivatedSfx);
          }
          size += professionRanksMap_.CalculateSize(_map_professionRanksMap_codec);
          if (EnemyAffinityIcon.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(EnemyAffinityIcon);
          }
          if (EnemyAffinityName.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(EnemyAffinityName);
          }
          if (AffinityDesc.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(AffinityDesc);
          }
          if (professionColor_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(ProfessionColor);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientProfession other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.DisplayOrder != 0) {
            DisplayOrder = other.DisplayOrder;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Desc.Length != 0) {
            Desc = other.Desc;
          }
          if (other.Icon.Length != 0) {
            Icon = other.Icon;
          }
          if (other.MentorName.Length != 0) {
            MentorName = other.MentorName;
          }
          if (other.MentorDesc.Length != 0) {
            MentorDesc = other.MentorDesc;
          }
          if (other.MentorIcon.Length != 0) {
            MentorIcon = other.MentorIcon;
          }
          if (other.ScreenBackground.Length != 0) {
            ScreenBackground = other.ScreenBackground;
          }
          if (other.IconStamp.Length != 0) {
            IconStamp = other.IconStamp;
          }
          if (other.ScreenBackgroundHeader.Length != 0) {
            ScreenBackgroundHeader = other.ScreenBackgroundHeader;
          }
          if (other.ShowComingSoon != false) {
            ShowComingSoon = other.ShowComingSoon;
          }
          if (other.ShowProfessionRankMeter != false) {
            ShowProfessionRankMeter = other.ShowProfessionRankMeter;
          }
          if (other.ProfessionActivatedSfx.Length != 0) {
            ProfessionActivatedSfx = other.ProfessionActivatedSfx;
          }
          professionRanksMap_.Add(other.professionRanksMap_);
          if (other.EnemyAffinityIcon.Length != 0) {
            EnemyAffinityIcon = other.EnemyAffinityIcon;
          }
          if (other.EnemyAffinityName.Length != 0) {
            EnemyAffinityName = other.EnemyAffinityName;
          }
          if (other.AffinityDesc.Length != 0) {
            AffinityDesc = other.AffinityDesc;
          }
          if (other.professionColor_ != null) {
            if (professionColor_ == null) {
              ProfessionColor = new global::WUProtos.Data.Color();
            }
            ProfessionColor.MergeFrom(other.ProfessionColor);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 16: {
                DisplayOrder = input.ReadInt32();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
              case 34: {
                Desc = input.ReadString();
                break;
              }
              case 42: {
                Icon = input.ReadString();
                break;
              }
              case 50: {
                MentorName = input.ReadString();
                break;
              }
              case 58: {
                MentorDesc = input.ReadString();
                break;
              }
              case 66: {
                MentorIcon = input.ReadString();
                break;
              }
              case 74: {
                ScreenBackground = input.ReadString();
                break;
              }
              case 82: {
                IconStamp = input.ReadString();
                break;
              }
              case 90: {
                ScreenBackgroundHeader = input.ReadString();
                break;
              }
              case 96: {
                ShowComingSoon = input.ReadBool();
                break;
              }
              case 112: {
                ShowProfessionRankMeter = input.ReadBool();
                break;
              }
              case 122: {
                ProfessionActivatedSfx = input.ReadString();
                break;
              }
              case 130: {
                professionRanksMap_.AddEntriesFrom(input, _map_professionRanksMap_codec);
                break;
              }
              case 138: {
                EnemyAffinityIcon = input.ReadString();
                break;
              }
              case 146: {
                EnemyAffinityName = input.ReadString();
                break;
              }
              case 154: {
                AffinityDesc = input.ReadString();
                break;
              }
              case 162: {
                if (professionColor_ == null) {
                  ProfessionColor = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(ProfessionColor);
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientProfessionRank : pb::IMessage<ClientProfessionRank> {
        private static readonly pb::MessageParser<ClientProfessionRank> _parser = new pb::MessageParser<ClientProfessionRank>(() => new ClientProfessionRank());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientProfessionRank> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[16]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientProfessionRank() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientProfessionRank(ClientProfessionRank other) : this() {
          professionNodesMap_ = other.professionNodesMap_.Clone();
          name_ = other.name_;
          professionNodes_ = other.professionNodes_.Clone();
          imageUnlocked_ = other.imageUnlocked_;
          imageUnlockedOpen_ = other.imageUnlockedOpen_;
          imageLocked_ = other.imageLocked_;
          imageLockedOpen_ = other.imageLockedOpen_;
          professinRankOrder_ = other.professinRankOrder_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientProfessionRank Clone() {
          return new ClientProfessionRank(this);
        }

        /// <summary>Field number for the "profession_nodes_map" field.</summary>
        public const int ProfessionNodesMapFieldNumber = 1;
        private static readonly pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode>.Codec _map_professionNodesMap_codec
            = new pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode.Parser), 10);
        private readonly pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode> professionNodesMap_ = new pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode> ProfessionNodesMap {
          get { return professionNodesMap_; }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "profession_nodes" field.</summary>
        public const int ProfessionNodesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode> _repeated_professionNodes_codec
            = pb::FieldCodec.ForMessage(26, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode> professionNodes_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode> ProfessionNodes {
          get { return professionNodes_; }
        }

        /// <summary>Field number for the "image_unlocked" field.</summary>
        public const int ImageUnlockedFieldNumber = 4;
        private string imageUnlocked_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ImageUnlocked {
          get { return imageUnlocked_; }
          set {
            imageUnlocked_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "image_unlocked_open" field.</summary>
        public const int ImageUnlockedOpenFieldNumber = 5;
        private string imageUnlockedOpen_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ImageUnlockedOpen {
          get { return imageUnlockedOpen_; }
          set {
            imageUnlockedOpen_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "image_locked" field.</summary>
        public const int ImageLockedFieldNumber = 6;
        private string imageLocked_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ImageLocked {
          get { return imageLocked_; }
          set {
            imageLocked_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "image_locked_open" field.</summary>
        public const int ImageLockedOpenFieldNumber = 7;
        private string imageLockedOpen_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ImageLockedOpen {
          get { return imageLockedOpen_; }
          set {
            imageLockedOpen_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "professin_rank_order" field.</summary>
        public const int ProfessinRankOrderFieldNumber = 8;
        private int professinRankOrder_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ProfessinRankOrder {
          get { return professinRankOrder_; }
          set {
            professinRankOrder_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientProfessionRank);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientProfessionRank other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!ProfessionNodesMap.Equals(other.ProfessionNodesMap)) return false;
          if (Name != other.Name) return false;
          if(!professionNodes_.Equals(other.professionNodes_)) return false;
          if (ImageUnlocked != other.ImageUnlocked) return false;
          if (ImageUnlockedOpen != other.ImageUnlockedOpen) return false;
          if (ImageLocked != other.ImageLocked) return false;
          if (ImageLockedOpen != other.ImageLockedOpen) return false;
          if (ProfessinRankOrder != other.ProfessinRankOrder) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= ProfessionNodesMap.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          hash ^= professionNodes_.GetHashCode();
          if (ImageUnlocked.Length != 0) hash ^= ImageUnlocked.GetHashCode();
          if (ImageUnlockedOpen.Length != 0) hash ^= ImageUnlockedOpen.GetHashCode();
          if (ImageLocked.Length != 0) hash ^= ImageLocked.GetHashCode();
          if (ImageLockedOpen.Length != 0) hash ^= ImageLockedOpen.GetHashCode();
          if (ProfessinRankOrder != 0) hash ^= ProfessinRankOrder.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          professionNodesMap_.WriteTo(output, _map_professionNodesMap_codec);
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          professionNodes_.WriteTo(output, _repeated_professionNodes_codec);
          if (ImageUnlocked.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(ImageUnlocked);
          }
          if (ImageUnlockedOpen.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(ImageUnlockedOpen);
          }
          if (ImageLocked.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(ImageLocked);
          }
          if (ImageLockedOpen.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(ImageLockedOpen);
          }
          if (ProfessinRankOrder != 0) {
            output.WriteRawTag(64);
            output.WriteInt32(ProfessinRankOrder);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += professionNodesMap_.CalculateSize(_map_professionNodesMap_codec);
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          size += professionNodes_.CalculateSize(_repeated_professionNodes_codec);
          if (ImageUnlocked.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUnlocked);
          }
          if (ImageUnlockedOpen.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUnlockedOpen);
          }
          if (ImageLocked.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageLocked);
          }
          if (ImageLockedOpen.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageLockedOpen);
          }
          if (ProfessinRankOrder != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProfessinRankOrder);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientProfessionRank other) {
          if (other == null) {
            return;
          }
          professionNodesMap_.Add(other.professionNodesMap_);
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          professionNodes_.Add(other.professionNodes_);
          if (other.ImageUnlocked.Length != 0) {
            ImageUnlocked = other.ImageUnlocked;
          }
          if (other.ImageUnlockedOpen.Length != 0) {
            ImageUnlockedOpen = other.ImageUnlockedOpen;
          }
          if (other.ImageLocked.Length != 0) {
            ImageLocked = other.ImageLocked;
          }
          if (other.ImageLockedOpen.Length != 0) {
            ImageLockedOpen = other.ImageLockedOpen;
          }
          if (other.ProfessinRankOrder != 0) {
            ProfessinRankOrder = other.ProfessinRankOrder;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                professionNodesMap_.AddEntriesFrom(input, _map_professionNodesMap_codec);
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                professionNodes_.AddEntriesFrom(input, _repeated_professionNodes_codec);
                break;
              }
              case 34: {
                ImageUnlocked = input.ReadString();
                break;
              }
              case 42: {
                ImageUnlockedOpen = input.ReadString();
                break;
              }
              case 50: {
                ImageLocked = input.ReadString();
                break;
              }
              case 58: {
                ImageLockedOpen = input.ReadString();
                break;
              }
              case 64: {
                ProfessinRankOrder = input.ReadInt32();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ClientProfessionRank message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class ClientProfessionNode : pb::IMessage<ClientProfessionNode> {
            private static readonly pb::MessageParser<ClientProfessionNode> _parser = new pb::MessageParser<ClientProfessionNode>(() => new ClientProfessionNode());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ClientProfessionNode> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientProfessionNode() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientProfessionNode(ClientProfessionNode other) : this() {
              name_ = other.name_;
              icon_ = other.icon_;
              levels_ = other.levels_.Clone();
              unlockDesc_ = other.unlockDesc_;
              completedDesc_ = other.completedDesc_;
              completedIcon_ = other.completedIcon_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientProfessionNode Clone() {
              return new ClientProfessionNode(this);
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 1;
            private string name_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "icon" field.</summary>
            public const int IconFieldNumber = 2;
            private string icon_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Icon {
              get { return icon_; }
              set {
                icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "levels" field.</summary>
            public const int LevelsFieldNumber = 3;
            private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode.Types.ClientProfessionNodeLevel> _repeated_levels_codec
                = pb::FieldCodec.ForMessage(26, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode.Types.ClientProfessionNodeLevel.Parser);
            private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode.Types.ClientProfessionNodeLevel> levels_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode.Types.ClientProfessionNodeLevel>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode.Types.ClientProfessionNodeLevel> Levels {
              get { return levels_; }
            }

            /// <summary>Field number for the "unlock_desc" field.</summary>
            public const int UnlockDescFieldNumber = 4;
            private string unlockDesc_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string UnlockDesc {
              get { return unlockDesc_; }
              set {
                unlockDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "completed_desc" field.</summary>
            public const int CompletedDescFieldNumber = 5;
            private string completedDesc_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string CompletedDesc {
              get { return completedDesc_; }
              set {
                completedDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "completed_icon" field.</summary>
            public const int CompletedIconFieldNumber = 6;
            private string completedIcon_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string CompletedIcon {
              get { return completedIcon_; }
              set {
                completedIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ClientProfessionNode);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ClientProfessionNode other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Name != other.Name) return false;
              if (Icon != other.Icon) return false;
              if(!levels_.Equals(other.levels_)) return false;
              if (UnlockDesc != other.UnlockDesc) return false;
              if (CompletedDesc != other.CompletedDesc) return false;
              if (CompletedIcon != other.CompletedIcon) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              if (Icon.Length != 0) hash ^= Icon.GetHashCode();
              hash ^= levels_.GetHashCode();
              if (UnlockDesc.Length != 0) hash ^= UnlockDesc.GetHashCode();
              if (CompletedDesc.Length != 0) hash ^= CompletedDesc.GetHashCode();
              if (CompletedIcon.Length != 0) hash ^= CompletedIcon.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (Icon.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Icon);
              }
              levels_.WriteTo(output, _repeated_levels_codec);
              if (UnlockDesc.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(UnlockDesc);
              }
              if (CompletedDesc.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(CompletedDesc);
              }
              if (CompletedIcon.Length != 0) {
                output.WriteRawTag(50);
                output.WriteString(CompletedIcon);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (Icon.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
              }
              size += levels_.CalculateSize(_repeated_levels_codec);
              if (UnlockDesc.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(UnlockDesc);
              }
              if (CompletedDesc.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(CompletedDesc);
              }
              if (CompletedIcon.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(CompletedIcon);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ClientProfessionNode other) {
              if (other == null) {
                return;
              }
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              if (other.Icon.Length != 0) {
                Icon = other.Icon;
              }
              levels_.Add(other.levels_);
              if (other.UnlockDesc.Length != 0) {
                UnlockDesc = other.UnlockDesc;
              }
              if (other.CompletedDesc.Length != 0) {
                CompletedDesc = other.CompletedDesc;
              }
              if (other.CompletedIcon.Length != 0) {
                CompletedIcon = other.CompletedIcon;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 18: {
                    Icon = input.ReadString();
                    break;
                  }
                  case 26: {
                    levels_.AddEntriesFrom(input, _repeated_levels_codec);
                    break;
                  }
                  case 34: {
                    UnlockDesc = input.ReadString();
                    break;
                  }
                  case 42: {
                    CompletedDesc = input.ReadString();
                    break;
                  }
                  case 50: {
                    CompletedIcon = input.ReadString();
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the ClientProfessionNode message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class ClientProfessionNodeLevel : pb::IMessage<ClientProfessionNodeLevel> {
                private static readonly pb::MessageParser<ClientProfessionNodeLevel> _parser = new pb::MessageParser<ClientProfessionNodeLevel>(() => new ClientProfessionNodeLevel());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ClientProfessionNodeLevel> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientProfessionRank.Types.ClientProfessionNode.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientProfessionNodeLevel() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientProfessionNodeLevel(ClientProfessionNodeLevel other) : this() {
                  isGrantNewMapAbility_ = other.isGrantNewMapAbility_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientProfessionNodeLevel Clone() {
                  return new ClientProfessionNodeLevel(this);
                }

                /// <summary>Field number for the "is_grant_new_map_ability" field.</summary>
                public const int IsGrantNewMapAbilityFieldNumber = 1;
                private bool isGrantNewMapAbility_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool IsGrantNewMapAbility {
                  get { return isGrantNewMapAbility_; }
                  set {
                    isGrantNewMapAbility_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ClientProfessionNodeLevel);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ClientProfessionNodeLevel other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (IsGrantNewMapAbility != other.IsGrantNewMapAbility) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (IsGrantNewMapAbility != false) hash ^= IsGrantNewMapAbility.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (IsGrantNewMapAbility != false) {
                    output.WriteRawTag(8);
                    output.WriteBool(IsGrantNewMapAbility);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (IsGrantNewMapAbility != false) {
                    size += 1 + 1;
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ClientProfessionNodeLevel other) {
                  if (other == null) {
                    return;
                  }
                  if (other.IsGrantNewMapAbility != false) {
                    IsGrantNewMapAbility = other.IsGrantNewMapAbility;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        IsGrantNewMapAbility = input.ReadBool();
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

        }
        #endregion

      }

      public sealed partial class ClientPortkey : pb::IMessage<ClientPortkey> {
        private static readonly pb::MessageParser<ClientPortkey> _parser = new pb::MessageParser<ClientPortkey>(() => new ClientPortkey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientPortkey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[17]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientPortkey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientPortkey(ClientPortkey other) : this() {
          id_ = other.id_;
          name_ = other.name_;
          icon_ = other.icon_;
          localizedCompleteText_ = other.localizedCompleteText_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientPortkey Clone() {
          return new ClientPortkey(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "icon" field.</summary>
        public const int IconFieldNumber = 3;
        private string icon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Icon {
          get { return icon_; }
          set {
            icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "localized_complete_text" field.</summary>
        public const int LocalizedCompleteTextFieldNumber = 4;
        private string localizedCompleteText_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LocalizedCompleteText {
          get { return localizedCompleteText_; }
          set {
            localizedCompleteText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientPortkey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientPortkey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if (Icon != other.Icon) return false;
          if (LocalizedCompleteText != other.LocalizedCompleteText) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Icon.Length != 0) hash ^= Icon.GetHashCode();
          if (LocalizedCompleteText.Length != 0) hash ^= LocalizedCompleteText.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Icon.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Icon);
          }
          if (LocalizedCompleteText.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LocalizedCompleteText);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Icon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
          }
          if (LocalizedCompleteText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalizedCompleteText);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientPortkey other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Icon.Length != 0) {
            Icon = other.Icon;
          }
          if (other.LocalizedCompleteText.Length != 0) {
            LocalizedCompleteText = other.LocalizedCompleteText;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                Icon = input.ReadString();
                break;
              }
              case 34: {
                LocalizedCompleteText = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientOutpostTemplate : pb::IMessage<ClientOutpostTemplate> {
        private static readonly pb::MessageParser<ClientOutpostTemplate> _parser = new pb::MessageParser<ClientOutpostTemplate>(() => new ClientOutpostTemplate());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientOutpostTemplate> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[18]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientOutpostTemplate() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientOutpostTemplate(ClientOutpostTemplate other) : this() {
          id_ = other.id_;
          interior_ = other.interior_;
          exterior_ = other.exterior_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientOutpostTemplate Clone() {
          return new ClientOutpostTemplate(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "interior" field.</summary>
        public const int InteriorFieldNumber = 2;
        private string interior_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Interior {
          get { return interior_; }
          set {
            interior_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "exterior" field.</summary>
        public const int ExteriorFieldNumber = 3;
        private string exterior_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Exterior {
          get { return exterior_; }
          set {
            exterior_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientOutpostTemplate);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientOutpostTemplate other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Interior != other.Interior) return false;
          if (Exterior != other.Exterior) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Interior.Length != 0) hash ^= Interior.GetHashCode();
          if (Exterior.Length != 0) hash ^= Exterior.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Interior.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Interior);
          }
          if (Exterior.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Exterior);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Interior.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Interior);
          }
          if (Exterior.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Exterior);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientOutpostTemplate other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Interior.Length != 0) {
            Interior = other.Interior;
          }
          if (other.Exterior.Length != 0) {
            Exterior = other.Exterior;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Interior = input.ReadString();
                break;
              }
              case 26: {
                Exterior = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientMapIngredient : pb::IMessage<ClientMapIngredient> {
        private static readonly pb::MessageParser<ClientMapIngredient> _parser = new pb::MessageParser<ClientMapIngredient>(() => new ClientMapIngredient());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientMapIngredient> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[19]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapIngredient() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapIngredient(ClientMapIngredient other) : this() {
          id_ = other.id_;
          prefab_ = other.prefab_;
          hideAtCapacity_ = other.hideAtCapacity_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapIngredient Clone() {
          return new ClientMapIngredient(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "prefab" field.</summary>
        public const int PrefabFieldNumber = 2;
        private string prefab_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Prefab {
          get { return prefab_; }
          set {
            prefab_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "hide_at_capacity" field.</summary>
        public const int HideAtCapacityFieldNumber = 3;
        private bool hideAtCapacity_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HideAtCapacity {
          get { return hideAtCapacity_; }
          set {
            hideAtCapacity_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientMapIngredient);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientMapIngredient other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Prefab != other.Prefab) return false;
          if (HideAtCapacity != other.HideAtCapacity) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Prefab.Length != 0) hash ^= Prefab.GetHashCode();
          if (HideAtCapacity != false) hash ^= HideAtCapacity.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Prefab.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Prefab);
          }
          if (HideAtCapacity != false) {
            output.WriteRawTag(24);
            output.WriteBool(HideAtCapacity);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Prefab.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Prefab);
          }
          if (HideAtCapacity != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientMapIngredient other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Prefab.Length != 0) {
            Prefab = other.Prefab;
          }
          if (other.HideAtCapacity != false) {
            HideAtCapacity = other.HideAtCapacity;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Prefab = input.ReadString();
                break;
              }
              case 24: {
                HideAtCapacity = input.ReadBool();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientMapAbility : pb::IMessage<ClientMapAbility> {
        private static readonly pb::MessageParser<ClientMapAbility> _parser = new pb::MessageParser<ClientMapAbility>(() => new ClientMapAbility());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientMapAbility> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[20]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapAbility() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapAbility(ClientMapAbility other) : this() {
          id_ = other.id_;
          name_ = other.name_;
          icon_ = other.icon_;
          description_ = other.description_;
          effectSprite_ = other.effectSprite_;
          statusIcon_ = other.statusIcon_;
          slot_ = other.slot_;
          effectPrefab_ = other.effectPrefab_;
          rule_ = other.rule_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMapAbility Clone() {
          return new ClientMapAbility(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "icon" field.</summary>
        public const int IconFieldNumber = 3;
        private string icon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Icon {
          get { return icon_; }
          set {
            icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 4;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "effect_sprite" field.</summary>
        public const int EffectSpriteFieldNumber = 5;
        private string effectSprite_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EffectSprite {
          get { return effectSprite_; }
          set {
            effectSprite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "status_icon" field.</summary>
        public const int StatusIconFieldNumber = 6;
        private string statusIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StatusIcon {
          get { return statusIcon_; }
          set {
            statusIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "slot" field.</summary>
        public const int SlotFieldNumber = 7;
        private int slot_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Slot {
          get { return slot_; }
          set {
            slot_ = value;
          }
        }

        /// <summary>Field number for the "effect_prefab" field.</summary>
        public const int EffectPrefabFieldNumber = 8;
        private string effectPrefab_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EffectPrefab {
          get { return effectPrefab_; }
          set {
            effectPrefab_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "rule" field.</summary>
        public const int RuleFieldNumber = 9;
        private global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapAbility.Types.AdditionalSelectionRule rule_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapAbility.Types.AdditionalSelectionRule Rule {
          get { return rule_; }
          set {
            rule_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientMapAbility);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientMapAbility other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if (Icon != other.Icon) return false;
          if (Description != other.Description) return false;
          if (EffectSprite != other.EffectSprite) return false;
          if (StatusIcon != other.StatusIcon) return false;
          if (Slot != other.Slot) return false;
          if (EffectPrefab != other.EffectPrefab) return false;
          if (Rule != other.Rule) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Icon.Length != 0) hash ^= Icon.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (EffectSprite.Length != 0) hash ^= EffectSprite.GetHashCode();
          if (StatusIcon.Length != 0) hash ^= StatusIcon.GetHashCode();
          if (Slot != 0) hash ^= Slot.GetHashCode();
          if (EffectPrefab.Length != 0) hash ^= EffectPrefab.GetHashCode();
          if (Rule != 0) hash ^= Rule.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Icon.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Icon);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Description);
          }
          if (EffectSprite.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(EffectSprite);
          }
          if (StatusIcon.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(StatusIcon);
          }
          if (Slot != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(Slot);
          }
          if (EffectPrefab.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(EffectPrefab);
          }
          if (Rule != 0) {
            output.WriteRawTag(72);
            output.WriteEnum((int) Rule);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Icon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (EffectSprite.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EffectSprite);
          }
          if (StatusIcon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusIcon);
          }
          if (Slot != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Slot);
          }
          if (EffectPrefab.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EffectPrefab);
          }
          if (Rule != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Rule);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientMapAbility other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Icon.Length != 0) {
            Icon = other.Icon;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          if (other.EffectSprite.Length != 0) {
            EffectSprite = other.EffectSprite;
          }
          if (other.StatusIcon.Length != 0) {
            StatusIcon = other.StatusIcon;
          }
          if (other.Slot != 0) {
            Slot = other.Slot;
          }
          if (other.EffectPrefab.Length != 0) {
            EffectPrefab = other.EffectPrefab;
          }
          if (other.Rule != 0) {
            Rule = other.Rule;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                Icon = input.ReadString();
                break;
              }
              case 34: {
                Description = input.ReadString();
                break;
              }
              case 42: {
                EffectSprite = input.ReadString();
                break;
              }
              case 50: {
                StatusIcon = input.ReadString();
                break;
              }
              case 56: {
                Slot = input.ReadInt32();
                break;
              }
              case 66: {
                EffectPrefab = input.ReadString();
                break;
              }
              case 72: {
                Rule = (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientMapAbility.Types.AdditionalSelectionRule) input.ReadEnum();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ClientMapAbility message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum AdditionalSelectionRule {
            [pbr::OriginalName("none_additional_selection")] NoneAdditionalSelection = 0,
            [pbr::OriginalName("no_if_max_health")] NoIfMaxHealth = 1,
            [pbr::OriginalName("no_if_max_focus")] NoIfMaxFocus = 2,
            [pbr::OriginalName("no_if_alive")] NoIfAlive = 3,
          }

        }
        #endregion

      }

      public sealed partial class ClientHaptic : pb::IMessage<ClientHaptic> {
        private static readonly pb::MessageParser<ClientHaptic> _parser = new pb::MessageParser<ClientHaptic>(() => new ClientHaptic());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientHaptic> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[21]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientHaptic() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientHaptic(ClientHaptic other) : this() {
          id_ = other.id_;
          ioswaitTimings_ = other.ioswaitTimings_.Clone();
          ioshapticTypes_ = other.ioshapticTypes_.Clone();
          androidWaitTimings_ = other.androidWaitTimings_.Clone();
          androidAmplitudes_ = other.androidAmplitudes_.Clone();
          androidDurations_ = other.androidDurations_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientHaptic Clone() {
          return new ClientHaptic(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ioswait_timings" field.</summary>
        public const int IoswaitTimingsFieldNumber = 2;
        private static readonly pb::FieldCodec<int> _repeated_ioswaitTimings_codec
            = pb::FieldCodec.ForInt32(18);
        private readonly pbc::RepeatedField<int> ioswaitTimings_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> IoswaitTimings {
          get { return ioswaitTimings_; }
        }

        /// <summary>Field number for the "ioshaptic_types" field.</summary>
        public const int IoshapticTypesFieldNumber = 3;
        private static readonly pb::FieldCodec<int> _repeated_ioshapticTypes_codec
            = pb::FieldCodec.ForInt32(26);
        private readonly pbc::RepeatedField<int> ioshapticTypes_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> IoshapticTypes {
          get { return ioshapticTypes_; }
        }

        /// <summary>Field number for the "android_wait_timings" field.</summary>
        public const int AndroidWaitTimingsFieldNumber = 4;
        private static readonly pb::FieldCodec<int> _repeated_androidWaitTimings_codec
            = pb::FieldCodec.ForInt32(34);
        private readonly pbc::RepeatedField<int> androidWaitTimings_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> AndroidWaitTimings {
          get { return androidWaitTimings_; }
        }

        /// <summary>Field number for the "android_amplitudes" field.</summary>
        public const int AndroidAmplitudesFieldNumber = 5;
        private static readonly pb::FieldCodec<int> _repeated_androidAmplitudes_codec
            = pb::FieldCodec.ForInt32(42);
        private readonly pbc::RepeatedField<int> androidAmplitudes_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> AndroidAmplitudes {
          get { return androidAmplitudes_; }
        }

        /// <summary>Field number for the "android_durations" field.</summary>
        public const int AndroidDurationsFieldNumber = 6;
        private static readonly pb::FieldCodec<int> _repeated_androidDurations_codec
            = pb::FieldCodec.ForInt32(50);
        private readonly pbc::RepeatedField<int> androidDurations_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> AndroidDurations {
          get { return androidDurations_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientHaptic);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientHaptic other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if(!ioswaitTimings_.Equals(other.ioswaitTimings_)) return false;
          if(!ioshapticTypes_.Equals(other.ioshapticTypes_)) return false;
          if(!androidWaitTimings_.Equals(other.androidWaitTimings_)) return false;
          if(!androidAmplitudes_.Equals(other.androidAmplitudes_)) return false;
          if(!androidDurations_.Equals(other.androidDurations_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          hash ^= ioswaitTimings_.GetHashCode();
          hash ^= ioshapticTypes_.GetHashCode();
          hash ^= androidWaitTimings_.GetHashCode();
          hash ^= androidAmplitudes_.GetHashCode();
          hash ^= androidDurations_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          ioswaitTimings_.WriteTo(output, _repeated_ioswaitTimings_codec);
          ioshapticTypes_.WriteTo(output, _repeated_ioshapticTypes_codec);
          androidWaitTimings_.WriteTo(output, _repeated_androidWaitTimings_codec);
          androidAmplitudes_.WriteTo(output, _repeated_androidAmplitudes_codec);
          androidDurations_.WriteTo(output, _repeated_androidDurations_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          size += ioswaitTimings_.CalculateSize(_repeated_ioswaitTimings_codec);
          size += ioshapticTypes_.CalculateSize(_repeated_ioshapticTypes_codec);
          size += androidWaitTimings_.CalculateSize(_repeated_androidWaitTimings_codec);
          size += androidAmplitudes_.CalculateSize(_repeated_androidAmplitudes_codec);
          size += androidDurations_.CalculateSize(_repeated_androidDurations_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientHaptic other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          ioswaitTimings_.Add(other.ioswaitTimings_);
          ioshapticTypes_.Add(other.ioshapticTypes_);
          androidWaitTimings_.Add(other.androidWaitTimings_);
          androidAmplitudes_.Add(other.androidAmplitudes_);
          androidDurations_.Add(other.androidDurations_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18:
              case 16: {
                ioswaitTimings_.AddEntriesFrom(input, _repeated_ioswaitTimings_codec);
                break;
              }
              case 26:
              case 24: {
                ioshapticTypes_.AddEntriesFrom(input, _repeated_ioshapticTypes_codec);
                break;
              }
              case 34:
              case 32: {
                androidWaitTimings_.AddEntriesFrom(input, _repeated_androidWaitTimings_codec);
                break;
              }
              case 42:
              case 40: {
                androidAmplitudes_.AddEntriesFrom(input, _repeated_androidAmplitudes_codec);
                break;
              }
              case 50:
              case 48: {
                androidDurations_.AddEntriesFrom(input, _repeated_androidDurations_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientEvent : pb::IMessage<ClientEvent> {
        private static readonly pb::MessageParser<ClientEvent> _parser = new pb::MessageParser<ClientEvent>(() => new ClientEvent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientEvent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[22]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientEvent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientEvent(ClientEvent other) : this() {
          id_ = other.id_;
          isUserFacing_ = other.isUserFacing_;
          titleText_ = other.titleText_;
          descriptionText_ = other.descriptionText_;
          image_ = other.image_;
          encounterIcon_ = other.encounterIcon_;
          encounterHudTooltipText_ = other.encounterHudTooltipText_;
          encounterStartText_ = other.encounterStartText_;
          questUiFrameColor_ = other.questUiFrameColor_ != null ? other.questUiFrameColor_.Clone() : null;
          questUiBackgroundColor_ = other.questUiBackgroundColor_ != null ? other.questUiBackgroundColor_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientEvent Clone() {
          return new ClientEvent(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "is_user_facing" field.</summary>
        public const int IsUserFacingFieldNumber = 2;
        private bool isUserFacing_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsUserFacing {
          get { return isUserFacing_; }
          set {
            isUserFacing_ = value;
          }
        }

        /// <summary>Field number for the "title_text" field.</summary>
        public const int TitleTextFieldNumber = 3;
        private string titleText_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TitleText {
          get { return titleText_; }
          set {
            titleText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description_text" field.</summary>
        public const int DescriptionTextFieldNumber = 4;
        private string descriptionText_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DescriptionText {
          get { return descriptionText_; }
          set {
            descriptionText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "image" field.</summary>
        public const int ImageFieldNumber = 5;
        private string image_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Image {
          get { return image_; }
          set {
            image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "encounter_icon" field.</summary>
        public const int EncounterIconFieldNumber = 6;
        private string encounterIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EncounterIcon {
          get { return encounterIcon_; }
          set {
            encounterIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "encounter_hud_tooltip_text" field.</summary>
        public const int EncounterHudTooltipTextFieldNumber = 7;
        private string encounterHudTooltipText_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EncounterHudTooltipText {
          get { return encounterHudTooltipText_; }
          set {
            encounterHudTooltipText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "encounter_start_text" field.</summary>
        public const int EncounterStartTextFieldNumber = 8;
        private string encounterStartText_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EncounterStartText {
          get { return encounterStartText_; }
          set {
            encounterStartText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "quest_ui_frame_color" field.</summary>
        public const int QuestUiFrameColorFieldNumber = 9;
        private global::WUProtos.Data.Color questUiFrameColor_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color QuestUiFrameColor {
          get { return questUiFrameColor_; }
          set {
            questUiFrameColor_ = value;
          }
        }

        /// <summary>Field number for the "quest_ui_background_color" field.</summary>
        public const int QuestUiBackgroundColorFieldNumber = 10;
        private global::WUProtos.Data.Color questUiBackgroundColor_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color QuestUiBackgroundColor {
          get { return questUiBackgroundColor_; }
          set {
            questUiBackgroundColor_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientEvent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientEvent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (IsUserFacing != other.IsUserFacing) return false;
          if (TitleText != other.TitleText) return false;
          if (DescriptionText != other.DescriptionText) return false;
          if (Image != other.Image) return false;
          if (EncounterIcon != other.EncounterIcon) return false;
          if (EncounterHudTooltipText != other.EncounterHudTooltipText) return false;
          if (EncounterStartText != other.EncounterStartText) return false;
          if (!object.Equals(QuestUiFrameColor, other.QuestUiFrameColor)) return false;
          if (!object.Equals(QuestUiBackgroundColor, other.QuestUiBackgroundColor)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (IsUserFacing != false) hash ^= IsUserFacing.GetHashCode();
          if (TitleText.Length != 0) hash ^= TitleText.GetHashCode();
          if (DescriptionText.Length != 0) hash ^= DescriptionText.GetHashCode();
          if (Image.Length != 0) hash ^= Image.GetHashCode();
          if (EncounterIcon.Length != 0) hash ^= EncounterIcon.GetHashCode();
          if (EncounterHudTooltipText.Length != 0) hash ^= EncounterHudTooltipText.GetHashCode();
          if (EncounterStartText.Length != 0) hash ^= EncounterStartText.GetHashCode();
          if (questUiFrameColor_ != null) hash ^= QuestUiFrameColor.GetHashCode();
          if (questUiBackgroundColor_ != null) hash ^= QuestUiBackgroundColor.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (IsUserFacing != false) {
            output.WriteRawTag(16);
            output.WriteBool(IsUserFacing);
          }
          if (TitleText.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(TitleText);
          }
          if (DescriptionText.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(DescriptionText);
          }
          if (Image.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Image);
          }
          if (EncounterIcon.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(EncounterIcon);
          }
          if (EncounterHudTooltipText.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(EncounterHudTooltipText);
          }
          if (EncounterStartText.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(EncounterStartText);
          }
          if (questUiFrameColor_ != null) {
            output.WriteRawTag(74);
            output.WriteMessage(QuestUiFrameColor);
          }
          if (questUiBackgroundColor_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(QuestUiBackgroundColor);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (IsUserFacing != false) {
            size += 1 + 1;
          }
          if (TitleText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleText);
          }
          if (DescriptionText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionText);
          }
          if (Image.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
          }
          if (EncounterIcon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterIcon);
          }
          if (EncounterHudTooltipText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterHudTooltipText);
          }
          if (EncounterStartText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterStartText);
          }
          if (questUiFrameColor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(QuestUiFrameColor);
          }
          if (questUiBackgroundColor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(QuestUiBackgroundColor);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientEvent other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.IsUserFacing != false) {
            IsUserFacing = other.IsUserFacing;
          }
          if (other.TitleText.Length != 0) {
            TitleText = other.TitleText;
          }
          if (other.DescriptionText.Length != 0) {
            DescriptionText = other.DescriptionText;
          }
          if (other.Image.Length != 0) {
            Image = other.Image;
          }
          if (other.EncounterIcon.Length != 0) {
            EncounterIcon = other.EncounterIcon;
          }
          if (other.EncounterHudTooltipText.Length != 0) {
            EncounterHudTooltipText = other.EncounterHudTooltipText;
          }
          if (other.EncounterStartText.Length != 0) {
            EncounterStartText = other.EncounterStartText;
          }
          if (other.questUiFrameColor_ != null) {
            if (questUiFrameColor_ == null) {
              QuestUiFrameColor = new global::WUProtos.Data.Color();
            }
            QuestUiFrameColor.MergeFrom(other.QuestUiFrameColor);
          }
          if (other.questUiBackgroundColor_ != null) {
            if (questUiBackgroundColor_ == null) {
              QuestUiBackgroundColor = new global::WUProtos.Data.Color();
            }
            QuestUiBackgroundColor.MergeFrom(other.QuestUiBackgroundColor);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 16: {
                IsUserFacing = input.ReadBool();
                break;
              }
              case 26: {
                TitleText = input.ReadString();
                break;
              }
              case 34: {
                DescriptionText = input.ReadString();
                break;
              }
              case 42: {
                Image = input.ReadString();
                break;
              }
              case 50: {
                EncounterIcon = input.ReadString();
                break;
              }
              case 58: {
                EncounterHudTooltipText = input.ReadString();
                break;
              }
              case 66: {
                EncounterStartText = input.ReadString();
                break;
              }
              case 74: {
                if (questUiFrameColor_ == null) {
                  QuestUiFrameColor = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(QuestUiFrameColor);
                break;
              }
              case 82: {
                if (questUiBackgroundColor_ == null) {
                  QuestUiBackgroundColor = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(QuestUiBackgroundColor);
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientEncounterType : pb::IMessage<ClientEncounterType> {
        private static readonly pb::MessageParser<ClientEncounterType> _parser = new pb::MessageParser<ClientEncounterType>(() => new ClientEncounterType());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientEncounterType> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[23]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientEncounterType() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientEncounterType(ClientEncounterType other) : this() {
          id_ = other.id_;
          showInLookIn_ = other.showInLookIn_;
          lookInDescription_ = other.lookInDescription_;
          lookInIcon_ = other.lookInIcon_;
          conditionalTagStatDesc_ = other.conditionalTagStatDesc_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientEncounterType Clone() {
          return new ClientEncounterType(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "show_in_look_in" field.</summary>
        public const int ShowInLookInFieldNumber = 2;
        private bool showInLookIn_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ShowInLookIn {
          get { return showInLookIn_; }
          set {
            showInLookIn_ = value;
          }
        }

        /// <summary>Field number for the "look_in_description" field.</summary>
        public const int LookInDescriptionFieldNumber = 3;
        private string lookInDescription_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LookInDescription {
          get { return lookInDescription_; }
          set {
            lookInDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "look_in_icon" field.</summary>
        public const int LookInIconFieldNumber = 4;
        private string lookInIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LookInIcon {
          get { return lookInIcon_; }
          set {
            lookInIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "conditional_tag_stat_desc" field.</summary>
        public const int ConditionalTagStatDescFieldNumber = 5;
        private string conditionalTagStatDesc_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ConditionalTagStatDesc {
          get { return conditionalTagStatDesc_; }
          set {
            conditionalTagStatDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientEncounterType);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientEncounterType other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (ShowInLookIn != other.ShowInLookIn) return false;
          if (LookInDescription != other.LookInDescription) return false;
          if (LookInIcon != other.LookInIcon) return false;
          if (ConditionalTagStatDesc != other.ConditionalTagStatDesc) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (ShowInLookIn != false) hash ^= ShowInLookIn.GetHashCode();
          if (LookInDescription.Length != 0) hash ^= LookInDescription.GetHashCode();
          if (LookInIcon.Length != 0) hash ^= LookInIcon.GetHashCode();
          if (ConditionalTagStatDesc.Length != 0) hash ^= ConditionalTagStatDesc.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (ShowInLookIn != false) {
            output.WriteRawTag(16);
            output.WriteBool(ShowInLookIn);
          }
          if (LookInDescription.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(LookInDescription);
          }
          if (LookInIcon.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LookInIcon);
          }
          if (ConditionalTagStatDesc.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(ConditionalTagStatDesc);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (ShowInLookIn != false) {
            size += 1 + 1;
          }
          if (LookInDescription.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LookInDescription);
          }
          if (LookInIcon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LookInIcon);
          }
          if (ConditionalTagStatDesc.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ConditionalTagStatDesc);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientEncounterType other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.ShowInLookIn != false) {
            ShowInLookIn = other.ShowInLookIn;
          }
          if (other.LookInDescription.Length != 0) {
            LookInDescription = other.LookInDescription;
          }
          if (other.LookInIcon.Length != 0) {
            LookInIcon = other.LookInIcon;
          }
          if (other.ConditionalTagStatDesc.Length != 0) {
            ConditionalTagStatDesc = other.ConditionalTagStatDesc;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 16: {
                ShowInLookIn = input.ReadBool();
                break;
              }
              case 26: {
                LookInDescription = input.ReadString();
                break;
              }
              case 34: {
                LookInIcon = input.ReadString();
                break;
              }
              case 42: {
                ConditionalTagStatDesc = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientEncounter : pb::IMessage<ClientEncounter> {
        private static readonly pb::MessageParser<ClientEncounter> _parser = new pb::MessageParser<ClientEncounter>(() => new ClientEncounter());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientEncounter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[24]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientEncounter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientEncounter(ClientEncounter other) : this() {
          id_ = other.id_;
          encounterSearchingTimeline_ = other.encounterSearchingTimeline_;
          encounterSearchingIdleTimelines_ = other.encounterSearchingIdleTimelines_.Clone();
          encounterFleeTimeline_ = other.encounterFleeTimeline_;
          encounterTarget_ = other.encounterTarget_;
          stages_ = other.stages_.Clone();
          encounterTargetLayout_ = other.encounterTargetLayout_;
          searchTargetLayout_ = other.searchTargetLayout_;
          encounterAssets_ = other.encounterAssets_.Clone();
          encounterMapSprite_ = other.encounterMapSprite_;
          encounterMusicParams_ = other.encounterMusicParams_.Clone();
          name_ = other.name_;
          encounterMapSpriteFrame_ = other.encounterMapSpriteFrame_;
          mapHealthBarColor_ = other.mapHealthBarColor_ != null ? other.mapHealthBarColor_.Clone() : null;
          hudHealthBarColor_ = other.hudHealthBarColor_ != null ? other.hudHealthBarColor_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientEncounter Clone() {
          return new ClientEncounter(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "encounter_searching_timeline" field.</summary>
        public const int EncounterSearchingTimelineFieldNumber = 2;
        private string encounterSearchingTimeline_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EncounterSearchingTimeline {
          get { return encounterSearchingTimeline_; }
          set {
            encounterSearchingTimeline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "encounter_searching_idle_timelines" field.</summary>
        public const int EncounterSearchingIdleTimelinesFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _repeated_encounterSearchingIdleTimelines_codec
            = pb::FieldCodec.ForString(26);
        private readonly pbc::RepeatedField<string> encounterSearchingIdleTimelines_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> EncounterSearchingIdleTimelines {
          get { return encounterSearchingIdleTimelines_; }
        }

        /// <summary>Field number for the "encounter_flee_timeline" field.</summary>
        public const int EncounterFleeTimelineFieldNumber = 4;
        private string encounterFleeTimeline_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EncounterFleeTimeline {
          get { return encounterFleeTimeline_; }
          set {
            encounterFleeTimeline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "encounter_target" field.</summary>
        public const int EncounterTargetFieldNumber = 5;
        private string encounterTarget_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EncounterTarget {
          get { return encounterTarget_; }
          set {
            encounterTarget_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "stages" field.</summary>
        public const int StagesFieldNumber = 6;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage> _repeated_stages_codec
            = pb::FieldCodec.ForMessage(50, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage> stages_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage> Stages {
          get { return stages_; }
        }

        /// <summary>Field number for the "encounter_target_layout" field.</summary>
        public const int EncounterTargetLayoutFieldNumber = 7;
        private string encounterTargetLayout_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EncounterTargetLayout {
          get { return encounterTargetLayout_; }
          set {
            encounterTargetLayout_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "search_target_layout" field.</summary>
        public const int SearchTargetLayoutFieldNumber = 8;
        private string searchTargetLayout_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SearchTargetLayout {
          get { return searchTargetLayout_; }
          set {
            searchTargetLayout_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "encounter_assets" field.</summary>
        public const int EncounterAssetsFieldNumber = 9;
        private static readonly pb::FieldCodec<string> _repeated_encounterAssets_codec
            = pb::FieldCodec.ForString(74);
        private readonly pbc::RepeatedField<string> encounterAssets_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> EncounterAssets {
          get { return encounterAssets_; }
        }

        /// <summary>Field number for the "encounter_map_sprite" field.</summary>
        public const int EncounterMapSpriteFieldNumber = 10;
        private string encounterMapSprite_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EncounterMapSprite {
          get { return encounterMapSprite_; }
          set {
            encounterMapSprite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "encounter_music_params" field.</summary>
        public const int EncounterMusicParamsFieldNumber = 11;
        private static readonly pb::FieldCodec<global::WUProtos.Data.AudioParameter> _repeated_encounterMusicParams_codec
            = pb::FieldCodec.ForMessage(90, global::WUProtos.Data.AudioParameter.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.AudioParameter> encounterMusicParams_ = new pbc::RepeatedField<global::WUProtos.Data.AudioParameter>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.AudioParameter> EncounterMusicParams {
          get { return encounterMusicParams_; }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 12;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "encounter_map_sprite_frame" field.</summary>
        public const int EncounterMapSpriteFrameFieldNumber = 13;
        private string encounterMapSpriteFrame_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string EncounterMapSpriteFrame {
          get { return encounterMapSpriteFrame_; }
          set {
            encounterMapSpriteFrame_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "map_health_bar_color" field.</summary>
        public const int MapHealthBarColorFieldNumber = 14;
        private global::WUProtos.Data.Color mapHealthBarColor_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color MapHealthBarColor {
          get { return mapHealthBarColor_; }
          set {
            mapHealthBarColor_ = value;
          }
        }

        /// <summary>Field number for the "hud_health_bar_color" field.</summary>
        public const int HudHealthBarColorFieldNumber = 15;
        private global::WUProtos.Data.Color hudHealthBarColor_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color HudHealthBarColor {
          get { return hudHealthBarColor_; }
          set {
            hudHealthBarColor_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientEncounter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientEncounter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (EncounterSearchingTimeline != other.EncounterSearchingTimeline) return false;
          if(!encounterSearchingIdleTimelines_.Equals(other.encounterSearchingIdleTimelines_)) return false;
          if (EncounterFleeTimeline != other.EncounterFleeTimeline) return false;
          if (EncounterTarget != other.EncounterTarget) return false;
          if(!stages_.Equals(other.stages_)) return false;
          if (EncounterTargetLayout != other.EncounterTargetLayout) return false;
          if (SearchTargetLayout != other.SearchTargetLayout) return false;
          if(!encounterAssets_.Equals(other.encounterAssets_)) return false;
          if (EncounterMapSprite != other.EncounterMapSprite) return false;
          if(!encounterMusicParams_.Equals(other.encounterMusicParams_)) return false;
          if (Name != other.Name) return false;
          if (EncounterMapSpriteFrame != other.EncounterMapSpriteFrame) return false;
          if (!object.Equals(MapHealthBarColor, other.MapHealthBarColor)) return false;
          if (!object.Equals(HudHealthBarColor, other.HudHealthBarColor)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (EncounterSearchingTimeline.Length != 0) hash ^= EncounterSearchingTimeline.GetHashCode();
          hash ^= encounterSearchingIdleTimelines_.GetHashCode();
          if (EncounterFleeTimeline.Length != 0) hash ^= EncounterFleeTimeline.GetHashCode();
          if (EncounterTarget.Length != 0) hash ^= EncounterTarget.GetHashCode();
          hash ^= stages_.GetHashCode();
          if (EncounterTargetLayout.Length != 0) hash ^= EncounterTargetLayout.GetHashCode();
          if (SearchTargetLayout.Length != 0) hash ^= SearchTargetLayout.GetHashCode();
          hash ^= encounterAssets_.GetHashCode();
          if (EncounterMapSprite.Length != 0) hash ^= EncounterMapSprite.GetHashCode();
          hash ^= encounterMusicParams_.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (EncounterMapSpriteFrame.Length != 0) hash ^= EncounterMapSpriteFrame.GetHashCode();
          if (mapHealthBarColor_ != null) hash ^= MapHealthBarColor.GetHashCode();
          if (hudHealthBarColor_ != null) hash ^= HudHealthBarColor.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (EncounterSearchingTimeline.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(EncounterSearchingTimeline);
          }
          encounterSearchingIdleTimelines_.WriteTo(output, _repeated_encounterSearchingIdleTimelines_codec);
          if (EncounterFleeTimeline.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(EncounterFleeTimeline);
          }
          if (EncounterTarget.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(EncounterTarget);
          }
          stages_.WriteTo(output, _repeated_stages_codec);
          if (EncounterTargetLayout.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(EncounterTargetLayout);
          }
          if (SearchTargetLayout.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(SearchTargetLayout);
          }
          encounterAssets_.WriteTo(output, _repeated_encounterAssets_codec);
          if (EncounterMapSprite.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(EncounterMapSprite);
          }
          encounterMusicParams_.WriteTo(output, _repeated_encounterMusicParams_codec);
          if (Name.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(Name);
          }
          if (EncounterMapSpriteFrame.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(EncounterMapSpriteFrame);
          }
          if (mapHealthBarColor_ != null) {
            output.WriteRawTag(114);
            output.WriteMessage(MapHealthBarColor);
          }
          if (hudHealthBarColor_ != null) {
            output.WriteRawTag(122);
            output.WriteMessage(HudHealthBarColor);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (EncounterSearchingTimeline.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterSearchingTimeline);
          }
          size += encounterSearchingIdleTimelines_.CalculateSize(_repeated_encounterSearchingIdleTimelines_codec);
          if (EncounterFleeTimeline.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterFleeTimeline);
          }
          if (EncounterTarget.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterTarget);
          }
          size += stages_.CalculateSize(_repeated_stages_codec);
          if (EncounterTargetLayout.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterTargetLayout);
          }
          if (SearchTargetLayout.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchTargetLayout);
          }
          size += encounterAssets_.CalculateSize(_repeated_encounterAssets_codec);
          if (EncounterMapSprite.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterMapSprite);
          }
          size += encounterMusicParams_.CalculateSize(_repeated_encounterMusicParams_codec);
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (EncounterMapSpriteFrame.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterMapSpriteFrame);
          }
          if (mapHealthBarColor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MapHealthBarColor);
          }
          if (hudHealthBarColor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(HudHealthBarColor);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientEncounter other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.EncounterSearchingTimeline.Length != 0) {
            EncounterSearchingTimeline = other.EncounterSearchingTimeline;
          }
          encounterSearchingIdleTimelines_.Add(other.encounterSearchingIdleTimelines_);
          if (other.EncounterFleeTimeline.Length != 0) {
            EncounterFleeTimeline = other.EncounterFleeTimeline;
          }
          if (other.EncounterTarget.Length != 0) {
            EncounterTarget = other.EncounterTarget;
          }
          stages_.Add(other.stages_);
          if (other.EncounterTargetLayout.Length != 0) {
            EncounterTargetLayout = other.EncounterTargetLayout;
          }
          if (other.SearchTargetLayout.Length != 0) {
            SearchTargetLayout = other.SearchTargetLayout;
          }
          encounterAssets_.Add(other.encounterAssets_);
          if (other.EncounterMapSprite.Length != 0) {
            EncounterMapSprite = other.EncounterMapSprite;
          }
          encounterMusicParams_.Add(other.encounterMusicParams_);
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.EncounterMapSpriteFrame.Length != 0) {
            EncounterMapSpriteFrame = other.EncounterMapSpriteFrame;
          }
          if (other.mapHealthBarColor_ != null) {
            if (mapHealthBarColor_ == null) {
              MapHealthBarColor = new global::WUProtos.Data.Color();
            }
            MapHealthBarColor.MergeFrom(other.MapHealthBarColor);
          }
          if (other.hudHealthBarColor_ != null) {
            if (hudHealthBarColor_ == null) {
              HudHealthBarColor = new global::WUProtos.Data.Color();
            }
            HudHealthBarColor.MergeFrom(other.HudHealthBarColor);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                EncounterSearchingTimeline = input.ReadString();
                break;
              }
              case 26: {
                encounterSearchingIdleTimelines_.AddEntriesFrom(input, _repeated_encounterSearchingIdleTimelines_codec);
                break;
              }
              case 34: {
                EncounterFleeTimeline = input.ReadString();
                break;
              }
              case 42: {
                EncounterTarget = input.ReadString();
                break;
              }
              case 50: {
                stages_.AddEntriesFrom(input, _repeated_stages_codec);
                break;
              }
              case 58: {
                EncounterTargetLayout = input.ReadString();
                break;
              }
              case 66: {
                SearchTargetLayout = input.ReadString();
                break;
              }
              case 74: {
                encounterAssets_.AddEntriesFrom(input, _repeated_encounterAssets_codec);
                break;
              }
              case 82: {
                EncounterMapSprite = input.ReadString();
                break;
              }
              case 90: {
                encounterMusicParams_.AddEntriesFrom(input, _repeated_encounterMusicParams_codec);
                break;
              }
              case 98: {
                Name = input.ReadString();
                break;
              }
              case 106: {
                EncounterMapSpriteFrame = input.ReadString();
                break;
              }
              case 114: {
                if (mapHealthBarColor_ == null) {
                  MapHealthBarColor = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(MapHealthBarColor);
                break;
              }
              case 122: {
                if (hudHealthBarColor_ == null) {
                  HudHealthBarColor = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(HudHealthBarColor);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ClientEncounter message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class ClientEncounterStage : pb::IMessage<ClientEncounterStage> {
            private static readonly pb::MessageParser<ClientEncounterStage> _parser = new pb::MessageParser<ClientEncounterStage>(() => new ClientEncounterStage());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ClientEncounterStage> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientEncounterStage() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientEncounterStage(ClientEncounterStage other) : this() {
              disappearDelay_ = other.disappearDelay_;
              introText_ = other.introText_;
              stageSetupSequence_ = other.stageSetupSequence_.Clone();
              stageCompletionSequence_ = other.stageCompletionSequence_.Clone();
              spellAimLayout_ = other.spellAimLayout_;
              idleLoopTimelines_ = other.idleLoopTimelines_.Clone();
              rngIntroTimeline_ = other.rngIntroTimeline_;
              rngLoopTimeline_ = other.rngLoopTimeline_;
              spellFailedTimeline_ = other.spellFailedTimeline_;
              combatSpellList_ = other.combatSpellList_.Clone();
              switch (other.TypeCase) {
                case TypeOneofCase.Swish:
                  Swish = other.Swish.Clone();
                  break;
                case TypeOneofCase.Combat:
                  Combat = other.Combat.Clone();
                  break;
                case TypeOneofCase.Portkey:
                  Portkey = other.Portkey.Clone();
                  break;
                case TypeOneofCase.Picture:
                  Picture = other.Picture.Clone();
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientEncounterStage Clone() {
              return new ClientEncounterStage(this);
            }

            /// <summary>Field number for the "swish" field.</summary>
            public const int SwishFieldNumber = 1;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageSwish Swish {
              get { return typeCase_ == TypeOneofCase.Swish ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageSwish) type_ : null; }
              set {
                type_ = value;
                typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Swish;
              }
            }

            /// <summary>Field number for the "combat" field.</summary>
            public const int CombatFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat Combat {
              get { return typeCase_ == TypeOneofCase.Combat ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat) type_ : null; }
              set {
                type_ = value;
                typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Combat;
              }
            }

            /// <summary>Field number for the "portkey" field.</summary>
            public const int PortkeyFieldNumber = 3;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePortkey Portkey {
              get { return typeCase_ == TypeOneofCase.Portkey ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePortkey) type_ : null; }
              set {
                type_ = value;
                typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Portkey;
              }
            }

            /// <summary>Field number for the "picture" field.</summary>
            public const int PictureFieldNumber = 4;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePicture Picture {
              get { return typeCase_ == TypeOneofCase.Picture ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePicture) type_ : null; }
              set {
                type_ = value;
                typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Picture;
              }
            }

            /// <summary>Field number for the "disappear_delay" field.</summary>
            public const int DisappearDelayFieldNumber = 5;
            private float disappearDelay_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public float DisappearDelay {
              get { return disappearDelay_; }
              set {
                disappearDelay_ = value;
              }
            }

            /// <summary>Field number for the "intro_text" field.</summary>
            public const int IntroTextFieldNumber = 6;
            private string introText_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string IntroText {
              get { return introText_; }
              set {
                introText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "stage_setup_sequence" field.</summary>
            public const int StageSetupSequenceFieldNumber = 7;
            private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientSequenceData> _repeated_stageSetupSequence_codec
                = pb::FieldCodec.ForMessage(58, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientSequenceData.Parser);
            private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientSequenceData> stageSetupSequence_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientSequenceData>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientSequenceData> StageSetupSequence {
              get { return stageSetupSequence_; }
            }

            /// <summary>Field number for the "stage_completion_sequence" field.</summary>
            public const int StageCompletionSequenceFieldNumber = 8;
            private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientSequenceData> _repeated_stageCompletionSequence_codec
                = pb::FieldCodec.ForMessage(66, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientSequenceData.Parser);
            private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientSequenceData> stageCompletionSequence_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientSequenceData>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientSequenceData> StageCompletionSequence {
              get { return stageCompletionSequence_; }
            }

            /// <summary>Field number for the "spell_aim_layout" field.</summary>
            public const int SpellAimLayoutFieldNumber = 9;
            private string spellAimLayout_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string SpellAimLayout {
              get { return spellAimLayout_; }
              set {
                spellAimLayout_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "idle_loop_timelines" field.</summary>
            public const int IdleLoopTimelinesFieldNumber = 10;
            private static readonly pb::FieldCodec<string> _repeated_idleLoopTimelines_codec
                = pb::FieldCodec.ForString(82);
            private readonly pbc::RepeatedField<string> idleLoopTimelines_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> IdleLoopTimelines {
              get { return idleLoopTimelines_; }
            }

            /// <summary>Field number for the "rng_intro_timeline" field.</summary>
            public const int RngIntroTimelineFieldNumber = 11;
            private string rngIntroTimeline_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string RngIntroTimeline {
              get { return rngIntroTimeline_; }
              set {
                rngIntroTimeline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "rng_loop_timeline" field.</summary>
            public const int RngLoopTimelineFieldNumber = 12;
            private string rngLoopTimeline_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string RngLoopTimeline {
              get { return rngLoopTimeline_; }
              set {
                rngLoopTimeline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "spell_failed_timeline" field.</summary>
            public const int SpellFailedTimelineFieldNumber = 13;
            private string spellFailedTimeline_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string SpellFailedTimeline {
              get { return spellFailedTimeline_; }
              set {
                spellFailedTimeline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "combat_spell_list" field.</summary>
            public const int CombatSpellListFieldNumber = 14;
            private static readonly pb::FieldCodec<string> _repeated_combatSpellList_codec
                = pb::FieldCodec.ForString(114);
            private readonly pbc::RepeatedField<string> combatSpellList_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> CombatSpellList {
              get { return combatSpellList_; }
            }

            private object type_;
            /// <summary>Enum of possible cases for the "Type" oneof.</summary>
            public enum TypeOneofCase {
              None = 0,
              Swish = 1,
              Combat = 2,
              Portkey = 3,
              Picture = 4,
            }
            private TypeOneofCase typeCase_ = TypeOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TypeOneofCase TypeCase {
              get { return typeCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearType() {
              typeCase_ = TypeOneofCase.None;
              type_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ClientEncounterStage);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ClientEncounterStage other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Swish, other.Swish)) return false;
              if (!object.Equals(Combat, other.Combat)) return false;
              if (!object.Equals(Portkey, other.Portkey)) return false;
              if (!object.Equals(Picture, other.Picture)) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DisappearDelay, other.DisappearDelay)) return false;
              if (IntroText != other.IntroText) return false;
              if(!stageSetupSequence_.Equals(other.stageSetupSequence_)) return false;
              if(!stageCompletionSequence_.Equals(other.stageCompletionSequence_)) return false;
              if (SpellAimLayout != other.SpellAimLayout) return false;
              if(!idleLoopTimelines_.Equals(other.idleLoopTimelines_)) return false;
              if (RngIntroTimeline != other.RngIntroTimeline) return false;
              if (RngLoopTimeline != other.RngLoopTimeline) return false;
              if (SpellFailedTimeline != other.SpellFailedTimeline) return false;
              if(!combatSpellList_.Equals(other.combatSpellList_)) return false;
              if (TypeCase != other.TypeCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (typeCase_ == TypeOneofCase.Swish) hash ^= Swish.GetHashCode();
              if (typeCase_ == TypeOneofCase.Combat) hash ^= Combat.GetHashCode();
              if (typeCase_ == TypeOneofCase.Portkey) hash ^= Portkey.GetHashCode();
              if (typeCase_ == TypeOneofCase.Picture) hash ^= Picture.GetHashCode();
              if (DisappearDelay != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DisappearDelay);
              if (IntroText.Length != 0) hash ^= IntroText.GetHashCode();
              hash ^= stageSetupSequence_.GetHashCode();
              hash ^= stageCompletionSequence_.GetHashCode();
              if (SpellAimLayout.Length != 0) hash ^= SpellAimLayout.GetHashCode();
              hash ^= idleLoopTimelines_.GetHashCode();
              if (RngIntroTimeline.Length != 0) hash ^= RngIntroTimeline.GetHashCode();
              if (RngLoopTimeline.Length != 0) hash ^= RngLoopTimeline.GetHashCode();
              if (SpellFailedTimeline.Length != 0) hash ^= SpellFailedTimeline.GetHashCode();
              hash ^= combatSpellList_.GetHashCode();
              hash ^= (int) typeCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (typeCase_ == TypeOneofCase.Swish) {
                output.WriteRawTag(10);
                output.WriteMessage(Swish);
              }
              if (typeCase_ == TypeOneofCase.Combat) {
                output.WriteRawTag(18);
                output.WriteMessage(Combat);
              }
              if (typeCase_ == TypeOneofCase.Portkey) {
                output.WriteRawTag(26);
                output.WriteMessage(Portkey);
              }
              if (typeCase_ == TypeOneofCase.Picture) {
                output.WriteRawTag(34);
                output.WriteMessage(Picture);
              }
              if (DisappearDelay != 0F) {
                output.WriteRawTag(45);
                output.WriteFloat(DisappearDelay);
              }
              if (IntroText.Length != 0) {
                output.WriteRawTag(50);
                output.WriteString(IntroText);
              }
              stageSetupSequence_.WriteTo(output, _repeated_stageSetupSequence_codec);
              stageCompletionSequence_.WriteTo(output, _repeated_stageCompletionSequence_codec);
              if (SpellAimLayout.Length != 0) {
                output.WriteRawTag(74);
                output.WriteString(SpellAimLayout);
              }
              idleLoopTimelines_.WriteTo(output, _repeated_idleLoopTimelines_codec);
              if (RngIntroTimeline.Length != 0) {
                output.WriteRawTag(90);
                output.WriteString(RngIntroTimeline);
              }
              if (RngLoopTimeline.Length != 0) {
                output.WriteRawTag(98);
                output.WriteString(RngLoopTimeline);
              }
              if (SpellFailedTimeline.Length != 0) {
                output.WriteRawTag(106);
                output.WriteString(SpellFailedTimeline);
              }
              combatSpellList_.WriteTo(output, _repeated_combatSpellList_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (typeCase_ == TypeOneofCase.Swish) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Swish);
              }
              if (typeCase_ == TypeOneofCase.Combat) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Combat);
              }
              if (typeCase_ == TypeOneofCase.Portkey) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Portkey);
              }
              if (typeCase_ == TypeOneofCase.Picture) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Picture);
              }
              if (DisappearDelay != 0F) {
                size += 1 + 4;
              }
              if (IntroText.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(IntroText);
              }
              size += stageSetupSequence_.CalculateSize(_repeated_stageSetupSequence_codec);
              size += stageCompletionSequence_.CalculateSize(_repeated_stageCompletionSequence_codec);
              if (SpellAimLayout.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SpellAimLayout);
              }
              size += idleLoopTimelines_.CalculateSize(_repeated_idleLoopTimelines_codec);
              if (RngIntroTimeline.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(RngIntroTimeline);
              }
              if (RngLoopTimeline.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(RngLoopTimeline);
              }
              if (SpellFailedTimeline.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SpellFailedTimeline);
              }
              size += combatSpellList_.CalculateSize(_repeated_combatSpellList_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ClientEncounterStage other) {
              if (other == null) {
                return;
              }
              if (other.DisappearDelay != 0F) {
                DisappearDelay = other.DisappearDelay;
              }
              if (other.IntroText.Length != 0) {
                IntroText = other.IntroText;
              }
              stageSetupSequence_.Add(other.stageSetupSequence_);
              stageCompletionSequence_.Add(other.stageCompletionSequence_);
              if (other.SpellAimLayout.Length != 0) {
                SpellAimLayout = other.SpellAimLayout;
              }
              idleLoopTimelines_.Add(other.idleLoopTimelines_);
              if (other.RngIntroTimeline.Length != 0) {
                RngIntroTimeline = other.RngIntroTimeline;
              }
              if (other.RngLoopTimeline.Length != 0) {
                RngLoopTimeline = other.RngLoopTimeline;
              }
              if (other.SpellFailedTimeline.Length != 0) {
                SpellFailedTimeline = other.SpellFailedTimeline;
              }
              combatSpellList_.Add(other.combatSpellList_);
              switch (other.TypeCase) {
                case TypeOneofCase.Swish:
                  if (Swish == null) {
                    Swish = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageSwish();
                  }
                  Swish.MergeFrom(other.Swish);
                  break;
                case TypeOneofCase.Combat:
                  if (Combat == null) {
                    Combat = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat();
                  }
                  Combat.MergeFrom(other.Combat);
                  break;
                case TypeOneofCase.Portkey:
                  if (Portkey == null) {
                    Portkey = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePortkey();
                  }
                  Portkey.MergeFrom(other.Portkey);
                  break;
                case TypeOneofCase.Picture:
                  if (Picture == null) {
                    Picture = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePicture();
                  }
                  Picture.MergeFrom(other.Picture);
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageSwish subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageSwish();
                    if (typeCase_ == TypeOneofCase.Swish) {
                      subBuilder.MergeFrom(Swish);
                    }
                    input.ReadMessage(subBuilder);
                    Swish = subBuilder;
                    break;
                  }
                  case 18: {
                    global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat();
                    if (typeCase_ == TypeOneofCase.Combat) {
                      subBuilder.MergeFrom(Combat);
                    }
                    input.ReadMessage(subBuilder);
                    Combat = subBuilder;
                    break;
                  }
                  case 26: {
                    global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePortkey subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePortkey();
                    if (typeCase_ == TypeOneofCase.Portkey) {
                      subBuilder.MergeFrom(Portkey);
                    }
                    input.ReadMessage(subBuilder);
                    Portkey = subBuilder;
                    break;
                  }
                  case 34: {
                    global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePicture subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePicture();
                    if (typeCase_ == TypeOneofCase.Picture) {
                      subBuilder.MergeFrom(Picture);
                    }
                    input.ReadMessage(subBuilder);
                    Picture = subBuilder;
                    break;
                  }
                  case 45: {
                    DisappearDelay = input.ReadFloat();
                    break;
                  }
                  case 50: {
                    IntroText = input.ReadString();
                    break;
                  }
                  case 58: {
                    stageSetupSequence_.AddEntriesFrom(input, _repeated_stageSetupSequence_codec);
                    break;
                  }
                  case 66: {
                    stageCompletionSequence_.AddEntriesFrom(input, _repeated_stageCompletionSequence_codec);
                    break;
                  }
                  case 74: {
                    SpellAimLayout = input.ReadString();
                    break;
                  }
                  case 82: {
                    idleLoopTimelines_.AddEntriesFrom(input, _repeated_idleLoopTimelines_codec);
                    break;
                  }
                  case 90: {
                    RngIntroTimeline = input.ReadString();
                    break;
                  }
                  case 98: {
                    RngLoopTimeline = input.ReadString();
                    break;
                  }
                  case 106: {
                    SpellFailedTimeline = input.ReadString();
                    break;
                  }
                  case 114: {
                    combatSpellList_.AddEntriesFrom(input, _repeated_combatSpellList_codec);
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the ClientEncounterStage message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class ClientSequenceData : pb::IMessage<ClientSequenceData> {
                private static readonly pb::MessageParser<ClientSequenceData> _parser = new pb::MessageParser<ClientSequenceData>(() => new ClientSequenceData());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ClientSequenceData> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientSequenceData() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientSequenceData(ClientSequenceData other) : this() {
                  sequenceType_ = other.sequenceType_;
                  obstacle_ = other.obstacle_;
                  obstacleAlias_ = other.obstacleAlias_;
                  encounterTarget_ = other.encounterTarget_;
                  timelineFile_ = other.timelineFile_;
                  sequenceDelayTime_ = other.sequenceDelayTime_;
                  sequenceLayoutNode_ = other.sequenceLayoutNode_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientSequenceData Clone() {
                  return new ClientSequenceData(this);
                }

                /// <summary>Field number for the "sequence_type" field.</summary>
                public const int SequenceTypeFieldNumber = 1;
                private int sequenceType_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int SequenceType {
                  get { return sequenceType_; }
                  set {
                    sequenceType_ = value;
                  }
                }

                /// <summary>Field number for the "obstacle" field.</summary>
                public const int ObstacleFieldNumber = 2;
                private string obstacle_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Obstacle {
                  get { return obstacle_; }
                  set {
                    obstacle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "obstacle_alias" field.</summary>
                public const int ObstacleAliasFieldNumber = 3;
                private string obstacleAlias_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string ObstacleAlias {
                  get { return obstacleAlias_; }
                  set {
                    obstacleAlias_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "encounter_target" field.</summary>
                public const int EncounterTargetFieldNumber = 4;
                private string encounterTarget_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string EncounterTarget {
                  get { return encounterTarget_; }
                  set {
                    encounterTarget_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "timeline_file" field.</summary>
                public const int TimelineFileFieldNumber = 5;
                private string timelineFile_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string TimelineFile {
                  get { return timelineFile_; }
                  set {
                    timelineFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "sequence_delay_time" field.</summary>
                public const int SequenceDelayTimeFieldNumber = 6;
                private float sequenceDelayTime_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public float SequenceDelayTime {
                  get { return sequenceDelayTime_; }
                  set {
                    sequenceDelayTime_ = value;
                  }
                }

                /// <summary>Field number for the "sequence_layout_node" field.</summary>
                public const int SequenceLayoutNodeFieldNumber = 7;
                private string sequenceLayoutNode_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string SequenceLayoutNode {
                  get { return sequenceLayoutNode_; }
                  set {
                    sequenceLayoutNode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ClientSequenceData);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ClientSequenceData other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (SequenceType != other.SequenceType) return false;
                  if (Obstacle != other.Obstacle) return false;
                  if (ObstacleAlias != other.ObstacleAlias) return false;
                  if (EncounterTarget != other.EncounterTarget) return false;
                  if (TimelineFile != other.TimelineFile) return false;
                  if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SequenceDelayTime, other.SequenceDelayTime)) return false;
                  if (SequenceLayoutNode != other.SequenceLayoutNode) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (SequenceType != 0) hash ^= SequenceType.GetHashCode();
                  if (Obstacle.Length != 0) hash ^= Obstacle.GetHashCode();
                  if (ObstacleAlias.Length != 0) hash ^= ObstacleAlias.GetHashCode();
                  if (EncounterTarget.Length != 0) hash ^= EncounterTarget.GetHashCode();
                  if (TimelineFile.Length != 0) hash ^= TimelineFile.GetHashCode();
                  if (SequenceDelayTime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SequenceDelayTime);
                  if (SequenceLayoutNode.Length != 0) hash ^= SequenceLayoutNode.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (SequenceType != 0) {
                    output.WriteRawTag(8);
                    output.WriteInt32(SequenceType);
                  }
                  if (Obstacle.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(Obstacle);
                  }
                  if (ObstacleAlias.Length != 0) {
                    output.WriteRawTag(26);
                    output.WriteString(ObstacleAlias);
                  }
                  if (EncounterTarget.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(EncounterTarget);
                  }
                  if (TimelineFile.Length != 0) {
                    output.WriteRawTag(42);
                    output.WriteString(TimelineFile);
                  }
                  if (SequenceDelayTime != 0F) {
                    output.WriteRawTag(53);
                    output.WriteFloat(SequenceDelayTime);
                  }
                  if (SequenceLayoutNode.Length != 0) {
                    output.WriteRawTag(58);
                    output.WriteString(SequenceLayoutNode);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (SequenceType != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(SequenceType);
                  }
                  if (Obstacle.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(Obstacle);
                  }
                  if (ObstacleAlias.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(ObstacleAlias);
                  }
                  if (EncounterTarget.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterTarget);
                  }
                  if (TimelineFile.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TimelineFile);
                  }
                  if (SequenceDelayTime != 0F) {
                    size += 1 + 4;
                  }
                  if (SequenceLayoutNode.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(SequenceLayoutNode);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ClientSequenceData other) {
                  if (other == null) {
                    return;
                  }
                  if (other.SequenceType != 0) {
                    SequenceType = other.SequenceType;
                  }
                  if (other.Obstacle.Length != 0) {
                    Obstacle = other.Obstacle;
                  }
                  if (other.ObstacleAlias.Length != 0) {
                    ObstacleAlias = other.ObstacleAlias;
                  }
                  if (other.EncounterTarget.Length != 0) {
                    EncounterTarget = other.EncounterTarget;
                  }
                  if (other.TimelineFile.Length != 0) {
                    TimelineFile = other.TimelineFile;
                  }
                  if (other.SequenceDelayTime != 0F) {
                    SequenceDelayTime = other.SequenceDelayTime;
                  }
                  if (other.SequenceLayoutNode.Length != 0) {
                    SequenceLayoutNode = other.SequenceLayoutNode;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        SequenceType = input.ReadInt32();
                        break;
                      }
                      case 18: {
                        Obstacle = input.ReadString();
                        break;
                      }
                      case 26: {
                        ObstacleAlias = input.ReadString();
                        break;
                      }
                      case 34: {
                        EncounterTarget = input.ReadString();
                        break;
                      }
                      case 42: {
                        TimelineFile = input.ReadString();
                        break;
                      }
                      case 53: {
                        SequenceDelayTime = input.ReadFloat();
                        break;
                      }
                      case 58: {
                        SequenceLayoutNode = input.ReadString();
                        break;
                      }
                    }
                  }
                }

              }

              public sealed partial class ClientEncounterStageSwish : pb::IMessage<ClientEncounterStageSwish> {
                private static readonly pb::MessageParser<ClientEncounterStageSwish> _parser = new pb::MessageParser<ClientEncounterStageSwish>(() => new ClientEncounterStageSwish());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ClientEncounterStageSwish> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Descriptor.NestedTypes[1]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientEncounterStageSwish() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientEncounterStageSwish(ClientEncounterStageSwish other) : this() {
                  traceSucceedsFanfare_ = other.traceSucceedsFanfare_ != null ? other.traceSucceedsFanfare_.Clone() : null;
                  traceFailsFanfare_ = other.traceFailsFanfare_ != null ? other.traceFailsFanfare_.Clone() : null;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientEncounterStageSwish Clone() {
                  return new ClientEncounterStageSwish(this);
                }

                /// <summary>Field number for the "trace_succeeds_fanfare" field.</summary>
                public const int TraceSucceedsFanfareFieldNumber = 1;
                private global::WUProtos.Data.AudioParameter traceSucceedsFanfare_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::WUProtos.Data.AudioParameter TraceSucceedsFanfare {
                  get { return traceSucceedsFanfare_; }
                  set {
                    traceSucceedsFanfare_ = value;
                  }
                }

                /// <summary>Field number for the "trace_fails_fanfare" field.</summary>
                public const int TraceFailsFanfareFieldNumber = 2;
                private global::WUProtos.Data.AudioParameter traceFailsFanfare_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::WUProtos.Data.AudioParameter TraceFailsFanfare {
                  get { return traceFailsFanfare_; }
                  set {
                    traceFailsFanfare_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ClientEncounterStageSwish);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ClientEncounterStageSwish other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(TraceSucceedsFanfare, other.TraceSucceedsFanfare)) return false;
                  if (!object.Equals(TraceFailsFanfare, other.TraceFailsFanfare)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (traceSucceedsFanfare_ != null) hash ^= TraceSucceedsFanfare.GetHashCode();
                  if (traceFailsFanfare_ != null) hash ^= TraceFailsFanfare.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (traceSucceedsFanfare_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(TraceSucceedsFanfare);
                  }
                  if (traceFailsFanfare_ != null) {
                    output.WriteRawTag(18);
                    output.WriteMessage(TraceFailsFanfare);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (traceSucceedsFanfare_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(TraceSucceedsFanfare);
                  }
                  if (traceFailsFanfare_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(TraceFailsFanfare);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ClientEncounterStageSwish other) {
                  if (other == null) {
                    return;
                  }
                  if (other.traceSucceedsFanfare_ != null) {
                    if (traceSucceedsFanfare_ == null) {
                      TraceSucceedsFanfare = new global::WUProtos.Data.AudioParameter();
                    }
                    TraceSucceedsFanfare.MergeFrom(other.TraceSucceedsFanfare);
                  }
                  if (other.traceFailsFanfare_ != null) {
                    if (traceFailsFanfare_ == null) {
                      TraceFailsFanfare = new global::WUProtos.Data.AudioParameter();
                    }
                    TraceFailsFanfare.MergeFrom(other.TraceFailsFanfare);
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (traceSucceedsFanfare_ == null) {
                          TraceSucceedsFanfare = new global::WUProtos.Data.AudioParameter();
                        }
                        input.ReadMessage(TraceSucceedsFanfare);
                        break;
                      }
                      case 18: {
                        if (traceFailsFanfare_ == null) {
                          TraceFailsFanfare = new global::WUProtos.Data.AudioParameter();
                        }
                        input.ReadMessage(TraceFailsFanfare);
                        break;
                      }
                    }
                  }
                }

              }

              public sealed partial class ClientEncounterStagePortkey : pb::IMessage<ClientEncounterStagePortkey> {
                private static readonly pb::MessageParser<ClientEncounterStagePortkey> _parser = new pb::MessageParser<ClientEncounterStagePortkey>(() => new ClientEncounterStagePortkey());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ClientEncounterStagePortkey> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Descriptor.NestedTypes[2]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientEncounterStagePortkey() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientEncounterStagePortkey(ClientEncounterStagePortkey other) : this() {
                  sceneId_ = other.sceneId_;
                  portalId_ = other.portalId_;
                  objectPlacementId_ = other.objectPlacementId_;
                  portalPlacementId_ = other.portalPlacementId_;
                  portkeyAsset_ = other.portkeyAsset_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientEncounterStagePortkey Clone() {
                  return new ClientEncounterStagePortkey(this);
                }

                /// <summary>Field number for the "scene_id" field.</summary>
                public const int SceneIdFieldNumber = 1;
                private string sceneId_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string SceneId {
                  get { return sceneId_; }
                  set {
                    sceneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "portal_id" field.</summary>
                public const int PortalIdFieldNumber = 2;
                private string portalId_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string PortalId {
                  get { return portalId_; }
                  set {
                    portalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "object_placement_id" field.</summary>
                public const int ObjectPlacementIdFieldNumber = 3;
                private string objectPlacementId_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string ObjectPlacementId {
                  get { return objectPlacementId_; }
                  set {
                    objectPlacementId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "portal_placement_id" field.</summary>
                public const int PortalPlacementIdFieldNumber = 4;
                private string portalPlacementId_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string PortalPlacementId {
                  get { return portalPlacementId_; }
                  set {
                    portalPlacementId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "portkey_asset" field.</summary>
                public const int PortkeyAssetFieldNumber = 5;
                private string portkeyAsset_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string PortkeyAsset {
                  get { return portkeyAsset_; }
                  set {
                    portkeyAsset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ClientEncounterStagePortkey);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ClientEncounterStagePortkey other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (SceneId != other.SceneId) return false;
                  if (PortalId != other.PortalId) return false;
                  if (ObjectPlacementId != other.ObjectPlacementId) return false;
                  if (PortalPlacementId != other.PortalPlacementId) return false;
                  if (PortkeyAsset != other.PortkeyAsset) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (SceneId.Length != 0) hash ^= SceneId.GetHashCode();
                  if (PortalId.Length != 0) hash ^= PortalId.GetHashCode();
                  if (ObjectPlacementId.Length != 0) hash ^= ObjectPlacementId.GetHashCode();
                  if (PortalPlacementId.Length != 0) hash ^= PortalPlacementId.GetHashCode();
                  if (PortkeyAsset.Length != 0) hash ^= PortkeyAsset.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (SceneId.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(SceneId);
                  }
                  if (PortalId.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(PortalId);
                  }
                  if (ObjectPlacementId.Length != 0) {
                    output.WriteRawTag(26);
                    output.WriteString(ObjectPlacementId);
                  }
                  if (PortalPlacementId.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(PortalPlacementId);
                  }
                  if (PortkeyAsset.Length != 0) {
                    output.WriteRawTag(42);
                    output.WriteString(PortkeyAsset);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (SceneId.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneId);
                  }
                  if (PortalId.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(PortalId);
                  }
                  if (ObjectPlacementId.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(ObjectPlacementId);
                  }
                  if (PortalPlacementId.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(PortalPlacementId);
                  }
                  if (PortkeyAsset.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(PortkeyAsset);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ClientEncounterStagePortkey other) {
                  if (other == null) {
                    return;
                  }
                  if (other.SceneId.Length != 0) {
                    SceneId = other.SceneId;
                  }
                  if (other.PortalId.Length != 0) {
                    PortalId = other.PortalId;
                  }
                  if (other.ObjectPlacementId.Length != 0) {
                    ObjectPlacementId = other.ObjectPlacementId;
                  }
                  if (other.PortalPlacementId.Length != 0) {
                    PortalPlacementId = other.PortalPlacementId;
                  }
                  if (other.PortkeyAsset.Length != 0) {
                    PortkeyAsset = other.PortkeyAsset;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        SceneId = input.ReadString();
                        break;
                      }
                      case 18: {
                        PortalId = input.ReadString();
                        break;
                      }
                      case 26: {
                        ObjectPlacementId = input.ReadString();
                        break;
                      }
                      case 34: {
                        PortalPlacementId = input.ReadString();
                        break;
                      }
                      case 42: {
                        PortkeyAsset = input.ReadString();
                        break;
                      }
                    }
                  }
                }

              }

              public sealed partial class ClientEncounterStagePicture : pb::IMessage<ClientEncounterStagePicture> {
                private static readonly pb::MessageParser<ClientEncounterStagePicture> _parser = new pb::MessageParser<ClientEncounterStagePicture>(() => new ClientEncounterStagePicture());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ClientEncounterStagePicture> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Descriptor.NestedTypes[3]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientEncounterStagePicture() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientEncounterStagePicture(ClientEncounterStagePicture other) : this() {
                  id_ = other.id_;
                  spawnScale_ = other.spawnScale_;
                  minScale_ = other.minScale_;
                  maxScale_ = other.maxScale_;
                  simpleArPosOffset_ = other.simpleArPosOffset_ != null ? other.simpleArPosOffset_.Clone() : null;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientEncounterStagePicture Clone() {
                  return new ClientEncounterStagePicture(this);
                }

                /// <summary>Field number for the "id" field.</summary>
                public const int IdFieldNumber = 1;
                private string id_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Id {
                  get { return id_; }
                  set {
                    id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "spawn_scale" field.</summary>
                public const int SpawnScaleFieldNumber = 2;
                private float spawnScale_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public float SpawnScale {
                  get { return spawnScale_; }
                  set {
                    spawnScale_ = value;
                  }
                }

                /// <summary>Field number for the "min_scale" field.</summary>
                public const int MinScaleFieldNumber = 3;
                private float minScale_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public float MinScale {
                  get { return minScale_; }
                  set {
                    minScale_ = value;
                  }
                }

                /// <summary>Field number for the "max_scale" field.</summary>
                public const int MaxScaleFieldNumber = 4;
                private float maxScale_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public float MaxScale {
                  get { return maxScale_; }
                  set {
                    maxScale_ = value;
                  }
                }

                /// <summary>Field number for the "simple_ar_pos_offset" field.</summary>
                public const int SimpleArPosOffsetFieldNumber = 5;
                private global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePicture.Types.Vector3 simpleArPosOffset_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePicture.Types.Vector3 SimpleArPosOffset {
                  get { return simpleArPosOffset_; }
                  set {
                    simpleArPosOffset_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ClientEncounterStagePicture);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ClientEncounterStagePicture other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Id != other.Id) return false;
                  if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpawnScale, other.SpawnScale)) return false;
                  if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinScale, other.MinScale)) return false;
                  if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxScale, other.MaxScale)) return false;
                  if (!object.Equals(SimpleArPosOffset, other.SimpleArPosOffset)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Id.Length != 0) hash ^= Id.GetHashCode();
                  if (SpawnScale != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpawnScale);
                  if (MinScale != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinScale);
                  if (MaxScale != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxScale);
                  if (simpleArPosOffset_ != null) hash ^= SimpleArPosOffset.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (Id.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(Id);
                  }
                  if (SpawnScale != 0F) {
                    output.WriteRawTag(21);
                    output.WriteFloat(SpawnScale);
                  }
                  if (MinScale != 0F) {
                    output.WriteRawTag(29);
                    output.WriteFloat(MinScale);
                  }
                  if (MaxScale != 0F) {
                    output.WriteRawTag(37);
                    output.WriteFloat(MaxScale);
                  }
                  if (simpleArPosOffset_ != null) {
                    output.WriteRawTag(42);
                    output.WriteMessage(SimpleArPosOffset);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (Id.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
                  }
                  if (SpawnScale != 0F) {
                    size += 1 + 4;
                  }
                  if (MinScale != 0F) {
                    size += 1 + 4;
                  }
                  if (MaxScale != 0F) {
                    size += 1 + 4;
                  }
                  if (simpleArPosOffset_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(SimpleArPosOffset);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ClientEncounterStagePicture other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Id.Length != 0) {
                    Id = other.Id;
                  }
                  if (other.SpawnScale != 0F) {
                    SpawnScale = other.SpawnScale;
                  }
                  if (other.MinScale != 0F) {
                    MinScale = other.MinScale;
                  }
                  if (other.MaxScale != 0F) {
                    MaxScale = other.MaxScale;
                  }
                  if (other.simpleArPosOffset_ != null) {
                    if (simpleArPosOffset_ == null) {
                      SimpleArPosOffset = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePicture.Types.Vector3();
                    }
                    SimpleArPosOffset.MergeFrom(other.SimpleArPosOffset);
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        Id = input.ReadString();
                        break;
                      }
                      case 21: {
                        SpawnScale = input.ReadFloat();
                        break;
                      }
                      case 29: {
                        MinScale = input.ReadFloat();
                        break;
                      }
                      case 37: {
                        MaxScale = input.ReadFloat();
                        break;
                      }
                      case 42: {
                        if (simpleArPosOffset_ == null) {
                          SimpleArPosOffset = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePicture.Types.Vector3();
                        }
                        input.ReadMessage(SimpleArPosOffset);
                        break;
                      }
                    }
                  }
                }

                #region Nested types
                /// <summary>Container for nested types declared in the ClientEncounterStagePicture message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static partial class Types {
                  public sealed partial class Vector3 : pb::IMessage<Vector3> {
                    private static readonly pb::MessageParser<Vector3> _parser = new pb::MessageParser<Vector3>(() => new Vector3());
                    private pb::UnknownFieldSet _unknownFields;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public static pb::MessageParser<Vector3> Parser { get { return _parser; } }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public static pbr::MessageDescriptor Descriptor {
                      get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStagePicture.Descriptor.NestedTypes[0]; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    pbr::MessageDescriptor pb::IMessage.Descriptor {
                      get { return Descriptor; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public Vector3() {
                      OnConstruction();
                    }

                    partial void OnConstruction();

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public Vector3(Vector3 other) : this() {
                      x_ = other.x_;
                      y_ = other.y_;
                      z_ = other.z_;
                      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public Vector3 Clone() {
                      return new Vector3(this);
                    }

                    /// <summary>Field number for the "x" field.</summary>
                    public const int XFieldNumber = 1;
                    private float x_;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public float X {
                      get { return x_; }
                      set {
                        x_ = value;
                      }
                    }

                    /// <summary>Field number for the "y" field.</summary>
                    public const int YFieldNumber = 2;
                    private float y_;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public float Y {
                      get { return y_; }
                      set {
                        y_ = value;
                      }
                    }

                    /// <summary>Field number for the "z" field.</summary>
                    public const int ZFieldNumber = 3;
                    private float z_;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public float Z {
                      get { return z_; }
                      set {
                        z_ = value;
                      }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public override bool Equals(object other) {
                      return Equals(other as Vector3);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public bool Equals(Vector3 other) {
                      if (ReferenceEquals(other, null)) {
                        return false;
                      }
                      if (ReferenceEquals(other, this)) {
                        return true;
                      }
                      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
                      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
                      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
                      return Equals(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public override int GetHashCode() {
                      int hash = 1;
                      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
                      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
                      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
                      if (_unknownFields != null) {
                        hash ^= _unknownFields.GetHashCode();
                      }
                      return hash;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public override string ToString() {
                      return pb::JsonFormatter.ToDiagnosticString(this);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public void WriteTo(pb::CodedOutputStream output) {
                      if (X != 0F) {
                        output.WriteRawTag(13);
                        output.WriteFloat(X);
                      }
                      if (Y != 0F) {
                        output.WriteRawTag(21);
                        output.WriteFloat(Y);
                      }
                      if (Z != 0F) {
                        output.WriteRawTag(29);
                        output.WriteFloat(Z);
                      }
                      if (_unknownFields != null) {
                        _unknownFields.WriteTo(output);
                      }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public int CalculateSize() {
                      int size = 0;
                      if (X != 0F) {
                        size += 1 + 4;
                      }
                      if (Y != 0F) {
                        size += 1 + 4;
                      }
                      if (Z != 0F) {
                        size += 1 + 4;
                      }
                      if (_unknownFields != null) {
                        size += _unknownFields.CalculateSize();
                      }
                      return size;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public void MergeFrom(Vector3 other) {
                      if (other == null) {
                        return;
                      }
                      if (other.X != 0F) {
                        X = other.X;
                      }
                      if (other.Y != 0F) {
                        Y = other.Y;
                      }
                      if (other.Z != 0F) {
                        Z = other.Z;
                      }
                      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public void MergeFrom(pb::CodedInputStream input) {
                      uint tag;
                      while ((tag = input.ReadTag()) != 0) {
                        switch(tag) {
                          default:
                            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                            break;
                          case 13: {
                            X = input.ReadFloat();
                            break;
                          }
                          case 21: {
                            Y = input.ReadFloat();
                            break;
                          }
                          case 29: {
                            Z = input.ReadFloat();
                            break;
                          }
                        }
                      }
                    }

                  }

                }
                #endregion

              }

              public sealed partial class ClientEncounterStageCombat : pb::IMessage<ClientEncounterStageCombat> {
                private static readonly pb::MessageParser<ClientEncounterStageCombat> _parser = new pb::MessageParser<ClientEncounterStageCombat>(() => new ClientEncounterStageCombat());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ClientEncounterStageCombat> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Descriptor.NestedTypes[4]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientEncounterStageCombat() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientEncounterStageCombat(ClientEncounterStageCombat other) : this() {
                  stateGraphNodes_ = other.stateGraphNodes_.Clone();
                  enemyTraits_ = other.enemyTraits_.Clone();
                  enemyRankTags_ = other.enemyRankTags_.Clone();
                  enemyFlavorText_ = other.enemyFlavorText_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientEncounterStageCombat Clone() {
                  return new ClientEncounterStageCombat(this);
                }

                /// <summary>Field number for the "state_graph_nodes" field.</summary>
                public const int StateGraphNodesFieldNumber = 1;
                private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState> _repeated_stateGraphNodes_codec
                    = pb::FieldCodec.ForMessage(10, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Parser);
                private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState> stateGraphNodes_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState> StateGraphNodes {
                  get { return stateGraphNodes_; }
                }

                /// <summary>Field number for the "enemy_traits" field.</summary>
                public const int EnemyTraitsFieldNumber = 2;
                private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatEnemyTrait> _repeated_enemyTraits_codec
                    = pb::FieldCodec.ForMessage(18, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatEnemyTrait.Parser);
                private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatEnemyTrait> enemyTraits_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatEnemyTrait>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatEnemyTrait> EnemyTraits {
                  get { return enemyTraits_; }
                }

                /// <summary>Field number for the "enemy_rank_tags" field.</summary>
                public const int EnemyRankTagsFieldNumber = 3;
                private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounterType> _repeated_enemyRankTags_codec
                    = pb::FieldCodec.ForMessage(26, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounterType.Parser);
                private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounterType> enemyRankTags_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounterType>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounterType> EnemyRankTags {
                  get { return enemyRankTags_; }
                }

                /// <summary>Field number for the "enemy_flavor_text" field.</summary>
                public const int EnemyFlavorTextFieldNumber = 4;
                private string enemyFlavorText_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string EnemyFlavorText {
                  get { return enemyFlavorText_; }
                  set {
                    enemyFlavorText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ClientEncounterStageCombat);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ClientEncounterStageCombat other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if(!stateGraphNodes_.Equals(other.stateGraphNodes_)) return false;
                  if(!enemyTraits_.Equals(other.enemyTraits_)) return false;
                  if(!enemyRankTags_.Equals(other.enemyRankTags_)) return false;
                  if (EnemyFlavorText != other.EnemyFlavorText) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  hash ^= stateGraphNodes_.GetHashCode();
                  hash ^= enemyTraits_.GetHashCode();
                  hash ^= enemyRankTags_.GetHashCode();
                  if (EnemyFlavorText.Length != 0) hash ^= EnemyFlavorText.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  stateGraphNodes_.WriteTo(output, _repeated_stateGraphNodes_codec);
                  enemyTraits_.WriteTo(output, _repeated_enemyTraits_codec);
                  enemyRankTags_.WriteTo(output, _repeated_enemyRankTags_codec);
                  if (EnemyFlavorText.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(EnemyFlavorText);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  size += stateGraphNodes_.CalculateSize(_repeated_stateGraphNodes_codec);
                  size += enemyTraits_.CalculateSize(_repeated_enemyTraits_codec);
                  size += enemyRankTags_.CalculateSize(_repeated_enemyRankTags_codec);
                  if (EnemyFlavorText.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(EnemyFlavorText);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ClientEncounterStageCombat other) {
                  if (other == null) {
                    return;
                  }
                  stateGraphNodes_.Add(other.stateGraphNodes_);
                  enemyTraits_.Add(other.enemyTraits_);
                  enemyRankTags_.Add(other.enemyRankTags_);
                  if (other.EnemyFlavorText.Length != 0) {
                    EnemyFlavorText = other.EnemyFlavorText;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        stateGraphNodes_.AddEntriesFrom(input, _repeated_stateGraphNodes_codec);
                        break;
                      }
                      case 18: {
                        enemyTraits_.AddEntriesFrom(input, _repeated_enemyTraits_codec);
                        break;
                      }
                      case 26: {
                        enemyRankTags_.AddEntriesFrom(input, _repeated_enemyRankTags_codec);
                        break;
                      }
                      case 34: {
                        EnemyFlavorText = input.ReadString();
                        break;
                      }
                    }
                  }
                }

                #region Nested types
                /// <summary>Container for nested types declared in the ClientEncounterStageCombat message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static partial class Types {
                  public sealed partial class ClientCombatState : pb::IMessage<ClientCombatState> {
                    private static readonly pb::MessageParser<ClientCombatState> _parser = new pb::MessageParser<ClientCombatState>(() => new ClientCombatState());
                    private pb::UnknownFieldSet _unknownFields;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public static pb::MessageParser<ClientCombatState> Parser { get { return _parser; } }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public static pbr::MessageDescriptor Descriptor {
                      get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Descriptor.NestedTypes[0]; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    pbr::MessageDescriptor pb::IMessage.Descriptor {
                      get { return Descriptor; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public ClientCombatState() {
                      OnConstruction();
                    }

                    partial void OnConstruction();

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public ClientCombatState(ClientCombatState other) : this() {
                      possibleMoves_ = other.possibleMoves_.Clone();
                      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public ClientCombatState Clone() {
                      return new ClientCombatState(this);
                    }

                    /// <summary>Field number for the "possible_moves" field.</summary>
                    public const int PossibleMovesFieldNumber = 1;
                    private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType> _repeated_possibleMoves_codec
                        = pb::FieldCodec.ForMessage(10, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Parser);
                    private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType> possibleMoves_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType>();
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType> PossibleMoves {
                      get { return possibleMoves_; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public override bool Equals(object other) {
                      return Equals(other as ClientCombatState);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public bool Equals(ClientCombatState other) {
                      if (ReferenceEquals(other, null)) {
                        return false;
                      }
                      if (ReferenceEquals(other, this)) {
                        return true;
                      }
                      if(!possibleMoves_.Equals(other.possibleMoves_)) return false;
                      return Equals(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public override int GetHashCode() {
                      int hash = 1;
                      hash ^= possibleMoves_.GetHashCode();
                      if (_unknownFields != null) {
                        hash ^= _unknownFields.GetHashCode();
                      }
                      return hash;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public override string ToString() {
                      return pb::JsonFormatter.ToDiagnosticString(this);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public void WriteTo(pb::CodedOutputStream output) {
                      possibleMoves_.WriteTo(output, _repeated_possibleMoves_codec);
                      if (_unknownFields != null) {
                        _unknownFields.WriteTo(output);
                      }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public int CalculateSize() {
                      int size = 0;
                      size += possibleMoves_.CalculateSize(_repeated_possibleMoves_codec);
                      if (_unknownFields != null) {
                        size += _unknownFields.CalculateSize();
                      }
                      return size;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public void MergeFrom(ClientCombatState other) {
                      if (other == null) {
                        return;
                      }
                      possibleMoves_.Add(other.possibleMoves_);
                      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public void MergeFrom(pb::CodedInputStream input) {
                      uint tag;
                      while ((tag = input.ReadTag()) != 0) {
                        switch(tag) {
                          default:
                            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                            break;
                          case 10: {
                            possibleMoves_.AddEntriesFrom(input, _repeated_possibleMoves_codec);
                            break;
                          }
                        }
                      }
                    }

                    #region Nested types
                    /// <summary>Container for nested types declared in the ClientCombatState message type.</summary>
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public static partial class Types {
                      public sealed partial class ClientCombatMoveType : pb::IMessage<ClientCombatMoveType> {
                        private static readonly pb::MessageParser<ClientCombatMoveType> _parser = new pb::MessageParser<ClientCombatMoveType>(() => new ClientCombatMoveType());
                        private pb::UnknownFieldSet _unknownFields;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public static pb::MessageParser<ClientCombatMoveType> Parser { get { return _parser; } }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public static pbr::MessageDescriptor Descriptor {
                          get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Descriptor.NestedTypes[0]; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        pbr::MessageDescriptor pb::IMessage.Descriptor {
                          get { return Descriptor; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public ClientCombatMoveType() {
                          OnConstruction();
                        }

                        partial void OnConstruction();

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public ClientCombatMoveType(ClientCombatMoveType other) : this() {
                          enemyActionTimeline_ = other.enemyActionTimeline_;
                          playerSucceedTimeline_ = other.playerSucceedTimeline_;
                          playerFailedTimeline_ = other.playerFailedTimeline_;
                          switch (other.CombatMoveCase) {
                            case CombatMoveOneofCase.PlayerAttack:
                              PlayerAttack = other.PlayerAttack.Clone();
                              break;
                            case CombatMoveOneofCase.PlayerDefend:
                              PlayerDefend = other.PlayerDefend.Clone();
                              break;
                            case CombatMoveOneofCase.PlayerAutoAdvance:
                              PlayerAutoAdvance = other.PlayerAutoAdvance.Clone();
                              break;
                          }

                          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public ClientCombatMoveType Clone() {
                          return new ClientCombatMoveType(this);
                        }

                        /// <summary>Field number for the "player_attack" field.</summary>
                        public const int PlayerAttackFieldNumber = 1;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerAttack PlayerAttack {
                          get { return combatMoveCase_ == CombatMoveOneofCase.PlayerAttack ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerAttack) combatMove_ : null; }
                          set {
                            combatMove_ = value;
                            combatMoveCase_ = value == null ? CombatMoveOneofCase.None : CombatMoveOneofCase.PlayerAttack;
                          }
                        }

                        /// <summary>Field number for the "player_defend" field.</summary>
                        public const int PlayerDefendFieldNumber = 2;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerDefend PlayerDefend {
                          get { return combatMoveCase_ == CombatMoveOneofCase.PlayerDefend ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerDefend) combatMove_ : null; }
                          set {
                            combatMove_ = value;
                            combatMoveCase_ = value == null ? CombatMoveOneofCase.None : CombatMoveOneofCase.PlayerDefend;
                          }
                        }

                        /// <summary>Field number for the "player_auto_advance" field.</summary>
                        public const int PlayerAutoAdvanceFieldNumber = 3;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerAutoAdvance PlayerAutoAdvance {
                          get { return combatMoveCase_ == CombatMoveOneofCase.PlayerAutoAdvance ? (global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerAutoAdvance) combatMove_ : null; }
                          set {
                            combatMove_ = value;
                            combatMoveCase_ = value == null ? CombatMoveOneofCase.None : CombatMoveOneofCase.PlayerAutoAdvance;
                          }
                        }

                        /// <summary>Field number for the "enemy_action_timeline" field.</summary>
                        public const int EnemyActionTimelineFieldNumber = 4;
                        private string enemyActionTimeline_ = "";
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public string EnemyActionTimeline {
                          get { return enemyActionTimeline_; }
                          set {
                            enemyActionTimeline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                          }
                        }

                        /// <summary>Field number for the "player_succeed_timeline" field.</summary>
                        public const int PlayerSucceedTimelineFieldNumber = 5;
                        private string playerSucceedTimeline_ = "";
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public string PlayerSucceedTimeline {
                          get { return playerSucceedTimeline_; }
                          set {
                            playerSucceedTimeline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                          }
                        }

                        /// <summary>Field number for the "player_failed_timeline" field.</summary>
                        public const int PlayerFailedTimelineFieldNumber = 6;
                        private string playerFailedTimeline_ = "";
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public string PlayerFailedTimeline {
                          get { return playerFailedTimeline_; }
                          set {
                            playerFailedTimeline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                          }
                        }

                        private object combatMove_;
                        /// <summary>Enum of possible cases for the "CombatMove" oneof.</summary>
                        public enum CombatMoveOneofCase {
                          None = 0,
                          PlayerAttack = 1,
                          PlayerDefend = 2,
                          PlayerAutoAdvance = 3,
                        }
                        private CombatMoveOneofCase combatMoveCase_ = CombatMoveOneofCase.None;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public CombatMoveOneofCase CombatMoveCase {
                          get { return combatMoveCase_; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void ClearCombatMove() {
                          combatMoveCase_ = CombatMoveOneofCase.None;
                          combatMove_ = null;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override bool Equals(object other) {
                          return Equals(other as ClientCombatMoveType);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public bool Equals(ClientCombatMoveType other) {
                          if (ReferenceEquals(other, null)) {
                            return false;
                          }
                          if (ReferenceEquals(other, this)) {
                            return true;
                          }
                          if (!object.Equals(PlayerAttack, other.PlayerAttack)) return false;
                          if (!object.Equals(PlayerDefend, other.PlayerDefend)) return false;
                          if (!object.Equals(PlayerAutoAdvance, other.PlayerAutoAdvance)) return false;
                          if (EnemyActionTimeline != other.EnemyActionTimeline) return false;
                          if (PlayerSucceedTimeline != other.PlayerSucceedTimeline) return false;
                          if (PlayerFailedTimeline != other.PlayerFailedTimeline) return false;
                          if (CombatMoveCase != other.CombatMoveCase) return false;
                          return Equals(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override int GetHashCode() {
                          int hash = 1;
                          if (combatMoveCase_ == CombatMoveOneofCase.PlayerAttack) hash ^= PlayerAttack.GetHashCode();
                          if (combatMoveCase_ == CombatMoveOneofCase.PlayerDefend) hash ^= PlayerDefend.GetHashCode();
                          if (combatMoveCase_ == CombatMoveOneofCase.PlayerAutoAdvance) hash ^= PlayerAutoAdvance.GetHashCode();
                          if (EnemyActionTimeline.Length != 0) hash ^= EnemyActionTimeline.GetHashCode();
                          if (PlayerSucceedTimeline.Length != 0) hash ^= PlayerSucceedTimeline.GetHashCode();
                          if (PlayerFailedTimeline.Length != 0) hash ^= PlayerFailedTimeline.GetHashCode();
                          hash ^= (int) combatMoveCase_;
                          if (_unknownFields != null) {
                            hash ^= _unknownFields.GetHashCode();
                          }
                          return hash;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public override string ToString() {
                          return pb::JsonFormatter.ToDiagnosticString(this);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void WriteTo(pb::CodedOutputStream output) {
                          if (combatMoveCase_ == CombatMoveOneofCase.PlayerAttack) {
                            output.WriteRawTag(10);
                            output.WriteMessage(PlayerAttack);
                          }
                          if (combatMoveCase_ == CombatMoveOneofCase.PlayerDefend) {
                            output.WriteRawTag(18);
                            output.WriteMessage(PlayerDefend);
                          }
                          if (combatMoveCase_ == CombatMoveOneofCase.PlayerAutoAdvance) {
                            output.WriteRawTag(26);
                            output.WriteMessage(PlayerAutoAdvance);
                          }
                          if (EnemyActionTimeline.Length != 0) {
                            output.WriteRawTag(34);
                            output.WriteString(EnemyActionTimeline);
                          }
                          if (PlayerSucceedTimeline.Length != 0) {
                            output.WriteRawTag(42);
                            output.WriteString(PlayerSucceedTimeline);
                          }
                          if (PlayerFailedTimeline.Length != 0) {
                            output.WriteRawTag(50);
                            output.WriteString(PlayerFailedTimeline);
                          }
                          if (_unknownFields != null) {
                            _unknownFields.WriteTo(output);
                          }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public int CalculateSize() {
                          int size = 0;
                          if (combatMoveCase_ == CombatMoveOneofCase.PlayerAttack) {
                            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerAttack);
                          }
                          if (combatMoveCase_ == CombatMoveOneofCase.PlayerDefend) {
                            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerDefend);
                          }
                          if (combatMoveCase_ == CombatMoveOneofCase.PlayerAutoAdvance) {
                            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerAutoAdvance);
                          }
                          if (EnemyActionTimeline.Length != 0) {
                            size += 1 + pb::CodedOutputStream.ComputeStringSize(EnemyActionTimeline);
                          }
                          if (PlayerSucceedTimeline.Length != 0) {
                            size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerSucceedTimeline);
                          }
                          if (PlayerFailedTimeline.Length != 0) {
                            size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerFailedTimeline);
                          }
                          if (_unknownFields != null) {
                            size += _unknownFields.CalculateSize();
                          }
                          return size;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void MergeFrom(ClientCombatMoveType other) {
                          if (other == null) {
                            return;
                          }
                          if (other.EnemyActionTimeline.Length != 0) {
                            EnemyActionTimeline = other.EnemyActionTimeline;
                          }
                          if (other.PlayerSucceedTimeline.Length != 0) {
                            PlayerSucceedTimeline = other.PlayerSucceedTimeline;
                          }
                          if (other.PlayerFailedTimeline.Length != 0) {
                            PlayerFailedTimeline = other.PlayerFailedTimeline;
                          }
                          switch (other.CombatMoveCase) {
                            case CombatMoveOneofCase.PlayerAttack:
                              if (PlayerAttack == null) {
                                PlayerAttack = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerAttack();
                              }
                              PlayerAttack.MergeFrom(other.PlayerAttack);
                              break;
                            case CombatMoveOneofCase.PlayerDefend:
                              if (PlayerDefend == null) {
                                PlayerDefend = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerDefend();
                              }
                              PlayerDefend.MergeFrom(other.PlayerDefend);
                              break;
                            case CombatMoveOneofCase.PlayerAutoAdvance:
                              if (PlayerAutoAdvance == null) {
                                PlayerAutoAdvance = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerAutoAdvance();
                              }
                              PlayerAutoAdvance.MergeFrom(other.PlayerAutoAdvance);
                              break;
                          }

                          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public void MergeFrom(pb::CodedInputStream input) {
                          uint tag;
                          while ((tag = input.ReadTag()) != 0) {
                            switch(tag) {
                              default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                                break;
                              case 10: {
                                global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerAttack subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerAttack();
                                if (combatMoveCase_ == CombatMoveOneofCase.PlayerAttack) {
                                  subBuilder.MergeFrom(PlayerAttack);
                                }
                                input.ReadMessage(subBuilder);
                                PlayerAttack = subBuilder;
                                break;
                              }
                              case 18: {
                                global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerDefend subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerDefend();
                                if (combatMoveCase_ == CombatMoveOneofCase.PlayerDefend) {
                                  subBuilder.MergeFrom(PlayerDefend);
                                }
                                input.ReadMessage(subBuilder);
                                PlayerDefend = subBuilder;
                                break;
                              }
                              case 26: {
                                global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerAutoAdvance subBuilder = new global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerAutoAdvance();
                                if (combatMoveCase_ == CombatMoveOneofCase.PlayerAutoAdvance) {
                                  subBuilder.MergeFrom(PlayerAutoAdvance);
                                }
                                input.ReadMessage(subBuilder);
                                PlayerAutoAdvance = subBuilder;
                                break;
                              }
                              case 34: {
                                EnemyActionTimeline = input.ReadString();
                                break;
                              }
                              case 42: {
                                PlayerSucceedTimeline = input.ReadString();
                                break;
                              }
                              case 50: {
                                PlayerFailedTimeline = input.ReadString();
                                break;
                              }
                            }
                          }
                        }

                        #region Nested types
                        /// <summary>Container for nested types declared in the ClientCombatMoveType message type.</summary>
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        public static partial class Types {
                          public sealed partial class ClientCombatPlayerDefend : pb::IMessage<ClientCombatPlayerDefend> {
                            private static readonly pb::MessageParser<ClientCombatPlayerDefend> _parser = new pb::MessageParser<ClientCombatPlayerDefend>(() => new ClientCombatPlayerDefend());
                            private pb::UnknownFieldSet _unknownFields;
                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public static pb::MessageParser<ClientCombatPlayerDefend> Parser { get { return _parser; } }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public static pbr::MessageDescriptor Descriptor {
                              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Descriptor.NestedTypes[0]; }
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            pbr::MessageDescriptor pb::IMessage.Descriptor {
                              get { return Descriptor; }
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public ClientCombatPlayerDefend() {
                              OnConstruction();
                            }

                            partial void OnConstruction();

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public ClientCombatPlayerDefend(ClientCombatPlayerDefend other) : this() {
                              patternList_ = other.patternList_.Clone();
                              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public ClientCombatPlayerDefend Clone() {
                              return new ClientCombatPlayerDefend(this);
                            }

                            /// <summary>Field number for the "pattern_list" field.</summary>
                            public const int PatternListFieldNumber = 1;
                            private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerDefend.Types.ClientCombatPlayerDefendPattern> _repeated_patternList_codec
                                = pb::FieldCodec.ForMessage(10, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerDefend.Types.ClientCombatPlayerDefendPattern.Parser);
                            private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerDefend.Types.ClientCombatPlayerDefendPattern> patternList_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerDefend.Types.ClientCombatPlayerDefendPattern>();
                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerDefend.Types.ClientCombatPlayerDefendPattern> PatternList {
                              get { return patternList_; }
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public override bool Equals(object other) {
                              return Equals(other as ClientCombatPlayerDefend);
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public bool Equals(ClientCombatPlayerDefend other) {
                              if (ReferenceEquals(other, null)) {
                                return false;
                              }
                              if (ReferenceEquals(other, this)) {
                                return true;
                              }
                              if(!patternList_.Equals(other.patternList_)) return false;
                              return Equals(_unknownFields, other._unknownFields);
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public override int GetHashCode() {
                              int hash = 1;
                              hash ^= patternList_.GetHashCode();
                              if (_unknownFields != null) {
                                hash ^= _unknownFields.GetHashCode();
                              }
                              return hash;
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public override string ToString() {
                              return pb::JsonFormatter.ToDiagnosticString(this);
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public void WriteTo(pb::CodedOutputStream output) {
                              patternList_.WriteTo(output, _repeated_patternList_codec);
                              if (_unknownFields != null) {
                                _unknownFields.WriteTo(output);
                              }
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public int CalculateSize() {
                              int size = 0;
                              size += patternList_.CalculateSize(_repeated_patternList_codec);
                              if (_unknownFields != null) {
                                size += _unknownFields.CalculateSize();
                              }
                              return size;
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public void MergeFrom(ClientCombatPlayerDefend other) {
                              if (other == null) {
                                return;
                              }
                              patternList_.Add(other.patternList_);
                              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public void MergeFrom(pb::CodedInputStream input) {
                              uint tag;
                              while ((tag = input.ReadTag()) != 0) {
                                switch(tag) {
                                  default:
                                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                                    break;
                                  case 10: {
                                    patternList_.AddEntriesFrom(input, _repeated_patternList_codec);
                                    break;
                                  }
                                }
                              }
                            }

                            #region Nested types
                            /// <summary>Container for nested types declared in the ClientCombatPlayerDefend message type.</summary>
                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public static partial class Types {
                              public sealed partial class ClientCombatPlayerDefendPattern : pb::IMessage<ClientCombatPlayerDefendPattern> {
                                private static readonly pb::MessageParser<ClientCombatPlayerDefendPattern> _parser = new pb::MessageParser<ClientCombatPlayerDefendPattern>(() => new ClientCombatPlayerDefendPattern());
                                private pb::UnknownFieldSet _unknownFields;
                                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                                public static pb::MessageParser<ClientCombatPlayerDefendPattern> Parser { get { return _parser; } }

                                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                                public static pbr::MessageDescriptor Descriptor {
                                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Types.ClientCombatPlayerDefend.Descriptor.NestedTypes[0]; }
                                }

                                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                                pbr::MessageDescriptor pb::IMessage.Descriptor {
                                  get { return Descriptor; }
                                }

                                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                                public ClientCombatPlayerDefendPattern() {
                                  OnConstruction();
                                }

                                partial void OnConstruction();

                                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                                public ClientCombatPlayerDefendPattern(ClientCombatPlayerDefendPattern other) : this() {
                                  weight_ = other.weight_;
                                  protegoPattern_ = other.protegoPattern_;
                                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                                }

                                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                                public ClientCombatPlayerDefendPattern Clone() {
                                  return new ClientCombatPlayerDefendPattern(this);
                                }

                                /// <summary>Field number for the "weight" field.</summary>
                                public const int WeightFieldNumber = 1;
                                private int weight_;
                                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                                public int Weight {
                                  get { return weight_; }
                                  set {
                                    weight_ = value;
                                  }
                                }

                                /// <summary>Field number for the "protego_pattern" field.</summary>
                                public const int ProtegoPatternFieldNumber = 2;
                                private string protegoPattern_ = "";
                                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                                public string ProtegoPattern {
                                  get { return protegoPattern_; }
                                  set {
                                    protegoPattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                                  }
                                }

                                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                                public override bool Equals(object other) {
                                  return Equals(other as ClientCombatPlayerDefendPattern);
                                }

                                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                                public bool Equals(ClientCombatPlayerDefendPattern other) {
                                  if (ReferenceEquals(other, null)) {
                                    return false;
                                  }
                                  if (ReferenceEquals(other, this)) {
                                    return true;
                                  }
                                  if (Weight != other.Weight) return false;
                                  if (ProtegoPattern != other.ProtegoPattern) return false;
                                  return Equals(_unknownFields, other._unknownFields);
                                }

                                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                                public override int GetHashCode() {
                                  int hash = 1;
                                  if (Weight != 0) hash ^= Weight.GetHashCode();
                                  if (ProtegoPattern.Length != 0) hash ^= ProtegoPattern.GetHashCode();
                                  if (_unknownFields != null) {
                                    hash ^= _unknownFields.GetHashCode();
                                  }
                                  return hash;
                                }

                                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                                public override string ToString() {
                                  return pb::JsonFormatter.ToDiagnosticString(this);
                                }

                                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                                public void WriteTo(pb::CodedOutputStream output) {
                                  if (Weight != 0) {
                                    output.WriteRawTag(8);
                                    output.WriteInt32(Weight);
                                  }
                                  if (ProtegoPattern.Length != 0) {
                                    output.WriteRawTag(18);
                                    output.WriteString(ProtegoPattern);
                                  }
                                  if (_unknownFields != null) {
                                    _unknownFields.WriteTo(output);
                                  }
                                }

                                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                                public int CalculateSize() {
                                  int size = 0;
                                  if (Weight != 0) {
                                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(Weight);
                                  }
                                  if (ProtegoPattern.Length != 0) {
                                    size += 1 + pb::CodedOutputStream.ComputeStringSize(ProtegoPattern);
                                  }
                                  if (_unknownFields != null) {
                                    size += _unknownFields.CalculateSize();
                                  }
                                  return size;
                                }

                                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                                public void MergeFrom(ClientCombatPlayerDefendPattern other) {
                                  if (other == null) {
                                    return;
                                  }
                                  if (other.Weight != 0) {
                                    Weight = other.Weight;
                                  }
                                  if (other.ProtegoPattern.Length != 0) {
                                    ProtegoPattern = other.ProtegoPattern;
                                  }
                                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                                }

                                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                                public void MergeFrom(pb::CodedInputStream input) {
                                  uint tag;
                                  while ((tag = input.ReadTag()) != 0) {
                                    switch(tag) {
                                      default:
                                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                                        break;
                                      case 8: {
                                        Weight = input.ReadInt32();
                                        break;
                                      }
                                      case 18: {
                                        ProtegoPattern = input.ReadString();
                                        break;
                                      }
                                    }
                                  }
                                }

                              }

                            }
                            #endregion

                          }

                          public sealed partial class ClientCombatPlayerAutoAdvance : pb::IMessage<ClientCombatPlayerAutoAdvance> {
                            private static readonly pb::MessageParser<ClientCombatPlayerAutoAdvance> _parser = new pb::MessageParser<ClientCombatPlayerAutoAdvance>(() => new ClientCombatPlayerAutoAdvance());
                            private pb::UnknownFieldSet _unknownFields;
                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public static pb::MessageParser<ClientCombatPlayerAutoAdvance> Parser { get { return _parser; } }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public static pbr::MessageDescriptor Descriptor {
                              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Descriptor.NestedTypes[1]; }
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            pbr::MessageDescriptor pb::IMessage.Descriptor {
                              get { return Descriptor; }
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public ClientCombatPlayerAutoAdvance() {
                              OnConstruction();
                            }

                            partial void OnConstruction();

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public ClientCombatPlayerAutoAdvance(ClientCombatPlayerAutoAdvance other) : this() {
                              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public ClientCombatPlayerAutoAdvance Clone() {
                              return new ClientCombatPlayerAutoAdvance(this);
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public override bool Equals(object other) {
                              return Equals(other as ClientCombatPlayerAutoAdvance);
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public bool Equals(ClientCombatPlayerAutoAdvance other) {
                              if (ReferenceEquals(other, null)) {
                                return false;
                              }
                              if (ReferenceEquals(other, this)) {
                                return true;
                              }
                              return Equals(_unknownFields, other._unknownFields);
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public override int GetHashCode() {
                              int hash = 1;
                              if (_unknownFields != null) {
                                hash ^= _unknownFields.GetHashCode();
                              }
                              return hash;
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public override string ToString() {
                              return pb::JsonFormatter.ToDiagnosticString(this);
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public void WriteTo(pb::CodedOutputStream output) {
                              if (_unknownFields != null) {
                                _unknownFields.WriteTo(output);
                              }
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public int CalculateSize() {
                              int size = 0;
                              if (_unknownFields != null) {
                                size += _unknownFields.CalculateSize();
                              }
                              return size;
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public void MergeFrom(ClientCombatPlayerAutoAdvance other) {
                              if (other == null) {
                                return;
                              }
                              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public void MergeFrom(pb::CodedInputStream input) {
                              uint tag;
                              while ((tag = input.ReadTag()) != 0) {
                                switch(tag) {
                                  default:
                                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                                    break;
                                }
                              }
                            }

                          }

                          public sealed partial class ClientCombatPlayerAttack : pb::IMessage<ClientCombatPlayerAttack> {
                            private static readonly pb::MessageParser<ClientCombatPlayerAttack> _parser = new pb::MessageParser<ClientCombatPlayerAttack>(() => new ClientCombatPlayerAttack());
                            private pb::UnknownFieldSet _unknownFields;
                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public static pb::MessageParser<ClientCombatPlayerAttack> Parser { get { return _parser; } }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public static pbr::MessageDescriptor Descriptor {
                              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Types.ClientCombatState.Types.ClientCombatMoveType.Descriptor.NestedTypes[2]; }
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            pbr::MessageDescriptor pb::IMessage.Descriptor {
                              get { return Descriptor; }
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public ClientCombatPlayerAttack() {
                              OnConstruction();
                            }

                            partial void OnConstruction();

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public ClientCombatPlayerAttack(ClientCombatPlayerAttack other) : this() {
                              enemyBoneName_ = other.enemyBoneName_;
                              uiTargetRadius_ = other.uiTargetRadius_;
                              reticleTimeToFill_ = other.reticleTimeToFill_;
                              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public ClientCombatPlayerAttack Clone() {
                              return new ClientCombatPlayerAttack(this);
                            }

                            /// <summary>Field number for the "enemy_bone_name" field.</summary>
                            public const int EnemyBoneNameFieldNumber = 1;
                            private string enemyBoneName_ = "";
                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public string EnemyBoneName {
                              get { return enemyBoneName_; }
                              set {
                                enemyBoneName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                              }
                            }

                            /// <summary>Field number for the "ui_target_radius" field.</summary>
                            public const int UiTargetRadiusFieldNumber = 2;
                            private float uiTargetRadius_;
                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public float UiTargetRadius {
                              get { return uiTargetRadius_; }
                              set {
                                uiTargetRadius_ = value;
                              }
                            }

                            /// <summary>Field number for the "reticle_time_to_fill" field.</summary>
                            public const int ReticleTimeToFillFieldNumber = 3;
                            private float reticleTimeToFill_;
                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public float ReticleTimeToFill {
                              get { return reticleTimeToFill_; }
                              set {
                                reticleTimeToFill_ = value;
                              }
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public override bool Equals(object other) {
                              return Equals(other as ClientCombatPlayerAttack);
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public bool Equals(ClientCombatPlayerAttack other) {
                              if (ReferenceEquals(other, null)) {
                                return false;
                              }
                              if (ReferenceEquals(other, this)) {
                                return true;
                              }
                              if (EnemyBoneName != other.EnemyBoneName) return false;
                              if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UiTargetRadius, other.UiTargetRadius)) return false;
                              if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ReticleTimeToFill, other.ReticleTimeToFill)) return false;
                              return Equals(_unknownFields, other._unknownFields);
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public override int GetHashCode() {
                              int hash = 1;
                              if (EnemyBoneName.Length != 0) hash ^= EnemyBoneName.GetHashCode();
                              if (UiTargetRadius != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UiTargetRadius);
                              if (ReticleTimeToFill != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ReticleTimeToFill);
                              if (_unknownFields != null) {
                                hash ^= _unknownFields.GetHashCode();
                              }
                              return hash;
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public override string ToString() {
                              return pb::JsonFormatter.ToDiagnosticString(this);
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public void WriteTo(pb::CodedOutputStream output) {
                              if (EnemyBoneName.Length != 0) {
                                output.WriteRawTag(10);
                                output.WriteString(EnemyBoneName);
                              }
                              if (UiTargetRadius != 0F) {
                                output.WriteRawTag(21);
                                output.WriteFloat(UiTargetRadius);
                              }
                              if (ReticleTimeToFill != 0F) {
                                output.WriteRawTag(29);
                                output.WriteFloat(ReticleTimeToFill);
                              }
                              if (_unknownFields != null) {
                                _unknownFields.WriteTo(output);
                              }
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public int CalculateSize() {
                              int size = 0;
                              if (EnemyBoneName.Length != 0) {
                                size += 1 + pb::CodedOutputStream.ComputeStringSize(EnemyBoneName);
                              }
                              if (UiTargetRadius != 0F) {
                                size += 1 + 4;
                              }
                              if (ReticleTimeToFill != 0F) {
                                size += 1 + 4;
                              }
                              if (_unknownFields != null) {
                                size += _unknownFields.CalculateSize();
                              }
                              return size;
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public void MergeFrom(ClientCombatPlayerAttack other) {
                              if (other == null) {
                                return;
                              }
                              if (other.EnemyBoneName.Length != 0) {
                                EnemyBoneName = other.EnemyBoneName;
                              }
                              if (other.UiTargetRadius != 0F) {
                                UiTargetRadius = other.UiTargetRadius;
                              }
                              if (other.ReticleTimeToFill != 0F) {
                                ReticleTimeToFill = other.ReticleTimeToFill;
                              }
                              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                            }

                            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                            public void MergeFrom(pb::CodedInputStream input) {
                              uint tag;
                              while ((tag = input.ReadTag()) != 0) {
                                switch(tag) {
                                  default:
                                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                                    break;
                                  case 10: {
                                    EnemyBoneName = input.ReadString();
                                    break;
                                  }
                                  case 21: {
                                    UiTargetRadius = input.ReadFloat();
                                    break;
                                  }
                                  case 29: {
                                    ReticleTimeToFill = input.ReadFloat();
                                    break;
                                  }
                                }
                              }
                            }

                          }

                        }
                        #endregion

                      }

                    }
                    #endregion

                  }

                  public sealed partial class ClientCombatEnemyTrait : pb::IMessage<ClientCombatEnemyTrait> {
                    private static readonly pb::MessageParser<ClientCombatEnemyTrait> _parser = new pb::MessageParser<ClientCombatEnemyTrait>(() => new ClientCombatEnemyTrait());
                    private pb::UnknownFieldSet _unknownFields;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public static pb::MessageParser<ClientCombatEnemyTrait> Parser { get { return _parser; } }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public static pbr::MessageDescriptor Descriptor {
                      get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientEncounter.Types.ClientEncounterStage.Types.ClientEncounterStageCombat.Descriptor.NestedTypes[1]; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    pbr::MessageDescriptor pb::IMessage.Descriptor {
                      get { return Descriptor; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public ClientCombatEnemyTrait() {
                      OnConstruction();
                    }

                    partial void OnConstruction();

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public ClientCombatEnemyTrait(ClientCombatEnemyTrait other) : this() {
                      id_ = other.id_;
                      name_ = other.name_;
                      icon_ = other.icon_;
                      description_ = other.description_;
                      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public ClientCombatEnemyTrait Clone() {
                      return new ClientCombatEnemyTrait(this);
                    }

                    /// <summary>Field number for the "id" field.</summary>
                    public const int IdFieldNumber = 1;
                    private string id_ = "";
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public string Id {
                      get { return id_; }
                      set {
                        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                      }
                    }

                    /// <summary>Field number for the "name" field.</summary>
                    public const int NameFieldNumber = 2;
                    private string name_ = "";
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public string Name {
                      get { return name_; }
                      set {
                        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                      }
                    }

                    /// <summary>Field number for the "icon" field.</summary>
                    public const int IconFieldNumber = 3;
                    private string icon_ = "";
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public string Icon {
                      get { return icon_; }
                      set {
                        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                      }
                    }

                    /// <summary>Field number for the "description" field.</summary>
                    public const int DescriptionFieldNumber = 4;
                    private string description_ = "";
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public string Description {
                      get { return description_; }
                      set {
                        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                      }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public override bool Equals(object other) {
                      return Equals(other as ClientCombatEnemyTrait);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public bool Equals(ClientCombatEnemyTrait other) {
                      if (ReferenceEquals(other, null)) {
                        return false;
                      }
                      if (ReferenceEquals(other, this)) {
                        return true;
                      }
                      if (Id != other.Id) return false;
                      if (Name != other.Name) return false;
                      if (Icon != other.Icon) return false;
                      if (Description != other.Description) return false;
                      return Equals(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public override int GetHashCode() {
                      int hash = 1;
                      if (Id.Length != 0) hash ^= Id.GetHashCode();
                      if (Name.Length != 0) hash ^= Name.GetHashCode();
                      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
                      if (Description.Length != 0) hash ^= Description.GetHashCode();
                      if (_unknownFields != null) {
                        hash ^= _unknownFields.GetHashCode();
                      }
                      return hash;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public override string ToString() {
                      return pb::JsonFormatter.ToDiagnosticString(this);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public void WriteTo(pb::CodedOutputStream output) {
                      if (Id.Length != 0) {
                        output.WriteRawTag(10);
                        output.WriteString(Id);
                      }
                      if (Name.Length != 0) {
                        output.WriteRawTag(18);
                        output.WriteString(Name);
                      }
                      if (Icon.Length != 0) {
                        output.WriteRawTag(26);
                        output.WriteString(Icon);
                      }
                      if (Description.Length != 0) {
                        output.WriteRawTag(34);
                        output.WriteString(Description);
                      }
                      if (_unknownFields != null) {
                        _unknownFields.WriteTo(output);
                      }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public int CalculateSize() {
                      int size = 0;
                      if (Id.Length != 0) {
                        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
                      }
                      if (Name.Length != 0) {
                        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
                      }
                      if (Icon.Length != 0) {
                        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
                      }
                      if (Description.Length != 0) {
                        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
                      }
                      if (_unknownFields != null) {
                        size += _unknownFields.CalculateSize();
                      }
                      return size;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public void MergeFrom(ClientCombatEnemyTrait other) {
                      if (other == null) {
                        return;
                      }
                      if (other.Id.Length != 0) {
                        Id = other.Id;
                      }
                      if (other.Name.Length != 0) {
                        Name = other.Name;
                      }
                      if (other.Icon.Length != 0) {
                        Icon = other.Icon;
                      }
                      if (other.Description.Length != 0) {
                        Description = other.Description;
                      }
                      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    public void MergeFrom(pb::CodedInputStream input) {
                      uint tag;
                      while ((tag = input.ReadTag()) != 0) {
                        switch(tag) {
                          default:
                            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                            break;
                          case 10: {
                            Id = input.ReadString();
                            break;
                          }
                          case 18: {
                            Name = input.ReadString();
                            break;
                          }
                          case 26: {
                            Icon = input.ReadString();
                            break;
                          }
                          case 34: {
                            Description = input.ReadString();
                            break;
                          }
                        }
                      }
                    }

                  }

                }
                #endregion

              }

            }
            #endregion

          }

        }
        #endregion

      }

      public sealed partial class ClientDailyRewardMonthlySchedule : pb::IMessage<ClientDailyRewardMonthlySchedule> {
        private static readonly pb::MessageParser<ClientDailyRewardMonthlySchedule> _parser = new pb::MessageParser<ClientDailyRewardMonthlySchedule>(() => new ClientDailyRewardMonthlySchedule());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientDailyRewardMonthlySchedule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[25]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientDailyRewardMonthlySchedule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientDailyRewardMonthlySchedule(ClientDailyRewardMonthlySchedule other) : this() {
          id_ = other.id_;
          dailyRewards_ = other.dailyRewards_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientDailyRewardMonthlySchedule Clone() {
          return new ClientDailyRewardMonthlySchedule(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "daily_rewards" field.</summary>
        public const int DailyRewardsFieldNumber = 2;
        private static readonly pbc::MapField<uint, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientDailyRewardMonthlySchedule.Types.ClientDailyReward>.Codec _map_dailyRewards_codec
            = new pbc::MapField<uint, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientDailyRewardMonthlySchedule.Types.ClientDailyReward>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientDailyRewardMonthlySchedule.Types.ClientDailyReward.Parser), 18);
        private readonly pbc::MapField<uint, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientDailyRewardMonthlySchedule.Types.ClientDailyReward> dailyRewards_ = new pbc::MapField<uint, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientDailyRewardMonthlySchedule.Types.ClientDailyReward>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<uint, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientDailyRewardMonthlySchedule.Types.ClientDailyReward> DailyRewards {
          get { return dailyRewards_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientDailyRewardMonthlySchedule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientDailyRewardMonthlySchedule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (!DailyRewards.Equals(other.DailyRewards)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          hash ^= DailyRewards.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          dailyRewards_.WriteTo(output, _map_dailyRewards_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          size += dailyRewards_.CalculateSize(_map_dailyRewards_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientDailyRewardMonthlySchedule other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          dailyRewards_.Add(other.dailyRewards_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                dailyRewards_.AddEntriesFrom(input, _map_dailyRewards_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ClientDailyRewardMonthlySchedule message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class ClientDailyReward : pb::IMessage<ClientDailyReward> {
            private static readonly pb::MessageParser<ClientDailyReward> _parser = new pb::MessageParser<ClientDailyReward>(() => new ClientDailyReward());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ClientDailyReward> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientDailyRewardMonthlySchedule.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientDailyReward() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientDailyReward(ClientDailyReward other) : this() {
              hideAsCrate_ = other.hideAsCrate_;
              makeSparkly_ = other.makeSparkly_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientDailyReward Clone() {
              return new ClientDailyReward(this);
            }

            /// <summary>Field number for the "hide_as_crate" field.</summary>
            public const int HideAsCrateFieldNumber = 1;
            private bool hideAsCrate_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HideAsCrate {
              get { return hideAsCrate_; }
              set {
                hideAsCrate_ = value;
              }
            }

            /// <summary>Field number for the "make_sparkly" field.</summary>
            public const int MakeSparklyFieldNumber = 2;
            private bool makeSparkly_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool MakeSparkly {
              get { return makeSparkly_; }
              set {
                makeSparkly_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ClientDailyReward);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ClientDailyReward other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (HideAsCrate != other.HideAsCrate) return false;
              if (MakeSparkly != other.MakeSparkly) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (HideAsCrate != false) hash ^= HideAsCrate.GetHashCode();
              if (MakeSparkly != false) hash ^= MakeSparkly.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (HideAsCrate != false) {
                output.WriteRawTag(8);
                output.WriteBool(HideAsCrate);
              }
              if (MakeSparkly != false) {
                output.WriteRawTag(16);
                output.WriteBool(MakeSparkly);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (HideAsCrate != false) {
                size += 1 + 1;
              }
              if (MakeSparkly != false) {
                size += 1 + 1;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ClientDailyReward other) {
              if (other == null) {
                return;
              }
              if (other.HideAsCrate != false) {
                HideAsCrate = other.HideAsCrate;
              }
              if (other.MakeSparkly != false) {
                MakeSparkly = other.MakeSparkly;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    HideAsCrate = input.ReadBool();
                    break;
                  }
                  case 16: {
                    MakeSparkly = input.ReadBool();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class ClientCollectionPage : pb::IMessage<ClientCollectionPage> {
        private static readonly pb::MessageParser<ClientCollectionPage> _parser = new pb::MessageParser<ClientCollectionPage>(() => new ClientCollectionPage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientCollectionPage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[26]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientCollectionPage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientCollectionPage(ClientCollectionPage other) : this() {
          id_ = other.id_;
          name_ = other.name_;
          pagePrefab_ = other.pagePrefab_;
          iconBg_ = other.iconBg_;
          showInUi_ = other.showInUi_;
          visibilityRequirements_ = other.visibilityRequirements_ != null ? other.visibilityRequirements_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientCollectionPage Clone() {
          return new ClientCollectionPage(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "page_prefab" field.</summary>
        public const int PagePrefabFieldNumber = 3;
        private string pagePrefab_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PagePrefab {
          get { return pagePrefab_; }
          set {
            pagePrefab_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "icon_bg" field.</summary>
        public const int IconBgFieldNumber = 4;
        private string iconBg_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string IconBg {
          get { return iconBg_; }
          set {
            iconBg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "show_in_ui" field.</summary>
        public const int ShowInUiFieldNumber = 5;
        private bool showInUi_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ShowInUi {
          get { return showInUi_; }
          set {
            showInUi_ = value;
          }
        }

        /// <summary>Field number for the "visibility_requirements" field.</summary>
        public const int VisibilityRequirementsFieldNumber = 6;
        private global::WUProtos.Data.Requirements visibilityRequirements_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Requirements VisibilityRequirements {
          get { return visibilityRequirements_; }
          set {
            visibilityRequirements_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientCollectionPage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientCollectionPage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if (PagePrefab != other.PagePrefab) return false;
          if (IconBg != other.IconBg) return false;
          if (ShowInUi != other.ShowInUi) return false;
          if (!object.Equals(VisibilityRequirements, other.VisibilityRequirements)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (PagePrefab.Length != 0) hash ^= PagePrefab.GetHashCode();
          if (IconBg.Length != 0) hash ^= IconBg.GetHashCode();
          if (ShowInUi != false) hash ^= ShowInUi.GetHashCode();
          if (visibilityRequirements_ != null) hash ^= VisibilityRequirements.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (PagePrefab.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(PagePrefab);
          }
          if (IconBg.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(IconBg);
          }
          if (ShowInUi != false) {
            output.WriteRawTag(40);
            output.WriteBool(ShowInUi);
          }
          if (visibilityRequirements_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(VisibilityRequirements);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (PagePrefab.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PagePrefab);
          }
          if (IconBg.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(IconBg);
          }
          if (ShowInUi != false) {
            size += 1 + 1;
          }
          if (visibilityRequirements_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(VisibilityRequirements);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientCollectionPage other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.PagePrefab.Length != 0) {
            PagePrefab = other.PagePrefab;
          }
          if (other.IconBg.Length != 0) {
            IconBg = other.IconBg;
          }
          if (other.ShowInUi != false) {
            ShowInUi = other.ShowInUi;
          }
          if (other.visibilityRequirements_ != null) {
            if (visibilityRequirements_ == null) {
              VisibilityRequirements = new global::WUProtos.Data.Requirements();
            }
            VisibilityRequirements.MergeFrom(other.VisibilityRequirements);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                PagePrefab = input.ReadString();
                break;
              }
              case 34: {
                IconBg = input.ReadString();
                break;
              }
              case 40: {
                ShowInUi = input.ReadBool();
                break;
              }
              case 50: {
                if (visibilityRequirements_ == null) {
                  VisibilityRequirements = new global::WUProtos.Data.Requirements();
                }
                input.ReadMessage(VisibilityRequirements);
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientCollectionItem : pb::IMessage<ClientCollectionItem> {
        private static readonly pb::MessageParser<ClientCollectionItem> _parser = new pb::MessageParser<ClientCollectionItem>(() => new ClientCollectionItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientCollectionItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[27]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientCollectionItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientCollectionItem(ClientCollectionItem other) : this() {
          id_ = other.id_;
          name_ = other.name_;
          returnLocation_ = other.returnLocation_;
          description_ = other.description_;
          iconReturned_ = other.iconReturned_;
          showInUi_ = other.showInUi_;
          mysteryData_ = other.mysteryData_.Clone();
          stickerPlacedStoryboardId_ = other.stickerPlacedStoryboardId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientCollectionItem Clone() {
          return new ClientCollectionItem(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "return_location" field.</summary>
        public const int ReturnLocationFieldNumber = 3;
        private string returnLocation_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ReturnLocation {
          get { return returnLocation_; }
          set {
            returnLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 4;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "icon_returned" field.</summary>
        public const int IconReturnedFieldNumber = 5;
        private string iconReturned_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string IconReturned {
          get { return iconReturned_; }
          set {
            iconReturned_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "show_in_ui" field.</summary>
        public const int ShowInUiFieldNumber = 6;
        private bool showInUi_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ShowInUi {
          get { return showInUi_; }
          set {
            showInUi_ = value;
          }
        }

        /// <summary>Field number for the "mystery_data" field.</summary>
        public const int MysteryDataFieldNumber = 7;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionItem.Types.MysteryItemInfo> _repeated_mysteryData_codec
            = pb::FieldCodec.ForMessage(58, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionItem.Types.MysteryItemInfo.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionItem.Types.MysteryItemInfo> mysteryData_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionItem.Types.MysteryItemInfo>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionItem.Types.MysteryItemInfo> MysteryData {
          get { return mysteryData_; }
        }

        /// <summary>Field number for the "sticker_placed_storyboard_id" field.</summary>
        public const int StickerPlacedStoryboardIdFieldNumber = 8;
        private string stickerPlacedStoryboardId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StickerPlacedStoryboardId {
          get { return stickerPlacedStoryboardId_; }
          set {
            stickerPlacedStoryboardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientCollectionItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientCollectionItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if (ReturnLocation != other.ReturnLocation) return false;
          if (Description != other.Description) return false;
          if (IconReturned != other.IconReturned) return false;
          if (ShowInUi != other.ShowInUi) return false;
          if(!mysteryData_.Equals(other.mysteryData_)) return false;
          if (StickerPlacedStoryboardId != other.StickerPlacedStoryboardId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (ReturnLocation.Length != 0) hash ^= ReturnLocation.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (IconReturned.Length != 0) hash ^= IconReturned.GetHashCode();
          if (ShowInUi != false) hash ^= ShowInUi.GetHashCode();
          hash ^= mysteryData_.GetHashCode();
          if (StickerPlacedStoryboardId.Length != 0) hash ^= StickerPlacedStoryboardId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (ReturnLocation.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ReturnLocation);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Description);
          }
          if (IconReturned.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(IconReturned);
          }
          if (ShowInUi != false) {
            output.WriteRawTag(48);
            output.WriteBool(ShowInUi);
          }
          mysteryData_.WriteTo(output, _repeated_mysteryData_codec);
          if (StickerPlacedStoryboardId.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(StickerPlacedStoryboardId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (ReturnLocation.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ReturnLocation);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (IconReturned.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(IconReturned);
          }
          if (ShowInUi != false) {
            size += 1 + 1;
          }
          size += mysteryData_.CalculateSize(_repeated_mysteryData_codec);
          if (StickerPlacedStoryboardId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StickerPlacedStoryboardId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientCollectionItem other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.ReturnLocation.Length != 0) {
            ReturnLocation = other.ReturnLocation;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          if (other.IconReturned.Length != 0) {
            IconReturned = other.IconReturned;
          }
          if (other.ShowInUi != false) {
            ShowInUi = other.ShowInUi;
          }
          mysteryData_.Add(other.mysteryData_);
          if (other.StickerPlacedStoryboardId.Length != 0) {
            StickerPlacedStoryboardId = other.StickerPlacedStoryboardId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                ReturnLocation = input.ReadString();
                break;
              }
              case 34: {
                Description = input.ReadString();
                break;
              }
              case 42: {
                IconReturned = input.ReadString();
                break;
              }
              case 48: {
                ShowInUi = input.ReadBool();
                break;
              }
              case 58: {
                mysteryData_.AddEntriesFrom(input, _repeated_mysteryData_codec);
                break;
              }
              case 66: {
                StickerPlacedStoryboardId = input.ReadString();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ClientCollectionItem message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class MysteryItemInfo : pb::IMessage<MysteryItemInfo> {
            private static readonly pb::MessageParser<MysteryItemInfo> _parser = new pb::MessageParser<MysteryItemInfo>(() => new MysteryItemInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<MysteryItemInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientCollectionItem.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MysteryItemInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MysteryItemInfo(MysteryItemInfo other) : this() {
              name_ = other.name_;
              description_ = other.description_;
              icon_ = other.icon_;
              placedStoryboardId_ = other.placedStoryboardId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MysteryItemInfo Clone() {
              return new MysteryItemInfo(this);
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 1;
            private string name_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "description" field.</summary>
            public const int DescriptionFieldNumber = 2;
            private string description_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Description {
              get { return description_; }
              set {
                description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "icon" field.</summary>
            public const int IconFieldNumber = 3;
            private string icon_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Icon {
              get { return icon_; }
              set {
                icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "placed_storyboard_id" field.</summary>
            public const int PlacedStoryboardIdFieldNumber = 4;
            private string placedStoryboardId_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string PlacedStoryboardId {
              get { return placedStoryboardId_; }
              set {
                placedStoryboardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as MysteryItemInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(MysteryItemInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Name != other.Name) return false;
              if (Description != other.Description) return false;
              if (Icon != other.Icon) return false;
              if (PlacedStoryboardId != other.PlacedStoryboardId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              if (Description.Length != 0) hash ^= Description.GetHashCode();
              if (Icon.Length != 0) hash ^= Icon.GetHashCode();
              if (PlacedStoryboardId.Length != 0) hash ^= PlacedStoryboardId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (Description.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Description);
              }
              if (Icon.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Icon);
              }
              if (PlacedStoryboardId.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(PlacedStoryboardId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (Description.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
              }
              if (Icon.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
              }
              if (PlacedStoryboardId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(PlacedStoryboardId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(MysteryItemInfo other) {
              if (other == null) {
                return;
              }
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              if (other.Description.Length != 0) {
                Description = other.Description;
              }
              if (other.Icon.Length != 0) {
                Icon = other.Icon;
              }
              if (other.PlacedStoryboardId.Length != 0) {
                PlacedStoryboardId = other.PlacedStoryboardId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 18: {
                    Description = input.ReadString();
                    break;
                  }
                  case 26: {
                    Icon = input.ReadString();
                    break;
                  }
                  case 34: {
                    PlacedStoryboardId = input.ReadString();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class ClientChamberTemplate : pb::IMessage<ClientChamberTemplate> {
        private static readonly pb::MessageParser<ClientChamberTemplate> _parser = new pb::MessageParser<ClientChamberTemplate>(() => new ClientChamberTemplate());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientChamberTemplate> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[28]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientChamberTemplate() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientChamberTemplate(ClientChamberTemplate other) : this() {
          id_ = other.id_;
          name_ = other.name_;
          challengeLeavingWarningRadius_ = other.challengeLeavingWarningRadius_;
          arenaScene_ = other.arenaScene_;
          baseDifficulty_ = other.baseDifficulty_;
          runestoneDifficulties_ = other.runestoneDifficulties_.Clone();
          parkmodeBgs_ = other.parkmodeBgs_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientChamberTemplate Clone() {
          return new ClientChamberTemplate(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "challenge_leaving_warning_radius" field.</summary>
        public const int ChallengeLeavingWarningRadiusFieldNumber = 3;
        private float challengeLeavingWarningRadius_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float ChallengeLeavingWarningRadius {
          get { return challengeLeavingWarningRadius_; }
          set {
            challengeLeavingWarningRadius_ = value;
          }
        }

        /// <summary>Field number for the "arena_scene" field.</summary>
        public const int ArenaSceneFieldNumber = 4;
        private string arenaScene_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ArenaScene {
          get { return arenaScene_; }
          set {
            arenaScene_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "base_difficulty" field.</summary>
        public const int BaseDifficultyFieldNumber = 5;
        private int baseDifficulty_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int BaseDifficulty {
          get { return baseDifficulty_; }
          set {
            baseDifficulty_ = value;
          }
        }

        /// <summary>Field number for the "runestone_difficulties" field.</summary>
        public const int RunestoneDifficultiesFieldNumber = 6;
        private static readonly pbc::MapField<int, int>.Codec _map_runestoneDifficulties_codec
            = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 50);
        private readonly pbc::MapField<int, int> runestoneDifficulties_ = new pbc::MapField<int, int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<int, int> RunestoneDifficulties {
          get { return runestoneDifficulties_; }
        }

        /// <summary>Field number for the "parkmode_bgs" field.</summary>
        public const int ParkmodeBgsFieldNumber = 7;
        private static readonly pbc::MapField<string, string>.Codec _map_parkmodeBgs_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 58);
        private readonly pbc::MapField<string, string> parkmodeBgs_ = new pbc::MapField<string, string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, string> ParkmodeBgs {
          get { return parkmodeBgs_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientChamberTemplate);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientChamberTemplate other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ChallengeLeavingWarningRadius, other.ChallengeLeavingWarningRadius)) return false;
          if (ArenaScene != other.ArenaScene) return false;
          if (BaseDifficulty != other.BaseDifficulty) return false;
          if (!RunestoneDifficulties.Equals(other.RunestoneDifficulties)) return false;
          if (!ParkmodeBgs.Equals(other.ParkmodeBgs)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (ChallengeLeavingWarningRadius != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ChallengeLeavingWarningRadius);
          if (ArenaScene.Length != 0) hash ^= ArenaScene.GetHashCode();
          if (BaseDifficulty != 0) hash ^= BaseDifficulty.GetHashCode();
          hash ^= RunestoneDifficulties.GetHashCode();
          hash ^= ParkmodeBgs.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (ChallengeLeavingWarningRadius != 0F) {
            output.WriteRawTag(29);
            output.WriteFloat(ChallengeLeavingWarningRadius);
          }
          if (ArenaScene.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(ArenaScene);
          }
          if (BaseDifficulty != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(BaseDifficulty);
          }
          runestoneDifficulties_.WriteTo(output, _map_runestoneDifficulties_codec);
          parkmodeBgs_.WriteTo(output, _map_parkmodeBgs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (ChallengeLeavingWarningRadius != 0F) {
            size += 1 + 4;
          }
          if (ArenaScene.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ArenaScene);
          }
          if (BaseDifficulty != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseDifficulty);
          }
          size += runestoneDifficulties_.CalculateSize(_map_runestoneDifficulties_codec);
          size += parkmodeBgs_.CalculateSize(_map_parkmodeBgs_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientChamberTemplate other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.ChallengeLeavingWarningRadius != 0F) {
            ChallengeLeavingWarningRadius = other.ChallengeLeavingWarningRadius;
          }
          if (other.ArenaScene.Length != 0) {
            ArenaScene = other.ArenaScene;
          }
          if (other.BaseDifficulty != 0) {
            BaseDifficulty = other.BaseDifficulty;
          }
          runestoneDifficulties_.Add(other.runestoneDifficulties_);
          parkmodeBgs_.Add(other.parkmodeBgs_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 29: {
                ChallengeLeavingWarningRadius = input.ReadFloat();
                break;
              }
              case 34: {
                ArenaScene = input.ReadString();
                break;
              }
              case 40: {
                BaseDifficulty = input.ReadInt32();
                break;
              }
              case 50: {
                runestoneDifficulties_.AddEntriesFrom(input, _map_runestoneDifficulties_codec);
                break;
              }
              case 58: {
                parkmodeBgs_.AddEntriesFrom(input, _map_parkmodeBgs_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientChallengeBonus : pb::IMessage<ClientChallengeBonus> {
        private static readonly pb::MessageParser<ClientChallengeBonus> _parser = new pb::MessageParser<ClientChallengeBonus>(() => new ClientChallengeBonus());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientChallengeBonus> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[29]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientChallengeBonus() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientChallengeBonus(ClientChallengeBonus other) : this() {
          id_ = other.id_;
          displayText_ = other.displayText_;
          icon_ = other.icon_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientChallengeBonus Clone() {
          return new ClientChallengeBonus(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "display_text" field.</summary>
        public const int DisplayTextFieldNumber = 2;
        private string displayText_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DisplayText {
          get { return displayText_; }
          set {
            displayText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "icon" field.</summary>
        public const int IconFieldNumber = 3;
        private string icon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Icon {
          get { return icon_; }
          set {
            icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientChallengeBonus);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientChallengeBonus other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (DisplayText != other.DisplayText) return false;
          if (Icon != other.Icon) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (DisplayText.Length != 0) hash ^= DisplayText.GetHashCode();
          if (Icon.Length != 0) hash ^= Icon.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (DisplayText.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(DisplayText);
          }
          if (Icon.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Icon);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (DisplayText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayText);
          }
          if (Icon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientChallengeBonus other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.DisplayText.Length != 0) {
            DisplayText = other.DisplayText;
          }
          if (other.Icon.Length != 0) {
            Icon = other.Icon;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                DisplayText = input.ReadString();
                break;
              }
              case 26: {
                Icon = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientBuff : pb::IMessage<ClientBuff> {
        private static readonly pb::MessageParser<ClientBuff> _parser = new pb::MessageParser<ClientBuff>(() => new ClientBuff());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientBuff> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[30]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientBuff() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientBuff(ClientBuff other) : this() {
          id_ = other.id_;
          rewardBonusLocKey_ = other.rewardBonusLocKey_;
          rewardBonusIcon_ = other.rewardBonusIcon_;
          statusIcon_ = other.statusIcon_;
          displayName_ = other.displayName_;
          conditionalModifiers_ = other.conditionalModifiers_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientBuff Clone() {
          return new ClientBuff(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "reward_bonus_loc_key" field.</summary>
        public const int RewardBonusLocKeyFieldNumber = 3;
        private string rewardBonusLocKey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RewardBonusLocKey {
          get { return rewardBonusLocKey_; }
          set {
            rewardBonusLocKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "reward_bonus_icon" field.</summary>
        public const int RewardBonusIconFieldNumber = 4;
        private string rewardBonusIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RewardBonusIcon {
          get { return rewardBonusIcon_; }
          set {
            rewardBonusIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "status_icon" field.</summary>
        public const int StatusIconFieldNumber = 5;
        private string statusIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StatusIcon {
          get { return statusIcon_; }
          set {
            statusIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "display_name" field.</summary>
        public const int DisplayNameFieldNumber = 6;
        private string displayName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DisplayName {
          get { return displayName_; }
          set {
            displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "conditional_modifiers" field.</summary>
        public const int ConditionalModifiersFieldNumber = 7;
        private static readonly pb::FieldCodec<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Types.ClientConditionalModifiers> _repeated_conditionalModifiers_codec
            = pb::FieldCodec.ForMessage(58, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Types.ClientConditionalModifiers.Parser);
        private readonly pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Types.ClientConditionalModifiers> conditionalModifiers_ = new pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Types.ClientConditionalModifiers>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Types.ClientConditionalModifiers> ConditionalModifiers {
          get { return conditionalModifiers_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientBuff);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientBuff other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (RewardBonusLocKey != other.RewardBonusLocKey) return false;
          if (RewardBonusIcon != other.RewardBonusIcon) return false;
          if (StatusIcon != other.StatusIcon) return false;
          if (DisplayName != other.DisplayName) return false;
          if(!conditionalModifiers_.Equals(other.conditionalModifiers_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (RewardBonusLocKey.Length != 0) hash ^= RewardBonusLocKey.GetHashCode();
          if (RewardBonusIcon.Length != 0) hash ^= RewardBonusIcon.GetHashCode();
          if (StatusIcon.Length != 0) hash ^= StatusIcon.GetHashCode();
          if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
          hash ^= conditionalModifiers_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (RewardBonusLocKey.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(RewardBonusLocKey);
          }
          if (RewardBonusIcon.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(RewardBonusIcon);
          }
          if (StatusIcon.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(StatusIcon);
          }
          if (DisplayName.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DisplayName);
          }
          conditionalModifiers_.WriteTo(output, _repeated_conditionalModifiers_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (RewardBonusLocKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardBonusLocKey);
          }
          if (RewardBonusIcon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardBonusIcon);
          }
          if (StatusIcon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusIcon);
          }
          if (DisplayName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
          }
          size += conditionalModifiers_.CalculateSize(_repeated_conditionalModifiers_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientBuff other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.RewardBonusLocKey.Length != 0) {
            RewardBonusLocKey = other.RewardBonusLocKey;
          }
          if (other.RewardBonusIcon.Length != 0) {
            RewardBonusIcon = other.RewardBonusIcon;
          }
          if (other.StatusIcon.Length != 0) {
            StatusIcon = other.StatusIcon;
          }
          if (other.DisplayName.Length != 0) {
            DisplayName = other.DisplayName;
          }
          conditionalModifiers_.Add(other.conditionalModifiers_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 26: {
                RewardBonusLocKey = input.ReadString();
                break;
              }
              case 34: {
                RewardBonusIcon = input.ReadString();
                break;
              }
              case 42: {
                StatusIcon = input.ReadString();
                break;
              }
              case 50: {
                DisplayName = input.ReadString();
                break;
              }
              case 58: {
                conditionalModifiers_.AddEntriesFrom(input, _repeated_conditionalModifiers_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ClientBuff message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class ClientConditionalModifiers : pb::IMessage<ClientConditionalModifiers> {
            private static readonly pb::MessageParser<ClientConditionalModifiers> _parser = new pb::MessageParser<ClientConditionalModifiers>(() => new ClientConditionalModifiers());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ClientConditionalModifiers> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConditionalModifiers() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConditionalModifiers(ClientConditionalModifiers other) : this() {
              desc_ = other.desc_;
              modifiers_ = other.modifiers_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ClientConditionalModifiers Clone() {
              return new ClientConditionalModifiers(this);
            }

            /// <summary>Field number for the "desc" field.</summary>
            public const int DescFieldNumber = 1;
            private string desc_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Desc {
              get { return desc_; }
              set {
                desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "modifiers" field.</summary>
            public const int ModifiersFieldNumber = 2;
            private static readonly pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Types.ClientConditionalModifiers.Types.ClientConditionalModifier>.Codec _map_modifiers_codec
                = new pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Types.ClientConditionalModifiers.Types.ClientConditionalModifier>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Types.ClientConditionalModifiers.Types.ClientConditionalModifier.Parser), 18);
            private readonly pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Types.ClientConditionalModifiers.Types.ClientConditionalModifier> modifiers_ = new pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Types.ClientConditionalModifiers.Types.ClientConditionalModifier>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::MapField<string, global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Types.ClientConditionalModifiers.Types.ClientConditionalModifier> Modifiers {
              get { return modifiers_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ClientConditionalModifiers);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ClientConditionalModifiers other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Desc != other.Desc) return false;
              if (!Modifiers.Equals(other.Modifiers)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Desc.Length != 0) hash ^= Desc.GetHashCode();
              hash ^= Modifiers.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Desc.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Desc);
              }
              modifiers_.WriteTo(output, _map_modifiers_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Desc.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
              }
              size += modifiers_.CalculateSize(_map_modifiers_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ClientConditionalModifiers other) {
              if (other == null) {
                return;
              }
              if (other.Desc.Length != 0) {
                Desc = other.Desc;
              }
              modifiers_.Add(other.modifiers_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Desc = input.ReadString();
                    break;
                  }
                  case 18: {
                    modifiers_.AddEntriesFrom(input, _map_modifiers_codec);
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the ClientConditionalModifiers message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class ClientConditionalModifier : pb::IMessage<ClientConditionalModifier> {
                private static readonly pb::MessageParser<ClientConditionalModifier> _parser = new pb::MessageParser<ClientConditionalModifier>(() => new ClientConditionalModifier());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ClientConditionalModifier> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::WUProtos.Data.Client.ClientGmTemplate.Types.ClientBuff.Types.ClientConditionalModifiers.Descriptor.NestedTypes[1]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientConditionalModifier() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientConditionalModifier(ClientConditionalModifier other) : this() {
                  desc_ = other.desc_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ClientConditionalModifier Clone() {
                  return new ClientConditionalModifier(this);
                }

                /// <summary>Field number for the "desc" field.</summary>
                public const int DescFieldNumber = 1;
                private string desc_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Desc {
                  get { return desc_; }
                  set {
                    desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ClientConditionalModifier);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ClientConditionalModifier other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Desc != other.Desc) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Desc.Length != 0) hash ^= Desc.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (Desc.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(Desc);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (Desc.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ClientConditionalModifier other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Desc.Length != 0) {
                    Desc = other.Desc;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        Desc = input.ReadString();
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

        }
        #endregion

      }

      public sealed partial class ClientStoreSubcategory : pb::IMessage<ClientStoreSubcategory> {
        private static readonly pb::MessageParser<ClientStoreSubcategory> _parser = new pb::MessageParser<ClientStoreSubcategory>(() => new ClientStoreSubcategory());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientStoreSubcategory> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[31]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientStoreSubcategory() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientStoreSubcategory(ClientStoreSubcategory other) : this() {
          id_ = other.id_;
          priority_ = other.priority_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientStoreSubcategory Clone() {
          return new ClientStoreSubcategory(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "priority" field.</summary>
        public const int PriorityFieldNumber = 2;
        private int priority_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Priority {
          get { return priority_; }
          set {
            priority_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientStoreSubcategory);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientStoreSubcategory other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Priority != other.Priority) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Priority != 0) hash ^= Priority.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Priority != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Priority);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Priority != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientStoreSubcategory other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Priority != 0) {
            Priority = other.Priority;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 16: {
                Priority = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientVaultCategory : pb::IMessage<ClientVaultCategory> {
        private static readonly pb::MessageParser<ClientVaultCategory> _parser = new pb::MessageParser<ClientVaultCategory>(() => new ClientVaultCategory());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientVaultCategory> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[32]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientVaultCategory() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientVaultCategory(ClientVaultCategory other) : this() {
          id_ = other.id_;
          name_ = other.name_;
          description_ = other.description_;
          icon_ = other.icon_;
          showInVault_ = other.showInVault_;
          warningThreshold_ = other.warningThreshold_;
          categoryDisplayOrder_ = other.categoryDisplayOrder_;
          increaseCapacityStorePackProtoId_ = other.increaseCapacityStorePackProtoId_;
          increaseCapacityStorePackProtoIds_ = other.increaseCapacityStorePackProtoIds_.Clone();
          storeItemName_ = other.storeItemName_;
          storeItemIcon_ = other.storeItemIcon_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientVaultCategory Clone() {
          return new ClientVaultCategory(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 3;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "icon" field.</summary>
        public const int IconFieldNumber = 4;
        private string icon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Icon {
          get { return icon_; }
          set {
            icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "show_in_vault" field.</summary>
        public const int ShowInVaultFieldNumber = 5;
        private bool showInVault_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ShowInVault {
          get { return showInVault_; }
          set {
            showInVault_ = value;
          }
        }

        /// <summary>Field number for the "warning_threshold" field.</summary>
        public const int WarningThresholdFieldNumber = 6;
        private float warningThreshold_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float WarningThreshold {
          get { return warningThreshold_; }
          set {
            warningThreshold_ = value;
          }
        }

        /// <summary>Field number for the "category_display_order" field.</summary>
        public const int CategoryDisplayOrderFieldNumber = 7;
        private int categoryDisplayOrder_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CategoryDisplayOrder {
          get { return categoryDisplayOrder_; }
          set {
            categoryDisplayOrder_ = value;
          }
        }

        /// <summary>Field number for the "increase_capacity_store_pack_proto_id" field.</summary>
        public const int IncreaseCapacityStorePackProtoIdFieldNumber = 8;
        private string increaseCapacityStorePackProtoId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string IncreaseCapacityStorePackProtoId {
          get { return increaseCapacityStorePackProtoId_; }
          set {
            increaseCapacityStorePackProtoId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "increase_capacity_store_pack_proto_ids" field.</summary>
        public const int IncreaseCapacityStorePackProtoIdsFieldNumber = 9;
        private static readonly pb::FieldCodec<string> _repeated_increaseCapacityStorePackProtoIds_codec
            = pb::FieldCodec.ForString(74);
        private readonly pbc::RepeatedField<string> increaseCapacityStorePackProtoIds_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> IncreaseCapacityStorePackProtoIds {
          get { return increaseCapacityStorePackProtoIds_; }
        }

        /// <summary>Field number for the "store_item_name" field.</summary>
        public const int StoreItemNameFieldNumber = 10;
        private string storeItemName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StoreItemName {
          get { return storeItemName_; }
          set {
            storeItemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "store_item_icon" field.</summary>
        public const int StoreItemIconFieldNumber = 11;
        private string storeItemIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StoreItemIcon {
          get { return storeItemIcon_; }
          set {
            storeItemIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientVaultCategory);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientVaultCategory other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if (Description != other.Description) return false;
          if (Icon != other.Icon) return false;
          if (ShowInVault != other.ShowInVault) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WarningThreshold, other.WarningThreshold)) return false;
          if (CategoryDisplayOrder != other.CategoryDisplayOrder) return false;
          if (IncreaseCapacityStorePackProtoId != other.IncreaseCapacityStorePackProtoId) return false;
          if(!increaseCapacityStorePackProtoIds_.Equals(other.increaseCapacityStorePackProtoIds_)) return false;
          if (StoreItemName != other.StoreItemName) return false;
          if (StoreItemIcon != other.StoreItemIcon) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (Icon.Length != 0) hash ^= Icon.GetHashCode();
          if (ShowInVault != false) hash ^= ShowInVault.GetHashCode();
          if (WarningThreshold != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WarningThreshold);
          if (CategoryDisplayOrder != 0) hash ^= CategoryDisplayOrder.GetHashCode();
          if (IncreaseCapacityStorePackProtoId.Length != 0) hash ^= IncreaseCapacityStorePackProtoId.GetHashCode();
          hash ^= increaseCapacityStorePackProtoIds_.GetHashCode();
          if (StoreItemName.Length != 0) hash ^= StoreItemName.GetHashCode();
          if (StoreItemIcon.Length != 0) hash ^= StoreItemIcon.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Description);
          }
          if (Icon.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Icon);
          }
          if (ShowInVault != false) {
            output.WriteRawTag(40);
            output.WriteBool(ShowInVault);
          }
          if (WarningThreshold != 0F) {
            output.WriteRawTag(53);
            output.WriteFloat(WarningThreshold);
          }
          if (CategoryDisplayOrder != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(CategoryDisplayOrder);
          }
          if (IncreaseCapacityStorePackProtoId.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(IncreaseCapacityStorePackProtoId);
          }
          increaseCapacityStorePackProtoIds_.WriteTo(output, _repeated_increaseCapacityStorePackProtoIds_codec);
          if (StoreItemName.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(StoreItemName);
          }
          if (StoreItemIcon.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(StoreItemIcon);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (Icon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
          }
          if (ShowInVault != false) {
            size += 1 + 1;
          }
          if (WarningThreshold != 0F) {
            size += 1 + 4;
          }
          if (CategoryDisplayOrder != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryDisplayOrder);
          }
          if (IncreaseCapacityStorePackProtoId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(IncreaseCapacityStorePackProtoId);
          }
          size += increaseCapacityStorePackProtoIds_.CalculateSize(_repeated_increaseCapacityStorePackProtoIds_codec);
          if (StoreItemName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StoreItemName);
          }
          if (StoreItemIcon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StoreItemIcon);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientVaultCategory other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          if (other.Icon.Length != 0) {
            Icon = other.Icon;
          }
          if (other.ShowInVault != false) {
            ShowInVault = other.ShowInVault;
          }
          if (other.WarningThreshold != 0F) {
            WarningThreshold = other.WarningThreshold;
          }
          if (other.CategoryDisplayOrder != 0) {
            CategoryDisplayOrder = other.CategoryDisplayOrder;
          }
          if (other.IncreaseCapacityStorePackProtoId.Length != 0) {
            IncreaseCapacityStorePackProtoId = other.IncreaseCapacityStorePackProtoId;
          }
          increaseCapacityStorePackProtoIds_.Add(other.increaseCapacityStorePackProtoIds_);
          if (other.StoreItemName.Length != 0) {
            StoreItemName = other.StoreItemName;
          }
          if (other.StoreItemIcon.Length != 0) {
            StoreItemIcon = other.StoreItemIcon;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                Description = input.ReadString();
                break;
              }
              case 34: {
                Icon = input.ReadString();
                break;
              }
              case 40: {
                ShowInVault = input.ReadBool();
                break;
              }
              case 53: {
                WarningThreshold = input.ReadFloat();
                break;
              }
              case 56: {
                CategoryDisplayOrder = input.ReadInt32();
                break;
              }
              case 66: {
                IncreaseCapacityStorePackProtoId = input.ReadString();
                break;
              }
              case 74: {
                increaseCapacityStorePackProtoIds_.AddEntriesFrom(input, _repeated_increaseCapacityStorePackProtoIds_codec);
                break;
              }
              case 82: {
                StoreItemName = input.ReadString();
                break;
              }
              case 90: {
                StoreItemIcon = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientWalkboxTemplate : pb::IMessage<ClientWalkboxTemplate> {
        private static readonly pb::MessageParser<ClientWalkboxTemplate> _parser = new pb::MessageParser<ClientWalkboxTemplate>(() => new ClientWalkboxTemplate());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientWalkboxTemplate> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[33]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientWalkboxTemplate() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientWalkboxTemplate(ClientWalkboxTemplate other) : this() {
          id_ = other.id_;
          name_ = other.name_;
          icon_ = other.icon_;
          unlockedIcon_ = other.unlockedIcon_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientWalkboxTemplate Clone() {
          return new ClientWalkboxTemplate(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "icon" field.</summary>
        public const int IconFieldNumber = 3;
        private string icon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Icon {
          get { return icon_; }
          set {
            icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "unlocked_icon" field.</summary>
        public const int UnlockedIconFieldNumber = 4;
        private string unlockedIcon_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UnlockedIcon {
          get { return unlockedIcon_; }
          set {
            unlockedIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientWalkboxTemplate);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientWalkboxTemplate other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if (Icon != other.Icon) return false;
          if (UnlockedIcon != other.UnlockedIcon) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Icon.Length != 0) hash ^= Icon.GetHashCode();
          if (UnlockedIcon.Length != 0) hash ^= UnlockedIcon.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Icon.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Icon);
          }
          if (UnlockedIcon.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(UnlockedIcon);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Icon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
          }
          if (UnlockedIcon.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UnlockedIcon);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientWalkboxTemplate other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Icon.Length != 0) {
            Icon = other.Icon;
          }
          if (other.UnlockedIcon.Length != 0) {
            UnlockedIcon = other.UnlockedIcon;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                Icon = input.ReadString();
                break;
              }
              case 34: {
                UnlockedIcon = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientMasterNote : pb::IMessage<ClientMasterNote> {
        private static readonly pb::MessageParser<ClientMasterNote> _parser = new pb::MessageParser<ClientMasterNote>(() => new ClientMasterNote());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientMasterNote> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[34]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMasterNote() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMasterNote(ClientMasterNote other) : this() {
          id_ = other.id_;
          name_ = other.name_;
          description_ = other.description_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientMasterNote Clone() {
          return new ClientMasterNote(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 3;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientMasterNote);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientMasterNote other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if (Description != other.Description) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Description);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientMasterNote other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                Description = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ClientBonusCategory : pb::IMessage<ClientBonusCategory> {
        private static readonly pb::MessageParser<ClientBonusCategory> _parser = new pb::MessageParser<ClientBonusCategory>(() => new ClientBonusCategory());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientBonusCategory> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.Client.ClientGmTemplate.Descriptor.NestedTypes[35]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientBonusCategory() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientBonusCategory(ClientBonusCategory other) : this() {
          id_ = other.id_;
          color_ = other.color_ != null ? other.color_.Clone() : null;
          nameLocKey_ = other.nameLocKey_;
          backgroundImage_ = other.backgroundImage_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientBonusCategory Clone() {
          return new ClientBonusCategory(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "color" field.</summary>
        public const int ColorFieldNumber = 2;
        private global::WUProtos.Data.Color color_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.Color Color {
          get { return color_; }
          set {
            color_ = value;
          }
        }

        /// <summary>Field number for the "name_loc_key" field.</summary>
        public const int NameLocKeyFieldNumber = 3;
        private string nameLocKey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string NameLocKey {
          get { return nameLocKey_; }
          set {
            nameLocKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "background_image" field.</summary>
        public const int BackgroundImageFieldNumber = 4;
        private string backgroundImage_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BackgroundImage {
          get { return backgroundImage_; }
          set {
            backgroundImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientBonusCategory);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientBonusCategory other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (!object.Equals(Color, other.Color)) return false;
          if (NameLocKey != other.NameLocKey) return false;
          if (BackgroundImage != other.BackgroundImage) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (color_ != null) hash ^= Color.GetHashCode();
          if (NameLocKey.Length != 0) hash ^= NameLocKey.GetHashCode();
          if (BackgroundImage.Length != 0) hash ^= BackgroundImage.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (color_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Color);
          }
          if (NameLocKey.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(NameLocKey);
          }
          if (BackgroundImage.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(BackgroundImage);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (color_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
          }
          if (NameLocKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLocKey);
          }
          if (BackgroundImage.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BackgroundImage);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientBonusCategory other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.color_ != null) {
            if (color_ == null) {
              Color = new global::WUProtos.Data.Color();
            }
            Color.MergeFrom(other.Color);
          }
          if (other.NameLocKey.Length != 0) {
            NameLocKey = other.NameLocKey;
          }
          if (other.BackgroundImage.Length != 0) {
            BackgroundImage = other.BackgroundImage;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                if (color_ == null) {
                  Color = new global::WUProtos.Data.Color();
                }
                input.ReadMessage(Color);
                break;
              }
              case 26: {
                NameLocKey = input.ReadString();
                break;
              }
              case 34: {
                BackgroundImage = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
