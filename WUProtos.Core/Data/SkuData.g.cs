// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/SkuData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/SkuData.proto</summary>
  public static partial class SkuDataReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/SkuData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SkuDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtXVVByb3Rvcy9EYXRhL1NrdURhdGEucHJvdG8SDVdVUHJvdG9zLkRhdGEi",
            "yAQKB1NrdURhdGESCgoCaWQYASABKAkSEgoKaXNfZW5hYmxlZBgCIAEoCBIy",
            "Cgdjb250ZW50GAMgAygLMiEuV1VQcm90b3MuRGF0YS5Ta3VEYXRhLlNrdUNv",
            "bnRlbnQSLgoFcHJpY2UYBCADKAsyHy5XVVByb3Rvcy5EYXRhLlNrdURhdGEu",
            "U2t1UHJpY2USOwoMcGF5bWVudF90eXBlGAUgASgOMiUuV1VQcm90b3MuRGF0",
            "YS5Ta3VEYXRhLlNrdVBheW1lbnRUeXBlEiIKGmxhc3RfbW9kaWZpZWRfdGlt",
            "ZXN0YW1wX21zGAYgASgDEkUKEXByZXNlbnRhdGlvbl9kYXRhGAcgAygLMiou",
            "V1VQcm90b3MuRGF0YS5Ta3VEYXRhLlNrdVByZXNlbnRhdGlvbkRhdGESHwoX",
            "ZW5hYmxlZF93aW5kb3dfc3RhcnRfbXMYCCABKAMSHQoVZW5hYmxlZF93aW5k",
            "b3dfZW5kX21zGAkgASgDGjAKCFNrdVByaWNlEhUKDWN1cnJlbmN5X3R5cGUY",
            "ASABKAkSDQoFcHJpY2UYAiABKAUaMQoKU2t1Q29udGVudBIRCglpdGVtX3R5",
            "cGUYASABKAkSEAoIcXVhbnRpdHkYAiABKAUaMQoTU2t1UHJlc2VudGF0aW9u",
            "RGF0YRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAkiOQoOU2t1UGF5bWVu",
            "dFR5cGUSCQoFVU5TRVQQABIPCgtUSElSRF9QQVJUWRABEgsKB0lOX0dBTUUQ",
            "AmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.SkuData), global::WUProtos.Data.SkuData.Parser, new[]{ "Id", "IsEnabled", "Content", "Price", "PaymentType", "LastModifiedTimestampMs", "PresentationData", "EnabledWindowStartMs", "EnabledWindowEndMs" }, null, new[]{ typeof(global::WUProtos.Data.SkuData.Types.SkuPaymentType) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.SkuData.Types.SkuPrice), global::WUProtos.Data.SkuData.Types.SkuPrice.Parser, new[]{ "CurrencyType", "Price" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.SkuData.Types.SkuContent), global::WUProtos.Data.SkuData.Types.SkuContent.Parser, new[]{ "ItemType", "Quantity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.SkuData.Types.SkuPresentationData), global::WUProtos.Data.SkuData.Types.SkuPresentationData.Parser, new[]{ "Key", "Value" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SkuData : pb::IMessage<SkuData> {
    private static readonly pb::MessageParser<SkuData> _parser = new pb::MessageParser<SkuData>(() => new SkuData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkuData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.SkuDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkuData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkuData(SkuData other) : this() {
      id_ = other.id_;
      isEnabled_ = other.isEnabled_;
      content_ = other.content_.Clone();
      price_ = other.price_.Clone();
      paymentType_ = other.paymentType_;
      lastModifiedTimestampMs_ = other.lastModifiedTimestampMs_;
      presentationData_ = other.presentationData_.Clone();
      enabledWindowStartMs_ = other.enabledWindowStartMs_;
      enabledWindowEndMs_ = other.enabledWindowEndMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkuData Clone() {
      return new SkuData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_enabled" field.</summary>
    public const int IsEnabledFieldNumber = 2;
    private bool isEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsEnabled {
      get { return isEnabled_; }
      set {
        isEnabled_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 3;
    private static readonly pb::FieldCodec<global::WUProtos.Data.SkuData.Types.SkuContent> _repeated_content_codec
        = pb::FieldCodec.ForMessage(26, global::WUProtos.Data.SkuData.Types.SkuContent.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.SkuData.Types.SkuContent> content_ = new pbc::RepeatedField<global::WUProtos.Data.SkuData.Types.SkuContent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.SkuData.Types.SkuContent> Content {
      get { return content_; }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 4;
    private static readonly pb::FieldCodec<global::WUProtos.Data.SkuData.Types.SkuPrice> _repeated_price_codec
        = pb::FieldCodec.ForMessage(34, global::WUProtos.Data.SkuData.Types.SkuPrice.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.SkuData.Types.SkuPrice> price_ = new pbc::RepeatedField<global::WUProtos.Data.SkuData.Types.SkuPrice>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.SkuData.Types.SkuPrice> Price {
      get { return price_; }
    }

    /// <summary>Field number for the "payment_type" field.</summary>
    public const int PaymentTypeFieldNumber = 5;
    private global::WUProtos.Data.SkuData.Types.SkuPaymentType paymentType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.SkuData.Types.SkuPaymentType PaymentType {
      get { return paymentType_; }
      set {
        paymentType_ = value;
      }
    }

    /// <summary>Field number for the "last_modified_timestamp_ms" field.</summary>
    public const int LastModifiedTimestampMsFieldNumber = 6;
    private long lastModifiedTimestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastModifiedTimestampMs {
      get { return lastModifiedTimestampMs_; }
      set {
        lastModifiedTimestampMs_ = value;
      }
    }

    /// <summary>Field number for the "presentation_data" field.</summary>
    public const int PresentationDataFieldNumber = 7;
    private static readonly pb::FieldCodec<global::WUProtos.Data.SkuData.Types.SkuPresentationData> _repeated_presentationData_codec
        = pb::FieldCodec.ForMessage(58, global::WUProtos.Data.SkuData.Types.SkuPresentationData.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.SkuData.Types.SkuPresentationData> presentationData_ = new pbc::RepeatedField<global::WUProtos.Data.SkuData.Types.SkuPresentationData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.SkuData.Types.SkuPresentationData> PresentationData {
      get { return presentationData_; }
    }

    /// <summary>Field number for the "enabled_window_start_ms" field.</summary>
    public const int EnabledWindowStartMsFieldNumber = 8;
    private long enabledWindowStartMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EnabledWindowStartMs {
      get { return enabledWindowStartMs_; }
      set {
        enabledWindowStartMs_ = value;
      }
    }

    /// <summary>Field number for the "enabled_window_end_ms" field.</summary>
    public const int EnabledWindowEndMsFieldNumber = 9;
    private long enabledWindowEndMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EnabledWindowEndMs {
      get { return enabledWindowEndMs_; }
      set {
        enabledWindowEndMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkuData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkuData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (IsEnabled != other.IsEnabled) return false;
      if(!content_.Equals(other.content_)) return false;
      if(!price_.Equals(other.price_)) return false;
      if (PaymentType != other.PaymentType) return false;
      if (LastModifiedTimestampMs != other.LastModifiedTimestampMs) return false;
      if(!presentationData_.Equals(other.presentationData_)) return false;
      if (EnabledWindowStartMs != other.EnabledWindowStartMs) return false;
      if (EnabledWindowEndMs != other.EnabledWindowEndMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (IsEnabled != false) hash ^= IsEnabled.GetHashCode();
      hash ^= content_.GetHashCode();
      hash ^= price_.GetHashCode();
      if (PaymentType != 0) hash ^= PaymentType.GetHashCode();
      if (LastModifiedTimestampMs != 0L) hash ^= LastModifiedTimestampMs.GetHashCode();
      hash ^= presentationData_.GetHashCode();
      if (EnabledWindowStartMs != 0L) hash ^= EnabledWindowStartMs.GetHashCode();
      if (EnabledWindowEndMs != 0L) hash ^= EnabledWindowEndMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (IsEnabled != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsEnabled);
      }
      content_.WriteTo(output, _repeated_content_codec);
      price_.WriteTo(output, _repeated_price_codec);
      if (PaymentType != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) PaymentType);
      }
      if (LastModifiedTimestampMs != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(LastModifiedTimestampMs);
      }
      presentationData_.WriteTo(output, _repeated_presentationData_codec);
      if (EnabledWindowStartMs != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(EnabledWindowStartMs);
      }
      if (EnabledWindowEndMs != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(EnabledWindowEndMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (IsEnabled != false) {
        size += 1 + 1;
      }
      size += content_.CalculateSize(_repeated_content_codec);
      size += price_.CalculateSize(_repeated_price_codec);
      if (PaymentType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PaymentType);
      }
      if (LastModifiedTimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastModifiedTimestampMs);
      }
      size += presentationData_.CalculateSize(_repeated_presentationData_codec);
      if (EnabledWindowStartMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnabledWindowStartMs);
      }
      if (EnabledWindowEndMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnabledWindowEndMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkuData other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.IsEnabled != false) {
        IsEnabled = other.IsEnabled;
      }
      content_.Add(other.content_);
      price_.Add(other.price_);
      if (other.PaymentType != 0) {
        PaymentType = other.PaymentType;
      }
      if (other.LastModifiedTimestampMs != 0L) {
        LastModifiedTimestampMs = other.LastModifiedTimestampMs;
      }
      presentationData_.Add(other.presentationData_);
      if (other.EnabledWindowStartMs != 0L) {
        EnabledWindowStartMs = other.EnabledWindowStartMs;
      }
      if (other.EnabledWindowEndMs != 0L) {
        EnabledWindowEndMs = other.EnabledWindowEndMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            IsEnabled = input.ReadBool();
            break;
          }
          case 26: {
            content_.AddEntriesFrom(input, _repeated_content_codec);
            break;
          }
          case 34: {
            price_.AddEntriesFrom(input, _repeated_price_codec);
            break;
          }
          case 40: {
            PaymentType = (global::WUProtos.Data.SkuData.Types.SkuPaymentType) input.ReadEnum();
            break;
          }
          case 48: {
            LastModifiedTimestampMs = input.ReadInt64();
            break;
          }
          case 58: {
            presentationData_.AddEntriesFrom(input, _repeated_presentationData_codec);
            break;
          }
          case 64: {
            EnabledWindowStartMs = input.ReadInt64();
            break;
          }
          case 72: {
            EnabledWindowEndMs = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SkuData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum SkuPaymentType {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("THIRD_PARTY")] ThirdParty = 1,
        [pbr::OriginalName("IN_GAME")] InGame = 2,
      }

      public sealed partial class SkuPrice : pb::IMessage<SkuPrice> {
        private static readonly pb::MessageParser<SkuPrice> _parser = new pb::MessageParser<SkuPrice>(() => new SkuPrice());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SkuPrice> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.SkuData.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SkuPrice() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SkuPrice(SkuPrice other) : this() {
          currencyType_ = other.currencyType_;
          price_ = other.price_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SkuPrice Clone() {
          return new SkuPrice(this);
        }

        /// <summary>Field number for the "currency_type" field.</summary>
        public const int CurrencyTypeFieldNumber = 1;
        private string currencyType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CurrencyType {
          get { return currencyType_; }
          set {
            currencyType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int PriceFieldNumber = 2;
        private int price_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Price {
          get { return price_; }
          set {
            price_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SkuPrice);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SkuPrice other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CurrencyType != other.CurrencyType) return false;
          if (Price != other.Price) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (CurrencyType.Length != 0) hash ^= CurrencyType.GetHashCode();
          if (Price != 0) hash ^= Price.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (CurrencyType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(CurrencyType);
          }
          if (Price != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Price);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (CurrencyType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyType);
          }
          if (Price != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Price);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SkuPrice other) {
          if (other == null) {
            return;
          }
          if (other.CurrencyType.Length != 0) {
            CurrencyType = other.CurrencyType;
          }
          if (other.Price != 0) {
            Price = other.Price;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                CurrencyType = input.ReadString();
                break;
              }
              case 16: {
                Price = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class SkuContent : pb::IMessage<SkuContent> {
        private static readonly pb::MessageParser<SkuContent> _parser = new pb::MessageParser<SkuContent>(() => new SkuContent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SkuContent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.SkuData.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SkuContent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SkuContent(SkuContent other) : this() {
          itemType_ = other.itemType_;
          quantity_ = other.quantity_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SkuContent Clone() {
          return new SkuContent(this);
        }

        /// <summary>Field number for the "item_type" field.</summary>
        public const int ItemTypeFieldNumber = 1;
        private string itemType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ItemType {
          get { return itemType_; }
          set {
            itemType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "quantity" field.</summary>
        public const int QuantityFieldNumber = 2;
        private int quantity_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Quantity {
          get { return quantity_; }
          set {
            quantity_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SkuContent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SkuContent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ItemType != other.ItemType) return false;
          if (Quantity != other.Quantity) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ItemType.Length != 0) hash ^= ItemType.GetHashCode();
          if (Quantity != 0) hash ^= Quantity.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ItemType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ItemType);
          }
          if (Quantity != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Quantity);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ItemType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemType);
          }
          if (Quantity != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SkuContent other) {
          if (other == null) {
            return;
          }
          if (other.ItemType.Length != 0) {
            ItemType = other.ItemType;
          }
          if (other.Quantity != 0) {
            Quantity = other.Quantity;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ItemType = input.ReadString();
                break;
              }
              case 16: {
                Quantity = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class SkuPresentationData : pb::IMessage<SkuPresentationData> {
        private static readonly pb::MessageParser<SkuPresentationData> _parser = new pb::MessageParser<SkuPresentationData>(() => new SkuPresentationData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SkuPresentationData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.SkuData.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SkuPresentationData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SkuPresentationData(SkuPresentationData other) : this() {
          key_ = other.key_;
          value_ = other.value_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SkuPresentationData Clone() {
          return new SkuPresentationData(this);
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;
        private string key_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Key {
          get { return key_; }
          set {
            key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private string value_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Value {
          get { return value_; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SkuPresentationData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SkuPresentationData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Key != other.Key) return false;
          if (Value != other.Value) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Key.Length != 0) hash ^= Key.GetHashCode();
          if (Value.Length != 0) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Key.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Key);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Key.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
          }
          if (Value.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SkuPresentationData other) {
          if (other == null) {
            return;
          }
          if (other.Key.Length != 0) {
            Key = other.Key;
          }
          if (other.Value.Length != 0) {
            Value = other.Value;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Key = input.ReadString();
                break;
              }
              case 18: {
                Value = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
