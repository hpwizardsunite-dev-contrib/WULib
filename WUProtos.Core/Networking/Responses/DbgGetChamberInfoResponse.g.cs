// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Networking/Responses/DbgGetChamberInfoResponse.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Networking.Responses {

  /// <summary>Holder for reflection information generated from WUProtos/Networking/Responses/DbgGetChamberInfoResponse.proto</summary>
  public static partial class DbgGetChamberInfoResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Networking/Responses/DbgGetChamberInfoResponse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DbgGetChamberInfoResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj1XVVByb3Rvcy9OZXR3b3JraW5nL1Jlc3BvbnNlcy9EYmdHZXRDaGFtYmVy",
            "SW5mb1Jlc3BvbnNlLnByb3RvEh1XVVByb3Rvcy5OZXR3b3JraW5nLlJlc3Bv",
            "bnNlcyKZAQoZRGJnR2V0Q2hhbWJlckluZm9SZXNwb25zZRIbChNjaGFtYmVy",
            "X3RlbXBsYXRlX2lkGAEgASgJEiIKGnRvdGFsX3BvcHVsYXRpb25fYWxsb3Rt",
            "ZW50GAIgASgNEiEKGXVzZWRfcG9wdWxhdGlvbl9hbGxvdG1lbnQYAyABKA0S",
            "GAoQY2hhbGxlbmdlX3JhdGluZxgEIAEoDWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Responses.DbgGetChamberInfoResponse), global::WUProtos.Networking.Responses.DbgGetChamberInfoResponse.Parser, new[]{ "ChamberTemplateId", "TotalPopulationAllotment", "UsedPopulationAllotment", "ChallengeRating" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DbgGetChamberInfoResponse : pb::IMessage<DbgGetChamberInfoResponse> {
    private static readonly pb::MessageParser<DbgGetChamberInfoResponse> _parser = new pb::MessageParser<DbgGetChamberInfoResponse>(() => new DbgGetChamberInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DbgGetChamberInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Networking.Responses.DbgGetChamberInfoResponseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DbgGetChamberInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DbgGetChamberInfoResponse(DbgGetChamberInfoResponse other) : this() {
      chamberTemplateId_ = other.chamberTemplateId_;
      totalPopulationAllotment_ = other.totalPopulationAllotment_;
      usedPopulationAllotment_ = other.usedPopulationAllotment_;
      challengeRating_ = other.challengeRating_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DbgGetChamberInfoResponse Clone() {
      return new DbgGetChamberInfoResponse(this);
    }

    /// <summary>Field number for the "chamber_template_id" field.</summary>
    public const int ChamberTemplateIdFieldNumber = 1;
    private string chamberTemplateId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChamberTemplateId {
      get { return chamberTemplateId_; }
      set {
        chamberTemplateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_population_allotment" field.</summary>
    public const int TotalPopulationAllotmentFieldNumber = 2;
    private uint totalPopulationAllotment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TotalPopulationAllotment {
      get { return totalPopulationAllotment_; }
      set {
        totalPopulationAllotment_ = value;
      }
    }

    /// <summary>Field number for the "used_population_allotment" field.</summary>
    public const int UsedPopulationAllotmentFieldNumber = 3;
    private uint usedPopulationAllotment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UsedPopulationAllotment {
      get { return usedPopulationAllotment_; }
      set {
        usedPopulationAllotment_ = value;
      }
    }

    /// <summary>Field number for the "challenge_rating" field.</summary>
    public const int ChallengeRatingFieldNumber = 4;
    private uint challengeRating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ChallengeRating {
      get { return challengeRating_; }
      set {
        challengeRating_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DbgGetChamberInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DbgGetChamberInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChamberTemplateId != other.ChamberTemplateId) return false;
      if (TotalPopulationAllotment != other.TotalPopulationAllotment) return false;
      if (UsedPopulationAllotment != other.UsedPopulationAllotment) return false;
      if (ChallengeRating != other.ChallengeRating) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChamberTemplateId.Length != 0) hash ^= ChamberTemplateId.GetHashCode();
      if (TotalPopulationAllotment != 0) hash ^= TotalPopulationAllotment.GetHashCode();
      if (UsedPopulationAllotment != 0) hash ^= UsedPopulationAllotment.GetHashCode();
      if (ChallengeRating != 0) hash ^= ChallengeRating.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChamberTemplateId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ChamberTemplateId);
      }
      if (TotalPopulationAllotment != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TotalPopulationAllotment);
      }
      if (UsedPopulationAllotment != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(UsedPopulationAllotment);
      }
      if (ChallengeRating != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ChallengeRating);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChamberTemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChamberTemplateId);
      }
      if (TotalPopulationAllotment != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalPopulationAllotment);
      }
      if (UsedPopulationAllotment != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UsedPopulationAllotment);
      }
      if (ChallengeRating != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChallengeRating);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DbgGetChamberInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.ChamberTemplateId.Length != 0) {
        ChamberTemplateId = other.ChamberTemplateId;
      }
      if (other.TotalPopulationAllotment != 0) {
        TotalPopulationAllotment = other.TotalPopulationAllotment;
      }
      if (other.UsedPopulationAllotment != 0) {
        UsedPopulationAllotment = other.UsedPopulationAllotment;
      }
      if (other.ChallengeRating != 0) {
        ChallengeRating = other.ChallengeRating;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ChamberTemplateId = input.ReadString();
            break;
          }
          case 16: {
            TotalPopulationAllotment = input.ReadUInt32();
            break;
          }
          case 24: {
            UsedPopulationAllotment = input.ReadUInt32();
            break;
          }
          case 32: {
            ChallengeRating = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
