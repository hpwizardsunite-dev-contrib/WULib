// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Networking/Responses/GetFlooNetworkRegionScoresResponse.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Networking.Responses {

  /// <summary>Holder for reflection information generated from WUProtos/Networking/Responses/GetFlooNetworkRegionScoresResponse.proto</summary>
  public static partial class GetFlooNetworkRegionScoresResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Networking/Responses/GetFlooNetworkRegionScoresResponse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GetFlooNetworkRegionScoresResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkZXVVByb3Rvcy9OZXR3b3JraW5nL1Jlc3BvbnNlcy9HZXRGbG9vTmV0d29y",
            "a1JlZ2lvblNjb3Jlc1Jlc3BvbnNlLnByb3RvEh1XVVByb3Rvcy5OZXR3b3Jr",
            "aW5nLlJlc3BvbnNlcyLKAwoiR2V0Rmxvb05ldHdvcmtSZWdpb25TY29yZXNS",
            "ZXNwb25zZRIRCglzZWFzb25faWQYASABKAkSEQoJcmVnaW9uX2lkGAIgASgJ",
            "EmkKBnNjb3JlcxgDIAEoCzJZLldVUHJvdG9zLk5ldHdvcmtpbmcuUmVzcG9u",
            "c2VzLkdldEZsb29OZXR3b3JrUmVnaW9uU2NvcmVzUmVzcG9uc2UuRmxvb05l",
            "dHdvcmtSZWdpb25TY29yZXMSEwoLcmVnaW9uX25hbWUYBCABKAka/QEKF0Zs",
            "b29OZXR3b3JrUmVnaW9uU2NvcmVzEhEKCXNlYXNvbl9pZBgBIAEoCRIRCgly",
            "ZWdpb25faWQYAiABKAkShQEKD3BvaW50c19wZXJfdGVhbRgDIAMoCzJsLldV",
            "UHJvdG9zLk5ldHdvcmtpbmcuUmVzcG9uc2VzLkdldEZsb29OZXR3b3JrUmVn",
            "aW9uU2NvcmVzUmVzcG9uc2UuRmxvb05ldHdvcmtSZWdpb25TY29yZXMuUG9p",
            "bnRzUGVyVGVhbUVudHJ5GjQKElBvaW50c1BlclRlYW1FbnRyeRILCgNrZXkY",
            "ASABKAkSDQoFdmFsdWUYAiABKAM6AjgBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse), global::WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse.Parser, new[]{ "SeasonId", "RegionId", "Scores", "RegionName" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse.Types.FlooNetworkRegionScores), global::WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse.Types.FlooNetworkRegionScores.Parser, new[]{ "SeasonId", "RegionId", "PointsPerTeam" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetFlooNetworkRegionScoresResponse : pb::IMessage<GetFlooNetworkRegionScoresResponse> {
    private static readonly pb::MessageParser<GetFlooNetworkRegionScoresResponse> _parser = new pb::MessageParser<GetFlooNetworkRegionScoresResponse>(() => new GetFlooNetworkRegionScoresResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetFlooNetworkRegionScoresResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFlooNetworkRegionScoresResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFlooNetworkRegionScoresResponse(GetFlooNetworkRegionScoresResponse other) : this() {
      seasonId_ = other.seasonId_;
      regionId_ = other.regionId_;
      scores_ = other.scores_ != null ? other.scores_.Clone() : null;
      regionName_ = other.regionName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFlooNetworkRegionScoresResponse Clone() {
      return new GetFlooNetworkRegionScoresResponse(this);
    }

    /// <summary>Field number for the "season_id" field.</summary>
    public const int SeasonIdFieldNumber = 1;
    private string seasonId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SeasonId {
      get { return seasonId_; }
      set {
        seasonId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region_id" field.</summary>
    public const int RegionIdFieldNumber = 2;
    private string regionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegionId {
      get { return regionId_; }
      set {
        regionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scores" field.</summary>
    public const int ScoresFieldNumber = 3;
    private global::WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse.Types.FlooNetworkRegionScores scores_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse.Types.FlooNetworkRegionScores Scores {
      get { return scores_; }
      set {
        scores_ = value;
      }
    }

    /// <summary>Field number for the "region_name" field.</summary>
    public const int RegionNameFieldNumber = 4;
    private string regionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegionName {
      get { return regionName_; }
      set {
        regionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetFlooNetworkRegionScoresResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetFlooNetworkRegionScoresResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SeasonId != other.SeasonId) return false;
      if (RegionId != other.RegionId) return false;
      if (!object.Equals(Scores, other.Scores)) return false;
      if (RegionName != other.RegionName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SeasonId.Length != 0) hash ^= SeasonId.GetHashCode();
      if (RegionId.Length != 0) hash ^= RegionId.GetHashCode();
      if (scores_ != null) hash ^= Scores.GetHashCode();
      if (RegionName.Length != 0) hash ^= RegionName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SeasonId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SeasonId);
      }
      if (RegionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RegionId);
      }
      if (scores_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Scores);
      }
      if (RegionName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RegionName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SeasonId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeasonId);
      }
      if (RegionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionId);
      }
      if (scores_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scores);
      }
      if (RegionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetFlooNetworkRegionScoresResponse other) {
      if (other == null) {
        return;
      }
      if (other.SeasonId.Length != 0) {
        SeasonId = other.SeasonId;
      }
      if (other.RegionId.Length != 0) {
        RegionId = other.RegionId;
      }
      if (other.scores_ != null) {
        if (scores_ == null) {
          Scores = new global::WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse.Types.FlooNetworkRegionScores();
        }
        Scores.MergeFrom(other.Scores);
      }
      if (other.RegionName.Length != 0) {
        RegionName = other.RegionName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SeasonId = input.ReadString();
            break;
          }
          case 18: {
            RegionId = input.ReadString();
            break;
          }
          case 26: {
            if (scores_ == null) {
              Scores = new global::WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse.Types.FlooNetworkRegionScores();
            }
            input.ReadMessage(Scores);
            break;
          }
          case 34: {
            RegionName = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetFlooNetworkRegionScoresResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class FlooNetworkRegionScores : pb::IMessage<FlooNetworkRegionScores> {
        private static readonly pb::MessageParser<FlooNetworkRegionScores> _parser = new pb::MessageParser<FlooNetworkRegionScores>(() => new FlooNetworkRegionScores());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FlooNetworkRegionScores> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FlooNetworkRegionScores() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FlooNetworkRegionScores(FlooNetworkRegionScores other) : this() {
          seasonId_ = other.seasonId_;
          regionId_ = other.regionId_;
          pointsPerTeam_ = other.pointsPerTeam_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FlooNetworkRegionScores Clone() {
          return new FlooNetworkRegionScores(this);
        }

        /// <summary>Field number for the "season_id" field.</summary>
        public const int SeasonIdFieldNumber = 1;
        private string seasonId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SeasonId {
          get { return seasonId_; }
          set {
            seasonId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "region_id" field.</summary>
        public const int RegionIdFieldNumber = 2;
        private string regionId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RegionId {
          get { return regionId_; }
          set {
            regionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "points_per_team" field.</summary>
        public const int PointsPerTeamFieldNumber = 3;
        private static readonly pbc::MapField<string, long>.Codec _map_pointsPerTeam_codec
            = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt64(16), 26);
        private readonly pbc::MapField<string, long> pointsPerTeam_ = new pbc::MapField<string, long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, long> PointsPerTeam {
          get { return pointsPerTeam_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FlooNetworkRegionScores);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FlooNetworkRegionScores other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SeasonId != other.SeasonId) return false;
          if (RegionId != other.RegionId) return false;
          if (!PointsPerTeam.Equals(other.PointsPerTeam)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SeasonId.Length != 0) hash ^= SeasonId.GetHashCode();
          if (RegionId.Length != 0) hash ^= RegionId.GetHashCode();
          hash ^= PointsPerTeam.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (SeasonId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SeasonId);
          }
          if (RegionId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(RegionId);
          }
          pointsPerTeam_.WriteTo(output, _map_pointsPerTeam_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SeasonId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SeasonId);
          }
          if (RegionId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionId);
          }
          size += pointsPerTeam_.CalculateSize(_map_pointsPerTeam_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FlooNetworkRegionScores other) {
          if (other == null) {
            return;
          }
          if (other.SeasonId.Length != 0) {
            SeasonId = other.SeasonId;
          }
          if (other.RegionId.Length != 0) {
            RegionId = other.RegionId;
          }
          pointsPerTeam_.Add(other.pointsPerTeam_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                SeasonId = input.ReadString();
                break;
              }
              case 18: {
                RegionId = input.ReadString();
                break;
              }
              case 26: {
                pointsPerTeam_.AddEntriesFrom(input, _map_pointsPerTeam_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
