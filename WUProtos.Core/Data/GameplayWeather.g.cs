// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/GameplayWeather.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/GameplayWeather.proto</summary>
  public static partial class GameplayWeatherReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/GameplayWeather.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameplayWeatherReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNXVVByb3Rvcy9EYXRhL0dhbWVwbGF5V2VhdGhlci5wcm90bxINV1VQcm90",
            "b3MuRGF0YSLRAQoPR2FtZXBsYXlXZWF0aGVyEksKEmdhbWVwbGF5X2NvbmRp",
            "dGlvbhgBIAEoDjIvLldVUHJvdG9zLkRhdGEuR2FtZXBsYXlXZWF0aGVyLldl",
            "YXRoZXJDb25kaXRpb24icQoQV2VhdGhlckNvbmRpdGlvbhIICgROT05FEAAS",
            "CQoFQ0xFQVIQARIJCgVSQUlOWRACEhEKDVBBUlRMWV9DTE9VRFkQAxIMCghP",
            "VkVSQ0FTVBAEEgkKBVdJTkRZEAUSCAoEU05PVxAGEgcKA0ZPRxAHYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.GameplayWeather), global::WUProtos.Data.GameplayWeather.Parser, new[]{ "GameplayCondition" }, null, new[]{ typeof(global::WUProtos.Data.GameplayWeather.Types.WeatherCondition) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GameplayWeather : pb::IMessage<GameplayWeather> {
    private static readonly pb::MessageParser<GameplayWeather> _parser = new pb::MessageParser<GameplayWeather>(() => new GameplayWeather());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameplayWeather> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.GameplayWeatherReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameplayWeather() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameplayWeather(GameplayWeather other) : this() {
      gameplayCondition_ = other.gameplayCondition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameplayWeather Clone() {
      return new GameplayWeather(this);
    }

    /// <summary>Field number for the "gameplay_condition" field.</summary>
    public const int GameplayConditionFieldNumber = 1;
    private global::WUProtos.Data.GameplayWeather.Types.WeatherCondition gameplayCondition_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.GameplayWeather.Types.WeatherCondition GameplayCondition {
      get { return gameplayCondition_; }
      set {
        gameplayCondition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameplayWeather);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameplayWeather other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameplayCondition != other.GameplayCondition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameplayCondition != 0) hash ^= GameplayCondition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameplayCondition != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GameplayCondition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameplayCondition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameplayCondition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameplayWeather other) {
      if (other == null) {
        return;
      }
      if (other.GameplayCondition != 0) {
        GameplayCondition = other.GameplayCondition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameplayCondition = (global::WUProtos.Data.GameplayWeather.Types.WeatherCondition) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GameplayWeather message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum WeatherCondition {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("CLEAR")] Clear = 1,
        [pbr::OriginalName("RAINY")] Rainy = 2,
        [pbr::OriginalName("PARTLY_CLOUDY")] PartlyCloudy = 3,
        [pbr::OriginalName("OVERCAST")] Overcast = 4,
        [pbr::OriginalName("WINDY")] Windy = 5,
        [pbr::OriginalName("SNOW")] Snow = 6,
        [pbr::OriginalName("FOG")] Fog = 7,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
