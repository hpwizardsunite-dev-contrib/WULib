// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/WeatherAlertSettings.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/WeatherAlertSettings.proto</summary>
  public static partial class WeatherAlertSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/WeatherAlertSettings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WeatherAlertSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CihXVVByb3Rvcy9EYXRhL1dlYXRoZXJBbGVydFNldHRpbmdzLnByb3RvEg1X",
            "VVByb3Rvcy5EYXRhIowHChRXZWF0aGVyQWxlcnRTZXR0aW5ncxIUCgx3YXJu",
            "X3dlYXRoZXIYASABKAgSUwoQZGVmYXVsdF9zZXZlcml0eRgCIAEoDjI5LldV",
            "UHJvdG9zLkRhdGEuV2VhdGhlckFsZXJ0U2V0dGluZ3MuV2VhdGhlckFsZXJ0",
            "LlNldmVyaXR5EkgKB2lnbm9yZXMYAyADKAsyNy5XVVByb3Rvcy5EYXRhLldl",
            "YXRoZXJBbGVydFNldHRpbmdzLkFsZXJ0SWdub3JlU2V0dGluZ3MSSgoIZW5m",
            "b3JjZXMYBCADKAsyOC5XVVByb3Rvcy5EYXRhLldlYXRoZXJBbGVydFNldHRp",
            "bmdzLkFsZXJ0RW5mb3JjZVNldHRpbmdzGrMBChRBbGVydEVuZm9yY2VTZXR0",
            "aW5ncxIUCgxjb3VudHJ5X2NvZGUYASABKAkSQgoEd2hlbhgCIAEoCzI0LldV",
            "UHJvdG9zLkRhdGEuV2VhdGhlckFsZXJ0U2V0dGluZ3MuRW5mb3JjZUNvbmRp",
            "dGlvbhpBChBFbmZvcmNlQ29uZGl0aW9uEg0KBWNvbG9yGAEgAygJEgwKBHR5",
            "cGUYAiADKAkSEAoIY2F0ZWdvcnkYAyADKAkaogEKE0FsZXJ0SWdub3JlU2V0",
            "dGluZ3MSFAoMY291bnRyeV9jb2RlGAEgASgJEkMKBHdoZW4YAiABKAsyNS5X",
            "VVByb3Rvcy5EYXRhLldlYXRoZXJBbGVydFNldHRpbmdzLk92ZXJyaWRlQ29u",
            "ZGl0aW9uGjAKEU92ZXJyaWRlQ29uZGl0aW9uEg0KBWNvbG9yGAEgAygJEgwK",
            "BHR5cGUYAiADKAkaQQoQRW5mb3JjZUNvbmRpdGlvbhINCgVjb2xvchgBIAMo",
            "CRIMCgR0eXBlGAIgAygJEhAKCGNhdGVnb3J5GAMgAygJGjAKEU92ZXJyaWRl",
            "Q29uZGl0aW9uEg0KBWNvbG9yGAEgAygJEgwKBHR5cGUYAiADKAkaogEKDFdl",
            "YXRoZXJBbGVydBJLCghzZXZlcml0eRgBIAEoDjI5LldVUHJvdG9zLkRhdGEu",
            "V2VhdGhlckFsZXJ0U2V0dGluZ3MuV2VhdGhlckFsZXJ0LlNldmVyaXR5EhQK",
            "DHdhcm5fd2VhdGhlchgCIAEoCCIvCghTZXZlcml0eRIICgROT05FEAASDAoI",
            "TU9ERVJBVEUQARILCgdFWFRSRU1FEAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.WeatherAlertSettings), global::WUProtos.Data.WeatherAlertSettings.Parser, new[]{ "WarnWeather", "DefaultSeverity", "Ignores", "Enforces" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.WeatherAlertSettings.Types.AlertEnforceSettings), global::WUProtos.Data.WeatherAlertSettings.Types.AlertEnforceSettings.Parser, new[]{ "CountryCode", "When" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.WeatherAlertSettings.Types.AlertEnforceSettings.Types.EnforceCondition), global::WUProtos.Data.WeatherAlertSettings.Types.AlertEnforceSettings.Types.EnforceCondition.Parser, new[]{ "Color", "Type", "Category" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.WeatherAlertSettings.Types.AlertIgnoreSettings), global::WUProtos.Data.WeatherAlertSettings.Types.AlertIgnoreSettings.Parser, new[]{ "CountryCode", "When" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.WeatherAlertSettings.Types.AlertIgnoreSettings.Types.OverrideCondition), global::WUProtos.Data.WeatherAlertSettings.Types.AlertIgnoreSettings.Types.OverrideCondition.Parser, new[]{ "Color", "Type" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.WeatherAlertSettings.Types.EnforceCondition), global::WUProtos.Data.WeatherAlertSettings.Types.EnforceCondition.Parser, new[]{ "Color", "Type", "Category" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.WeatherAlertSettings.Types.OverrideCondition), global::WUProtos.Data.WeatherAlertSettings.Types.OverrideCondition.Parser, new[]{ "Color", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.WeatherAlertSettings.Types.WeatherAlert), global::WUProtos.Data.WeatherAlertSettings.Types.WeatherAlert.Parser, new[]{ "Severity", "WarnWeather" }, null, new[]{ typeof(global::WUProtos.Data.WeatherAlertSettings.Types.WeatherAlert.Types.Severity) }, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class WeatherAlertSettings : pb::IMessage<WeatherAlertSettings> {
    private static readonly pb::MessageParser<WeatherAlertSettings> _parser = new pb::MessageParser<WeatherAlertSettings>(() => new WeatherAlertSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WeatherAlertSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.WeatherAlertSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeatherAlertSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeatherAlertSettings(WeatherAlertSettings other) : this() {
      warnWeather_ = other.warnWeather_;
      defaultSeverity_ = other.defaultSeverity_;
      ignores_ = other.ignores_.Clone();
      enforces_ = other.enforces_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WeatherAlertSettings Clone() {
      return new WeatherAlertSettings(this);
    }

    /// <summary>Field number for the "warn_weather" field.</summary>
    public const int WarnWeatherFieldNumber = 1;
    private bool warnWeather_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WarnWeather {
      get { return warnWeather_; }
      set {
        warnWeather_ = value;
      }
    }

    /// <summary>Field number for the "default_severity" field.</summary>
    public const int DefaultSeverityFieldNumber = 2;
    private global::WUProtos.Data.WeatherAlertSettings.Types.WeatherAlert.Types.Severity defaultSeverity_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::WUProtos.Data.WeatherAlertSettings.Types.WeatherAlert.Types.Severity DefaultSeverity {
      get { return defaultSeverity_; }
      set {
        defaultSeverity_ = value;
      }
    }

    /// <summary>Field number for the "ignores" field.</summary>
    public const int IgnoresFieldNumber = 3;
    private static readonly pb::FieldCodec<global::WUProtos.Data.WeatherAlertSettings.Types.AlertIgnoreSettings> _repeated_ignores_codec
        = pb::FieldCodec.ForMessage(26, global::WUProtos.Data.WeatherAlertSettings.Types.AlertIgnoreSettings.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.WeatherAlertSettings.Types.AlertIgnoreSettings> ignores_ = new pbc::RepeatedField<global::WUProtos.Data.WeatherAlertSettings.Types.AlertIgnoreSettings>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.WeatherAlertSettings.Types.AlertIgnoreSettings> Ignores {
      get { return ignores_; }
    }

    /// <summary>Field number for the "enforces" field.</summary>
    public const int EnforcesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::WUProtos.Data.WeatherAlertSettings.Types.AlertEnforceSettings> _repeated_enforces_codec
        = pb::FieldCodec.ForMessage(34, global::WUProtos.Data.WeatherAlertSettings.Types.AlertEnforceSettings.Parser);
    private readonly pbc::RepeatedField<global::WUProtos.Data.WeatherAlertSettings.Types.AlertEnforceSettings> enforces_ = new pbc::RepeatedField<global::WUProtos.Data.WeatherAlertSettings.Types.AlertEnforceSettings>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::WUProtos.Data.WeatherAlertSettings.Types.AlertEnforceSettings> Enforces {
      get { return enforces_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WeatherAlertSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WeatherAlertSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WarnWeather != other.WarnWeather) return false;
      if (DefaultSeverity != other.DefaultSeverity) return false;
      if(!ignores_.Equals(other.ignores_)) return false;
      if(!enforces_.Equals(other.enforces_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WarnWeather != false) hash ^= WarnWeather.GetHashCode();
      if (DefaultSeverity != 0) hash ^= DefaultSeverity.GetHashCode();
      hash ^= ignores_.GetHashCode();
      hash ^= enforces_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WarnWeather != false) {
        output.WriteRawTag(8);
        output.WriteBool(WarnWeather);
      }
      if (DefaultSeverity != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DefaultSeverity);
      }
      ignores_.WriteTo(output, _repeated_ignores_codec);
      enforces_.WriteTo(output, _repeated_enforces_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WarnWeather != false) {
        size += 1 + 1;
      }
      if (DefaultSeverity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DefaultSeverity);
      }
      size += ignores_.CalculateSize(_repeated_ignores_codec);
      size += enforces_.CalculateSize(_repeated_enforces_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WeatherAlertSettings other) {
      if (other == null) {
        return;
      }
      if (other.WarnWeather != false) {
        WarnWeather = other.WarnWeather;
      }
      if (other.DefaultSeverity != 0) {
        DefaultSeverity = other.DefaultSeverity;
      }
      ignores_.Add(other.ignores_);
      enforces_.Add(other.enforces_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WarnWeather = input.ReadBool();
            break;
          }
          case 16: {
            DefaultSeverity = (global::WUProtos.Data.WeatherAlertSettings.Types.WeatherAlert.Types.Severity) input.ReadEnum();
            break;
          }
          case 26: {
            ignores_.AddEntriesFrom(input, _repeated_ignores_codec);
            break;
          }
          case 34: {
            enforces_.AddEntriesFrom(input, _repeated_enforces_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the WeatherAlertSettings message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class AlertEnforceSettings : pb::IMessage<AlertEnforceSettings> {
        private static readonly pb::MessageParser<AlertEnforceSettings> _parser = new pb::MessageParser<AlertEnforceSettings>(() => new AlertEnforceSettings());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AlertEnforceSettings> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.WeatherAlertSettings.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AlertEnforceSettings() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AlertEnforceSettings(AlertEnforceSettings other) : this() {
          countryCode_ = other.countryCode_;
          when_ = other.when_ != null ? other.when_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AlertEnforceSettings Clone() {
          return new AlertEnforceSettings(this);
        }

        /// <summary>Field number for the "country_code" field.</summary>
        public const int CountryCodeFieldNumber = 1;
        private string countryCode_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CountryCode {
          get { return countryCode_; }
          set {
            countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "when" field.</summary>
        public const int WhenFieldNumber = 2;
        private global::WUProtos.Data.WeatherAlertSettings.Types.EnforceCondition when_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.WeatherAlertSettings.Types.EnforceCondition When {
          get { return when_; }
          set {
            when_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AlertEnforceSettings);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AlertEnforceSettings other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CountryCode != other.CountryCode) return false;
          if (!object.Equals(When, other.When)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (CountryCode.Length != 0) hash ^= CountryCode.GetHashCode();
          if (when_ != null) hash ^= When.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (CountryCode.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(CountryCode);
          }
          if (when_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(When);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (CountryCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
          }
          if (when_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(When);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AlertEnforceSettings other) {
          if (other == null) {
            return;
          }
          if (other.CountryCode.Length != 0) {
            CountryCode = other.CountryCode;
          }
          if (other.when_ != null) {
            if (when_ == null) {
              When = new global::WUProtos.Data.WeatherAlertSettings.Types.EnforceCondition();
            }
            When.MergeFrom(other.When);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                CountryCode = input.ReadString();
                break;
              }
              case 18: {
                if (when_ == null) {
                  When = new global::WUProtos.Data.WeatherAlertSettings.Types.EnforceCondition();
                }
                input.ReadMessage(When);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the AlertEnforceSettings message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class EnforceCondition : pb::IMessage<EnforceCondition> {
            private static readonly pb::MessageParser<EnforceCondition> _parser = new pb::MessageParser<EnforceCondition>(() => new EnforceCondition());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<EnforceCondition> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.WeatherAlertSettings.Types.AlertEnforceSettings.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EnforceCondition() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EnforceCondition(EnforceCondition other) : this() {
              color_ = other.color_.Clone();
              type_ = other.type_.Clone();
              category_ = other.category_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public EnforceCondition Clone() {
              return new EnforceCondition(this);
            }

            /// <summary>Field number for the "color" field.</summary>
            public const int ColorFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_color_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> color_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> Color {
              get { return color_; }
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 2;
            private static readonly pb::FieldCodec<string> _repeated_type_codec
                = pb::FieldCodec.ForString(18);
            private readonly pbc::RepeatedField<string> type_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> Type {
              get { return type_; }
            }

            /// <summary>Field number for the "category" field.</summary>
            public const int CategoryFieldNumber = 3;
            private static readonly pb::FieldCodec<string> _repeated_category_codec
                = pb::FieldCodec.ForString(26);
            private readonly pbc::RepeatedField<string> category_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> Category {
              get { return category_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as EnforceCondition);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(EnforceCondition other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!color_.Equals(other.color_)) return false;
              if(!type_.Equals(other.type_)) return false;
              if(!category_.Equals(other.category_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= color_.GetHashCode();
              hash ^= type_.GetHashCode();
              hash ^= category_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              color_.WriteTo(output, _repeated_color_codec);
              type_.WriteTo(output, _repeated_type_codec);
              category_.WriteTo(output, _repeated_category_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += color_.CalculateSize(_repeated_color_codec);
              size += type_.CalculateSize(_repeated_type_codec);
              size += category_.CalculateSize(_repeated_category_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(EnforceCondition other) {
              if (other == null) {
                return;
              }
              color_.Add(other.color_);
              type_.Add(other.type_);
              category_.Add(other.category_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    color_.AddEntriesFrom(input, _repeated_color_codec);
                    break;
                  }
                  case 18: {
                    type_.AddEntriesFrom(input, _repeated_type_codec);
                    break;
                  }
                  case 26: {
                    category_.AddEntriesFrom(input, _repeated_category_codec);
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class AlertIgnoreSettings : pb::IMessage<AlertIgnoreSettings> {
        private static readonly pb::MessageParser<AlertIgnoreSettings> _parser = new pb::MessageParser<AlertIgnoreSettings>(() => new AlertIgnoreSettings());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AlertIgnoreSettings> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.WeatherAlertSettings.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AlertIgnoreSettings() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AlertIgnoreSettings(AlertIgnoreSettings other) : this() {
          countryCode_ = other.countryCode_;
          when_ = other.when_ != null ? other.when_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AlertIgnoreSettings Clone() {
          return new AlertIgnoreSettings(this);
        }

        /// <summary>Field number for the "country_code" field.</summary>
        public const int CountryCodeFieldNumber = 1;
        private string countryCode_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CountryCode {
          get { return countryCode_; }
          set {
            countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "when" field.</summary>
        public const int WhenFieldNumber = 2;
        private global::WUProtos.Data.WeatherAlertSettings.Types.OverrideCondition when_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.WeatherAlertSettings.Types.OverrideCondition When {
          get { return when_; }
          set {
            when_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AlertIgnoreSettings);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AlertIgnoreSettings other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CountryCode != other.CountryCode) return false;
          if (!object.Equals(When, other.When)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (CountryCode.Length != 0) hash ^= CountryCode.GetHashCode();
          if (when_ != null) hash ^= When.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (CountryCode.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(CountryCode);
          }
          if (when_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(When);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (CountryCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
          }
          if (when_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(When);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AlertIgnoreSettings other) {
          if (other == null) {
            return;
          }
          if (other.CountryCode.Length != 0) {
            CountryCode = other.CountryCode;
          }
          if (other.when_ != null) {
            if (when_ == null) {
              When = new global::WUProtos.Data.WeatherAlertSettings.Types.OverrideCondition();
            }
            When.MergeFrom(other.When);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                CountryCode = input.ReadString();
                break;
              }
              case 18: {
                if (when_ == null) {
                  When = new global::WUProtos.Data.WeatherAlertSettings.Types.OverrideCondition();
                }
                input.ReadMessage(When);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the AlertIgnoreSettings message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class OverrideCondition : pb::IMessage<OverrideCondition> {
            private static readonly pb::MessageParser<OverrideCondition> _parser = new pb::MessageParser<OverrideCondition>(() => new OverrideCondition());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<OverrideCondition> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::WUProtos.Data.WeatherAlertSettings.Types.AlertIgnoreSettings.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public OverrideCondition() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public OverrideCondition(OverrideCondition other) : this() {
              color_ = other.color_.Clone();
              type_ = other.type_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public OverrideCondition Clone() {
              return new OverrideCondition(this);
            }

            /// <summary>Field number for the "color" field.</summary>
            public const int ColorFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_color_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> color_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> Color {
              get { return color_; }
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 2;
            private static readonly pb::FieldCodec<string> _repeated_type_codec
                = pb::FieldCodec.ForString(18);
            private readonly pbc::RepeatedField<string> type_ = new pbc::RepeatedField<string>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> Type {
              get { return type_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as OverrideCondition);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(OverrideCondition other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!color_.Equals(other.color_)) return false;
              if(!type_.Equals(other.type_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= color_.GetHashCode();
              hash ^= type_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              color_.WriteTo(output, _repeated_color_codec);
              type_.WriteTo(output, _repeated_type_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += color_.CalculateSize(_repeated_color_codec);
              size += type_.CalculateSize(_repeated_type_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(OverrideCondition other) {
              if (other == null) {
                return;
              }
              color_.Add(other.color_);
              type_.Add(other.type_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    color_.AddEntriesFrom(input, _repeated_color_codec);
                    break;
                  }
                  case 18: {
                    type_.AddEntriesFrom(input, _repeated_type_codec);
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class EnforceCondition : pb::IMessage<EnforceCondition> {
        private static readonly pb::MessageParser<EnforceCondition> _parser = new pb::MessageParser<EnforceCondition>(() => new EnforceCondition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EnforceCondition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.WeatherAlertSettings.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnforceCondition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnforceCondition(EnforceCondition other) : this() {
          color_ = other.color_.Clone();
          type_ = other.type_.Clone();
          category_ = other.category_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnforceCondition Clone() {
          return new EnforceCondition(this);
        }

        /// <summary>Field number for the "color" field.</summary>
        public const int ColorFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_color_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> color_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Color {
          get { return color_; }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_type_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> type_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Type {
          get { return type_; }
        }

        /// <summary>Field number for the "category" field.</summary>
        public const int CategoryFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _repeated_category_codec
            = pb::FieldCodec.ForString(26);
        private readonly pbc::RepeatedField<string> category_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Category {
          get { return category_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EnforceCondition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EnforceCondition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!color_.Equals(other.color_)) return false;
          if(!type_.Equals(other.type_)) return false;
          if(!category_.Equals(other.category_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= color_.GetHashCode();
          hash ^= type_.GetHashCode();
          hash ^= category_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          color_.WriteTo(output, _repeated_color_codec);
          type_.WriteTo(output, _repeated_type_codec);
          category_.WriteTo(output, _repeated_category_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += color_.CalculateSize(_repeated_color_codec);
          size += type_.CalculateSize(_repeated_type_codec);
          size += category_.CalculateSize(_repeated_category_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EnforceCondition other) {
          if (other == null) {
            return;
          }
          color_.Add(other.color_);
          type_.Add(other.type_);
          category_.Add(other.category_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                color_.AddEntriesFrom(input, _repeated_color_codec);
                break;
              }
              case 18: {
                type_.AddEntriesFrom(input, _repeated_type_codec);
                break;
              }
              case 26: {
                category_.AddEntriesFrom(input, _repeated_category_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class OverrideCondition : pb::IMessage<OverrideCondition> {
        private static readonly pb::MessageParser<OverrideCondition> _parser = new pb::MessageParser<OverrideCondition>(() => new OverrideCondition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OverrideCondition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.WeatherAlertSettings.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OverrideCondition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OverrideCondition(OverrideCondition other) : this() {
          color_ = other.color_.Clone();
          type_ = other.type_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OverrideCondition Clone() {
          return new OverrideCondition(this);
        }

        /// <summary>Field number for the "color" field.</summary>
        public const int ColorFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_color_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> color_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Color {
          get { return color_; }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_type_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> type_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Type {
          get { return type_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as OverrideCondition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OverrideCondition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!color_.Equals(other.color_)) return false;
          if(!type_.Equals(other.type_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= color_.GetHashCode();
          hash ^= type_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          color_.WriteTo(output, _repeated_color_codec);
          type_.WriteTo(output, _repeated_type_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += color_.CalculateSize(_repeated_color_codec);
          size += type_.CalculateSize(_repeated_type_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OverrideCondition other) {
          if (other == null) {
            return;
          }
          color_.Add(other.color_);
          type_.Add(other.type_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                color_.AddEntriesFrom(input, _repeated_color_codec);
                break;
              }
              case 18: {
                type_.AddEntriesFrom(input, _repeated_type_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class WeatherAlert : pb::IMessage<WeatherAlert> {
        private static readonly pb::MessageParser<WeatherAlert> _parser = new pb::MessageParser<WeatherAlert>(() => new WeatherAlert());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<WeatherAlert> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::WUProtos.Data.WeatherAlertSettings.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WeatherAlert() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WeatherAlert(WeatherAlert other) : this() {
          severity_ = other.severity_;
          warnWeather_ = other.warnWeather_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WeatherAlert Clone() {
          return new WeatherAlert(this);
        }

        /// <summary>Field number for the "severity" field.</summary>
        public const int SeverityFieldNumber = 1;
        private global::WUProtos.Data.WeatherAlertSettings.Types.WeatherAlert.Types.Severity severity_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::WUProtos.Data.WeatherAlertSettings.Types.WeatherAlert.Types.Severity Severity {
          get { return severity_; }
          set {
            severity_ = value;
          }
        }

        /// <summary>Field number for the "warn_weather" field.</summary>
        public const int WarnWeatherFieldNumber = 2;
        private bool warnWeather_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool WarnWeather {
          get { return warnWeather_; }
          set {
            warnWeather_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as WeatherAlert);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(WeatherAlert other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Severity != other.Severity) return false;
          if (WarnWeather != other.WarnWeather) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Severity != 0) hash ^= Severity.GetHashCode();
          if (WarnWeather != false) hash ^= WarnWeather.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Severity != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Severity);
          }
          if (WarnWeather != false) {
            output.WriteRawTag(16);
            output.WriteBool(WarnWeather);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Severity != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Severity);
          }
          if (WarnWeather != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(WeatherAlert other) {
          if (other == null) {
            return;
          }
          if (other.Severity != 0) {
            Severity = other.Severity;
          }
          if (other.WarnWeather != false) {
            WarnWeather = other.WarnWeather;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Severity = (global::WUProtos.Data.WeatherAlertSettings.Types.WeatherAlert.Types.Severity) input.ReadEnum();
                break;
              }
              case 16: {
                WarnWeather = input.ReadBool();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the WeatherAlert message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum Severity {
            [pbr::OriginalName("NONE")] None = 0,
            [pbr::OriginalName("MODERATE")] Moderate = 1,
            [pbr::OriginalName("EXTREME")] Extreme = 2,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
