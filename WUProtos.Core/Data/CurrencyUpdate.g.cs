// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WUProtos/Data/CurrencyUpdate.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace WUProtos.Data {

  /// <summary>Holder for reflection information generated from WUProtos/Data/CurrencyUpdate.proto</summary>
  public static partial class CurrencyUpdateReflection {

    #region Descriptor
    /// <summary>File descriptor for WUProtos/Data/CurrencyUpdate.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CurrencyUpdateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJXVVByb3Rvcy9EYXRhL0N1cnJlbmN5VXBkYXRlLnByb3RvEg1XVVByb3Rv",
            "cy5EYXRhInkKDkN1cnJlbmN5VXBkYXRlEhUKDWN1cnJlbmN5X25hbWUYASAB",
            "KAkSFgoOY3VycmVuY3lfZGVsdGEYAiABKAUSGAoQY3VycmVuY3lfYmFsYW5j",
            "ZRgDIAEoBRIeChZmaWF0X3B1cmNoYXNlZF9iYWxhbmNlGAQgASgFYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::WUProtos.Data.CurrencyUpdate), global::WUProtos.Data.CurrencyUpdate.Parser, new[]{ "CurrencyName", "CurrencyDelta", "CurrencyBalance", "FiatPurchasedBalance" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CurrencyUpdate : pb::IMessage<CurrencyUpdate> {
    private static readonly pb::MessageParser<CurrencyUpdate> _parser = new pb::MessageParser<CurrencyUpdate>(() => new CurrencyUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurrencyUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::WUProtos.Data.CurrencyUpdateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurrencyUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurrencyUpdate(CurrencyUpdate other) : this() {
      currencyName_ = other.currencyName_;
      currencyDelta_ = other.currencyDelta_;
      currencyBalance_ = other.currencyBalance_;
      fiatPurchasedBalance_ = other.fiatPurchasedBalance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurrencyUpdate Clone() {
      return new CurrencyUpdate(this);
    }

    /// <summary>Field number for the "currency_name" field.</summary>
    public const int CurrencyNameFieldNumber = 1;
    private string currencyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyName {
      get { return currencyName_; }
      set {
        currencyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currency_delta" field.</summary>
    public const int CurrencyDeltaFieldNumber = 2;
    private int currencyDelta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrencyDelta {
      get { return currencyDelta_; }
      set {
        currencyDelta_ = value;
      }
    }

    /// <summary>Field number for the "currency_balance" field.</summary>
    public const int CurrencyBalanceFieldNumber = 3;
    private int currencyBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrencyBalance {
      get { return currencyBalance_; }
      set {
        currencyBalance_ = value;
      }
    }

    /// <summary>Field number for the "fiat_purchased_balance" field.</summary>
    public const int FiatPurchasedBalanceFieldNumber = 4;
    private int fiatPurchasedBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FiatPurchasedBalance {
      get { return fiatPurchasedBalance_; }
      set {
        fiatPurchasedBalance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurrencyUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurrencyUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrencyName != other.CurrencyName) return false;
      if (CurrencyDelta != other.CurrencyDelta) return false;
      if (CurrencyBalance != other.CurrencyBalance) return false;
      if (FiatPurchasedBalance != other.FiatPurchasedBalance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrencyName.Length != 0) hash ^= CurrencyName.GetHashCode();
      if (CurrencyDelta != 0) hash ^= CurrencyDelta.GetHashCode();
      if (CurrencyBalance != 0) hash ^= CurrencyBalance.GetHashCode();
      if (FiatPurchasedBalance != 0) hash ^= FiatPurchasedBalance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurrencyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CurrencyName);
      }
      if (CurrencyDelta != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrencyDelta);
      }
      if (CurrencyBalance != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurrencyBalance);
      }
      if (FiatPurchasedBalance != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FiatPurchasedBalance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrencyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyName);
      }
      if (CurrencyDelta != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrencyDelta);
      }
      if (CurrencyBalance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrencyBalance);
      }
      if (FiatPurchasedBalance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FiatPurchasedBalance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurrencyUpdate other) {
      if (other == null) {
        return;
      }
      if (other.CurrencyName.Length != 0) {
        CurrencyName = other.CurrencyName;
      }
      if (other.CurrencyDelta != 0) {
        CurrencyDelta = other.CurrencyDelta;
      }
      if (other.CurrencyBalance != 0) {
        CurrencyBalance = other.CurrencyBalance;
      }
      if (other.FiatPurchasedBalance != 0) {
        FiatPurchasedBalance = other.FiatPurchasedBalance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CurrencyName = input.ReadString();
            break;
          }
          case 16: {
            CurrencyDelta = input.ReadInt32();
            break;
          }
          case 24: {
            CurrencyBalance = input.ReadInt32();
            break;
          }
          case 32: {
            FiatPurchasedBalance = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
